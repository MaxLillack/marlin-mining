// EXCERPT FROM MERGE  Marlin/temperature.cpp

<<<<<<< HEAD
    #ifdef PIDTEMPBED
      float pid_output = get_pid_output_bed();
=======
  #ifdef PIDTEMPBED
    pid_input = current_temperature_bed;

    #ifndef PID_OPENLOOP
		  pid_error_bed = target_temperature_bed - pid_input;
		  pTerm_bed = bedKp * pid_error_bed;
		  temp_iState_bed += pid_error_bed;
		  temp_iState_bed = constrain(temp_iState_bed, temp_iState_min_bed, temp_iState_max_bed);
		  iTerm_bed = bedKi * temp_iState_bed;

		  //K1 defined in Configuration.h in the PID settings
		  #define K2 (1.0-K1)
		  dTerm_bed= (bedKd * (pid_input - temp_dState_bed))*K2 + (K1 * dTerm_bed);
		  temp_dState_bed = pid_input;

		  pid_output = pTerm_bed + iTerm_bed - dTerm_bed;
      if (pid_output > MAX_BED_POWER) {
        if (pid_error_bed > 0 )  temp_iState_bed -= pid_error_bed; // conditional un-integration
        pid_output=MAX_BED_POWER;
      } else if (pid_output < 0){
        if (pid_error_bed < 0 )  temp_iState_bed -= pid_error_bed; // conditional un-integration
        pid_output=0;
      }

    #else 
      pid_output = constrain(target_temperature_bed, 0, MAX_BED_POWER);
    #endif //PID_OPENLOOP
        #ifdef PID_BED_DEBUG
    SERIAL_ECHO_START;
    SERIAL_ECHO(" PID_BED_DEBUG ");
    SERIAL_ECHO(": Input ");
    SERIAL_ECHO(pid_input);
    SERIAL_ECHO(" Output ");
    SERIAL_ECHO(pid_output);
    SERIAL_ECHO(" pTerm ");
    SERIAL_ECHO(pTerm_bed);
    SERIAL_ECHO(" iTerm ");
    SERIAL_ECHO(iTerm_bed);
    SERIAL_ECHO(" dTerm ");
    SERIAL_ECHOLN(dTerm_bed);
    #endif //PID_BED_DEBUG
>>>>>>> 8ccdac9898ca1c724e076ce1de6e4fd2fe4ad622

