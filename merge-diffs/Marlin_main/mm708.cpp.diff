commit 7f622467fc0665bca56fc1604293841eb2e97fa5 (from f036be7c4ed204cc13042724ea46872465998ae5)
Merge: 8686792 f036be7
Author: ErikZalm <erik@vdzalm.eu>
Date:   Sat Mar 30 08:50:34 2013 -0700

    Merge pull request #425 from kefir-/m928_logging
    
    M928 logging

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 164dcf1..016a203 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -117,6 +117,7 @@
 // M220 S<factor in percent>- set speed factor override percentage
 // M221 S<factor in percent>- set extrude factor override percentage
 // M240 - Trigger a camera to take a photograph
+// M300 - Play beepsound S<frequency Hz> P<duration ms>
 // M301 - Set PID parameters P I and D
 // M302 - Allow cold extrudes
 // M303 - PID relay autotune S<temperature> sets the target temperature. (default target temperature = 150C)
@@ -158,12 +159,12 @@ float add_homeing[3]={0,0,0};
 float min_pos[3] = { X_MIN_POS, Y_MIN_POS, Z_MIN_POS };
 float max_pos[3] = { X_MAX_POS, Y_MAX_POS, Z_MAX_POS };
 // Extruder offset, only in XY plane
-#if EXTRUDERS > 1
+#if EXTRUDERS > 1
 float extruder_offset[2][EXTRUDERS] = { 
 #if defined(EXTRUDER_OFFSET_X) && defined(EXTRUDER_OFFSET_Y)
   EXTRUDER_OFFSET_X, EXTRUDER_OFFSET_Y 
 #endif
-}; 
+}; 
 #endif
 uint8_t active_extruder = 0;
 int fanSpeed=0;
@@ -377,6 +378,14 @@ void setup()
   setup_photpin();
   
   lcd_init();
+  
+  #ifdef CONTROLLERFAN_PIN
+    SET_OUTPUT(CONTROLLERFAN_PIN); //Set pin used for driver cooling fan
+  #endif
+  
+  #ifdef EXTRUDERFAN_PIN
+    SET_OUTPUT(EXTRUDERFAN_PIN); //Set pin used for extruder cooling fan
+  #endif
 }
 
 
@@ -1397,7 +1406,7 @@ void process_commands()
       }
       
     }break;
-    #endif // FWRETRACT
+    #endif // FWRETRACT
     #if EXTRUDERS > 1
     case 218: // M218 - set hotend offset (in mm), T<extruder_number> X<offset_on_X> Y<offset_on_Y>
     {
@@ -1422,7 +1431,7 @@ void process_commands()
          SERIAL_ECHO(extruder_offset[Y_AXIS][tmp_extruder]);
       }
       SERIAL_ECHOLN("");
-    }break;
+    }break;
     #endif
     case 220: // M220 S<factor in percent>- set speed factor override percentage
     {
@@ -1440,6 +1449,20 @@ void process_commands()
       }
     }
     break;
+    
+    #if defined(LARGE_FLASH) && LARGE_FLASH == true && defined(BEEPER) && BEEPER > -1
+    case 300: // M300
+    {
+      int beepS = 1;
+      int beepP = 1000;
+      if(code_seen('S')) beepS = code_value();
+      if(code_seen('P')) beepP = code_value();
+      tone(BEEPER, beepS);
+      delay(beepP);
+      noTone(BEEPER);
+    }
+    break;
+    #endif // M300
 
     #ifdef PIDTEMP
     case 301: // M301
@@ -1773,7 +1796,7 @@ void process_commands()
         if(make_move && Stopped == false) {
            prepare_move();
         }
-      }
+      }
       #endif
       SERIAL_ECHO_START;
       SERIAL_ECHO(MSG_ACTIVE_EXTRUDER);
@@ -1970,6 +1993,27 @@ void controllerFan()
 }
 #endif
 
+#ifdef EXTRUDERFAN_PIN
+unsigned long lastExtruderCheck = 0;
+
+void extruderFan()
+{
+  if ((millis() - lastExtruderCheck) >= 2500) //Not a time critical function, so we only check every 2500ms
+  {
+    lastExtruderCheck = millis();
+           
+    if (degHotend(active_extruder) < EXTRUDERFAN_DEC)
+    {
+      WRITE(EXTRUDERFAN_PIN, LOW); //... turn the fan off
+    }
+    else
+    {
+      WRITE(EXTRUDERFAN_PIN, HIGH); //... turn the fan on
+    }
+  }
+}
+#endif
+
 void manage_inactivity() 
 { 
   if( (millis() - previous_millis_cmd) >  max_inactive_time ) 

