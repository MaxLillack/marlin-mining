commit 3d56b9d127f85471e1397aee7841e557f74321d8
Merge: 08a9bd0 cca0474
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jun 7 19:12:46 2016 -0700

    Merge pull request #3979 from thinkyhead/mbl_cell
    
    MBL: cel => cell

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index b033b37..75c7661 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -7386,10 +7386,10 @@ void mesh_buffer_line(float x, float y, float z, const float e, float feed_rate,
     set_current_to_destination();
     return;
   }
-  int pcx = mbl.cel_index_x(current_position[X_AXIS] - home_offset[X_AXIS]);
-  int pcy = mbl.cel_index_y(current_position[Y_AXIS] - home_offset[Y_AXIS]);
-  int cx = mbl.cel_index_x(x - home_offset[X_AXIS]);
-  int cy = mbl.cel_index_y(y - home_offset[Y_AXIS]);
+  int pcx = mbl.cell_index_x(current_position[X_AXIS] - home_offset[X_AXIS]);
+  int pcy = mbl.cell_index_y(current_position[Y_AXIS] - home_offset[Y_AXIS]);
+  int cx = mbl.cell_index_x(x - home_offset[X_AXIS]);
+  int cy = mbl.cell_index_y(y - home_offset[Y_AXIS]);
   NOMORE(pcx, MESH_NUM_X_POINTS - 2);
   NOMORE(pcy, MESH_NUM_Y_POINTS - 2);
   NOMORE(cx,  MESH_NUM_X_POINTS - 2);
diff --git a/Marlin/mesh_bed_leveling.h b/Marlin/mesh_bed_leveling.h
index 69b0b0d..3aa2e4a 100644
--- a/Marlin/mesh_bed_leveling.h
+++ b/Marlin/mesh_bed_leveling.h
@@ -60,12 +60,12 @@
       set_z(px, py, z);
     }
 
-    int8_t cel_index_x(float x) {
+    int8_t cell_index_x(float x) {
       int8_t cx = int(x - (MESH_MIN_X)) / (MESH_X_DIST);
       return constrain(cx, 0, (MESH_NUM_X_POINTS) - 2);
     }
 
-    int8_t cel_index_y(float y) {
+    int8_t cell_index_y(float y) {
       int8_t cy = int(y - (MESH_MIN_Y)) / (MESH_Y_DIST);
       return constrain(cy, 0, (MESH_NUM_Y_POINTS) - 2);
     }
@@ -87,8 +87,8 @@
     }
 
     float get_z(float x0, float y0) {
-      int8_t cx = cel_index_x(x0),
-             cy = cel_index_y(y0);
+      int8_t cx = cell_index_x(x0),
+             cy = cell_index_y(y0);
       if (cx < 0 || cy < 0) return z_offset;
       float z1 = calc_z0(x0,
                          get_probe_x(cx), z_values[cy][cx],
