commit d459fb41b7eba70cb51841fb793baee6d67d2e52 (from ba96059203ba8655061dd6a9dc88e5ebb727d2fa)
Merge: ba96059 804e0d6
Author: Erik van der Zalm <erik@vdzalm.eu>
Date:   Wed May 16 19:22:08 2012 +0200

    Merge branch 'Marlin_v1' of github.com:ErikZalm/Marlin into Marlin_v1

diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index f158767..6c5b974 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -26,6 +26,7 @@
 // Gen6 = 5
 // Gen6 deluxe = 51
 // Sanguinololu 1.2 and above = 62
+// Melzi = 63
 // Ultimaker = 7
 // Teensylu = 8
 // Gen3+ =9
diff --git a/Marlin/pins.h b/Marlin/pins.h
index 0d6b602..95a0369 100644
--- a/Marlin/pins.h
+++ b/Marlin/pins.h
@@ -554,7 +554,10 @@
 * Sanguinololu pin assignment
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 62
+#if MOTHERBOARD == 63
+#define MELZI
+#endif
+#if MOTHERBOARD == 62 || MOTHERBOARD == 63
 #undef MOTHERBOARD
 #define MOTHERBOARD 6
 #define SANGUINOLOLU_V_1_2 
@@ -589,6 +592,11 @@
 
 #define FAN_PIN            -1 
 
+#ifdef MELZI
+#define LED_PIN            28
+#define FAN_PIN            4
+#endif
+
 #define PS_ON_PIN          -1
 #define KILL_PIN           -1
 
@@ -621,6 +629,10 @@
 #define SDPOWER            -1
 #define SDSS               31
 
+#ifdef MELZI
+#define SDSS               24
+#endif
+
 #endif
 
 

commit d459fb41b7eba70cb51841fb793baee6d67d2e52 (from 804e0d611786e0434662d15c6965140165192f3d)
Merge: ba96059 804e0d6
Author: Erik van der Zalm <erik@vdzalm.eu>
Date:   Wed May 16 19:22:08 2012 +0200

    Merge branch 'Marlin_v1' of github.com:ErikZalm/Marlin into Marlin_v1

diff --git a/Marlin/planner.cpp b/Marlin/planner.cpp
index 2763310..ac9ff19 100644
--- a/Marlin/planner.cpp
+++ b/Marlin/planner.cpp
@@ -554,7 +554,7 @@ void plan_buffer_line(const float &x, const float &y, const float &z, const floa
   delta_mm[Y_AXIS] = (target[Y_AXIS]-position[Y_AXIS])/axis_steps_per_unit[Y_AXIS];
   delta_mm[Z_AXIS] = (target[Z_AXIS]-position[Z_AXIS])/axis_steps_per_unit[Z_AXIS];
   delta_mm[E_AXIS] = ((target[E_AXIS]-position[E_AXIS])/axis_steps_per_unit[E_AXIS])*extrudemultiply/100.0;
-  if ( block->steps_x == 0 && block->steps_y == 0 && block->steps_z == 0 ) {
+  if ( block->steps_x <=dropsegments && block->steps_y <=dropsegments && block->steps_z <=dropsegments ) {
     block->millimeters = fabs(delta_mm[E_AXIS]);
   } else {
     block->millimeters = sqrt(square(delta_mm[X_AXIS]) + square(delta_mm[Y_AXIS]) + square(delta_mm[Z_AXIS]));

