commit e02af3e66addebd752e3e673ff5a2c7d270f5c59 (from 537b5c155dd0e35080528bcaba088d0d177aa2bd)
Merge: 537b5c1 953d830
Author: Erik van der Zalm <erik@vdzalm.eu>
Date:   Sat Nov 19 17:23:47 2011 +0100

    Merge remote-tracking branch 'origin/Marlin_v1' into Marlin_v1

diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index 800bb9b..f9a1367 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -297,11 +297,10 @@ const bool ENDSTOPS_INVERTING = true; // set to true to invert the logic of the
 
 //automatic temperature: just for testing, this is very dangerous, keep disabled!
 // not working yet.
-//Erik: the settings currently depend dramatically on skeinforge39 or 41.
 //#define AUTOTEMP
-#define AUTOTEMP_MIN 190
-#define AUTOTEMP_MAX 260
-#define AUTOTEMP_FACTOR 1000.  //current target temperature= min+largest buffered espeeds)*FACTOR
+#ifdef AUTOTEMP
+  #define AUTOTEMP_OLDWEIGHT 0.98
+#endif
 
 
 const int dropsegments=5; //everything with less than this number of steps will be ignored as move and joined with the next movement
diff --git a/Marlin/Marlin.pde b/Marlin/Marlin.pde
index c0fc867..f619854 100644
--- a/Marlin/Marlin.pde
+++ b/Marlin/Marlin.pde
@@ -694,8 +694,10 @@ inline void process_commands()
       break;
     case 109: 
     {// M109 - Wait for extruder heater to reach target.
-        LCD_MESSAGEPGM("Heating...");
-        autotemp_enabled=false;
+        LCD_MESSAGEPGM("Heating...");   
+        #ifdef AUTOTEMP
+          autotemp_enabled=false;
+        #endif
         if (code_seen('S')) setTargetHotend0(code_value());
         #ifdef AUTOTEMP
           if (code_seen('S')) autotemp_min=code_value();
diff --git a/Marlin/planner.cpp b/Marlin/planner.cpp
index 0a226c6..b7f98b6 100644
--- a/Marlin/planner.cpp
+++ b/Marlin/planner.cpp
@@ -382,6 +382,7 @@ block_t *plan_get_current_block() {
 #ifdef AUTOTEMP
 void getHighESpeed()
 {
+  static float oldt=0;
   if(!autotemp_enabled)
     return;
   if(degTargetHotend0()+2<autotemp_min)  //probably temperature set to zero.
@@ -401,12 +402,21 @@ void getHighESpeed()
   }
    
   float g=autotemp_min+high*autotemp_factor;
-  float t=constrain(autotemp_min,g,autotemp_max);
+  float t=g;
+  if(t<autotemp_min)
+    t=autotemp_min;
+  if(t>autotemp_max)
+    t=autotemp_max;
+  if(oldt>t)
+  {
+    t=AUTOTEMP_OLDWEIGHT*oldt+(1-AUTOTEMP_OLDWEIGHT)*t;
+  }
+  oldt=t;
   setTargetHotend0(t);
-  SERIAL_ECHO_START;
-  SERIAL_ECHOPAIR("highe",high);
-  SERIAL_ECHOPAIR(" t",t);
-  SERIAL_ECHOLN("");
+//   SERIAL_ECHO_START;
+//   SERIAL_ECHOPAIR("highe",high);
+//   SERIAL_ECHOPAIR(" t",t);
+//   SERIAL_ECHOLN("");
 }
 #endif
 

commit e02af3e66addebd752e3e673ff5a2c7d270f5c59 (from 953d830bba02eb71376c51ccee2c5599bf976df5)
Merge: 537b5c1 953d830
Author: Erik van der Zalm <erik@vdzalm.eu>
Date:   Sat Nov 19 17:23:47 2011 +0100

    Merge remote-tracking branch 'origin/Marlin_v1' into Marlin_v1

diff --git a/Marlin/motion_control.cpp b/Marlin/motion_control.cpp
index c2fce52..ff3f8c2 100644
--- a/Marlin/motion_control.cpp
+++ b/Marlin/motion_control.cpp
@@ -123,7 +123,7 @@ void mc_arc(float *position, float *target, float *offset, uint8_t axis_0, uint8
     arc_target[axis_1] = center_axis1 + r_axis1;
     arc_target[axis_linear] += linear_per_segment;
     arc_target[E_AXIS] += extruder_per_segment;
-    plan_buffer_line(arc_target[X_AXIS], arc_target[Y_AXIS], arc_target[Z_AXIS], target[E_AXIS], feed_rate);
+    plan_buffer_line(arc_target[X_AXIS], arc_target[Y_AXIS], arc_target[Z_AXIS], arc_target[E_AXIS], feed_rate);
     
   }
   // Ensure last segment arrives at target location.

