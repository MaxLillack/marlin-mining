commit ab074dac179ea6b03ec7f2a161719e3d84f1b37e (from d4a665694a5ba1effb0d9e527c21419c5d19a1a7)
Merge: d4a6656 bf2c923
Author: Bo Herrmannsen <bo.herrmannsen@gmail.com>
Date:   Tue Jan 13 12:10:37 2015 +0100

    Merge pull request #1344 from grob6000/independent_pid
    
    Independent PID parameters for each extruder

diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index c8ad44e..f0b180b 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -152,6 +152,8 @@
   //#define PID_DEBUG // Sends debug data to the serial port.
   //#define PID_OPENLOOP 1 // Puts PID in open loop. M104/M140 sets the output power from 0 to PID_MAX
   //#define SLOW_PWM_HEATERS // PWM with very low frequency (roughly 0.125Hz=8s) and minimum state time of approximately 1s useful for heaters driven by a relay
+  //#define PID_PARAMS_PER_EXTRUDER // Uses separate PID parameters for each extruder (useful for mismatched extruders)
+                                    // Set/get with gcode: M301 E[extruder number, 0-2]
   #define PID_FUNCTIONAL_RANGE 10 // If the temperature difference between the target temperature and the actual temperature
                                   // is more then PID_FUNCTIONAL_RANGE then the PID will be shut off and the heater will be set to min/max.
   #define PID_INTEGRAL_DRIVE_MAX PID_MAX  //limit for the integral term
diff --git a/Marlin/ConfigurationStore.cpp b/Marlin/ConfigurationStore.cpp
index f0ad149..30af7d0 100644
--- a/Marlin/ConfigurationStore.cpp
+++ b/Marlin/ConfigurationStore.cpp
@@ -38,7 +38,7 @@ void _EEPROM_readData(int &pos, uint8_t* value, uint8_t size)
 // wrong data being written to the variables.
 // ALSO:  always make sure the variables in the Store and retrieve sections are in the same order.
 
-#define EEPROM_VERSION "V13"
+#define EEPROM_VERSION "V14"
 
 #ifdef EEPROM_SETTINGS
 void Config_StoreSettings() 
@@ -63,11 +63,11 @@ void Config_StoreSettings()
   EEPROM_WRITE_VAR(i,delta_radius);
   EEPROM_WRITE_VAR(i,delta_diagonal_rod);
   EEPROM_WRITE_VAR(i,delta_segments_per_second);
-  #endif
+  #endif//DELTA
   #ifndef ULTIPANEL
   int plaPreheatHotendTemp = PLA_PREHEAT_HOTEND_TEMP, plaPreheatHPBTemp = PLA_PREHEAT_HPB_TEMP, plaPreheatFanSpeed = PLA_PREHEAT_FAN_SPEED;
   int absPreheatHotendTemp = ABS_PREHEAT_HOTEND_TEMP, absPreheatHPBTemp = ABS_PREHEAT_HPB_TEMP, absPreheatFanSpeed = ABS_PREHEAT_FAN_SPEED;
-  #endif
+  #endif//ULTIPANEL
   EEPROM_WRITE_VAR(i,plaPreheatHotendTemp);
   EEPROM_WRITE_VAR(i,plaPreheatHPBTemp);
   EEPROM_WRITE_VAR(i,plaPreheatFanSpeed);
@@ -76,37 +76,58 @@ void Config_StoreSettings()
   EEPROM_WRITE_VAR(i,absPreheatFanSpeed);
   EEPROM_WRITE_VAR(i,zprobe_zoffset);
   #ifdef PIDTEMP
-    EEPROM_WRITE_VAR(i,Kp);
-    EEPROM_WRITE_VAR(i,Ki);
-    EEPROM_WRITE_VAR(i,Kd);
-  #else
+    float dummy = 0.0f;
+    for (int e = 0; e < 3; e++)
+	{
+	  if (e < EXTRUDERS)
+	  {
+        EEPROM_WRITE_VAR(i,PID_PARAM(Kp,e));
+        EEPROM_WRITE_VAR(i,PID_PARAM(Ki,e));
+        EEPROM_WRITE_VAR(i,PID_PARAM(Kd,e));
+        #ifdef PID_ADD_EXTRUSION_RATE
+        EEPROM_WRITE_VAR(i,PID_PARAM(Kc,e));
+        #else//PID_ADD_EXTRUSION_RATE
+		dummy = 1.0f; // 1.0 = default kc
+	    EEPROM_WRITE_VAR(dummmy);
+        #endif//PID_ADD_EXTRUSION_RATE
+	  }
+	  else
+	  {
+		dummy = 3000.0f;
+	    EEPROM_WRITE_VAR(i, dummy);
+		dummy = 0.0f;
+        EEPROM_WRITE_VAR(i,dummy);
+        EEPROM_WRITE_VAR(i,dummy);
+	  }
+	}
+  #else//PIDTEMP
 		float dummy = 3000.0f;
     EEPROM_WRITE_VAR(i,dummy);
 		dummy = 0.0f;
     EEPROM_WRITE_VAR(i,dummy);
     EEPROM_WRITE_VAR(i,dummy);
-  #endif
+  #endif//PIDTEMP
   #ifndef DOGLCD
     int lcd_contrast = 32;
-  #endif
+  #endif//DOGLCD
   EEPROM_WRITE_VAR(i,lcd_contrast);
   #ifdef SCARA
   EEPROM_WRITE_VAR(i,axis_scaling);        // Add scaling for SCARA
-  #endif
+  #endif//SCARA
   #ifdef FWRETRACT
   EEPROM_WRITE_VAR(i,autoretract_enabled);
   EEPROM_WRITE_VAR(i,retract_length);
   #if EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_length_swap);
-  #endif
+  #endif//EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_feedrate);
   EEPROM_WRITE_VAR(i,retract_zlift);
   EEPROM_WRITE_VAR(i,retract_recover_length);
   #if EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_recover_length_swap);
-  #endif
+  #endif//EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_recover_feedrate);
-  #endif
+  #endif//FWRETRACT
 
   // Save filament sizes
   EEPROM_WRITE_VAR(i, volumetric_enabled);
@@ -115,8 +136,8 @@ void Config_StoreSettings()
   EEPROM_WRITE_VAR(i, filament_size[1]);
   #if EXTRUDERS > 2
   EEPROM_WRITE_VAR(i, filament_size[2]);
-  #endif
-  #endif
+  #endif//EXTRUDERS > 2
+  #endif//EXTRUDERS > 1
   
   char ver2[4]=EEPROM_VERSION;
   i=EEPROM_OFFSET;
@@ -149,7 +170,7 @@ SERIAL_ECHOLNPGM("Scaling factors:");
     SERIAL_ECHOLN("");
       
     SERIAL_ECHO_START;
-#endif
+#endif//SCARA
     SERIAL_ECHOLNPGM("Maximum feedrates (mm/s):");
     SERIAL_ECHO_START;
     SERIAL_ECHOPAIR("  M203 X", max_feedrate[X_AXIS]);
@@ -206,16 +227,16 @@ SERIAL_ECHOLNPGM("Scaling factors:");
 	SERIAL_ECHOPAIR(" R" ,delta_radius );
 	SERIAL_ECHOPAIR(" S" ,delta_segments_per_second );
 	SERIAL_ECHOLN("");
-#endif
+#endif//DELTA
 #ifdef PIDTEMP
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("PID settings:");
-    SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("   M301 P",Kp); 
-    SERIAL_ECHOPAIR(" I" ,unscalePID_i(Ki)); 
-    SERIAL_ECHOPAIR(" D" ,unscalePID_d(Kd));
+	SERIAL_ECHO_START;
+    SERIAL_ECHOPAIR("   M301 P", PID_PARAM(Kp,0)); // for compatibility with hosts, only echos values for E0
+	SERIAL_ECHOPAIR(" I", unscalePID_i(PID_PARAM(Ki, 0)));
+	SERIAL_ECHOPAIR(" D", unscalePID_d(PID_PARAM(Kd, 0)));
     SERIAL_ECHOLN(""); 
-#endif
+#endif//PIDTEMP
 #ifdef FWRETRACT
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("Retract: S=Length (mm) F:Speed (mm/m) Z: ZLift (mm)");
@@ -244,7 +265,7 @@ SERIAL_ECHOLNPGM("Scaling factors:");
     SERIAL_ECHO_START;
     SERIAL_ECHOPAIR("   Swap rec. addl. length (mm): ", retract_recover_length_swap);
     SERIAL_ECHOLN("");
-#endif
+#endif//EXTRUDERS > 1
     SERIAL_ECHO_START;
     if (volumetric_enabled) {
         SERIAL_ECHOLNPGM("Filament settings:");
@@ -259,14 +280,14 @@ SERIAL_ECHOLNPGM("Scaling factors:");
 		SERIAL_ECHO_START;
         SERIAL_ECHOPAIR("   M200 T2 D", filament_size[2]);
 		SERIAL_ECHOLN("");
-#endif
-#endif
+#endif//EXTRUDERS > 2
+#endif//EXTRUDERS > 1
     } else {
         SERIAL_ECHOLNPGM("Filament settings: Disabled");
     }
-#endif
+#endif//FWRETRACT
 }
-#endif
+#endif//DISABLE_M503
 
 
 #ifdef EEPROM_SETTINGS
@@ -301,11 +322,11 @@ void Config_RetrieveSettings()
 		EEPROM_READ_VAR(i,delta_radius);
 		EEPROM_READ_VAR(i,delta_diagonal_rod);
 		EEPROM_READ_VAR(i,delta_segments_per_second);
-        #endif
+        #endif//DELTA
         #ifndef ULTIPANEL
         int plaPreheatHotendTemp, plaPreheatHPBTemp, plaPreheatFanSpeed;
         int absPreheatHotendTemp, absPreheatHPBTemp, absPreheatFanSpeed;
-        #endif
+        #endif//ULTIPANEL
         EEPROM_READ_VAR(i,plaPreheatHotendTemp);
         EEPROM_READ_VAR(i,plaPreheatHPBTemp);
         EEPROM_READ_VAR(i,plaPreheatFanSpeed);
@@ -313,35 +334,68 @@ void Config_RetrieveSettings()
         EEPROM_READ_VAR(i,absPreheatHPBTemp);
         EEPROM_READ_VAR(i,absPreheatFanSpeed);
         EEPROM_READ_VAR(i,zprobe_zoffset);
-        #ifndef PIDTEMP
-        float Kp,Ki,Kd;
-        #endif
-        // do not need to scale PID values as the values in EEPROM are already scaled		
-        EEPROM_READ_VAR(i,Kp);
-        EEPROM_READ_VAR(i,Ki);
-        EEPROM_READ_VAR(i,Kd);
+        #ifdef PIDTEMP
+		float dummy = 0.0f;
+		for (int e = 0; e < 3; e++) // 3 = max extruders supported by marlin
+		{
+		  if (e < EXTRUDERS)
+		  {
+		    // do not need to scale PID values as the values in EEPROM are already scaled			  
+            EEPROM_READ_VAR(i,PID_PARAM(Kp,e));
+            EEPROM_READ_VAR(i,PID_PARAM(Ki,e));
+		    EEPROM_READ_VAR(i,PID_PARAM(Kd,e));
+#ifdef PID_ADD_EXTRUSION_RATE
+            EEPROM_READ_VAR(i,PID_PARAM(Kc,e));
+#else//PID_ADD_EXTRUSION_RATE
+	        EEPROM_READ_VAR(i,dummy);
+#endif//PID_ADD_EXTRUSION_RATE
+		  }
+		  else
+		  {
+			EEPROM_READ_VAR(i,dummy);
+			EEPROM_READ_VAR(i,dummy);
+			EEPROM_READ_VAR(i,dummy);
+			EEPROM_READ_VAR(i,dummy);
+		  }
+		}
+		#else//PIDTEMP
+		// 4 x 3 = 12 slots for PID parameters
+		float dummy = 0.0f;
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);			
+		#endif//PIDTEMP
         #ifndef DOGLCD
         int lcd_contrast;
-        #endif
+        #endif//DOGLCD
         EEPROM_READ_VAR(i,lcd_contrast);
 		#ifdef SCARA
 		EEPROM_READ_VAR(i,axis_scaling);
-		#endif
+		#endif//SCARA
 
 		#ifdef FWRETRACT
 		EEPROM_READ_VAR(i,autoretract_enabled);
 		EEPROM_READ_VAR(i,retract_length);
 		#if EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_length_swap);
-		#endif
+		#endif//EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_feedrate);
 		EEPROM_READ_VAR(i,retract_zlift);
 		EEPROM_READ_VAR(i,retract_recover_length);
 		#if EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_recover_length_swap);
-		#endif
+		#endif//EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_recover_feedrate);
-		#endif
+		#endif//FWRETRACT
 
 		EEPROM_READ_VAR(i, volumetric_enabled);
 		EEPROM_READ_VAR(i, filament_size[0]);
@@ -349,8 +403,8 @@ void Config_RetrieveSettings()
 		EEPROM_READ_VAR(i, filament_size[1]);
 #if EXTRUDERS > 2
 		EEPROM_READ_VAR(i, filament_size[2]);
-#endif
-#endif
+#endif//EXTRUDERS > 2
+#endif//EXTRUDERS > 1
 		calculate_volumetric_multipliers();
 		// Call updatePID (similar to when we have processed M301)
 		updatePID();
@@ -363,9 +417,9 @@ void Config_RetrieveSettings()
     }
     #ifdef EEPROM_CHITCHAT
       Config_PrintSettings();
-    #endif
+    #endif//EEPROM_CHITCHAT
 }
-#endif
+#endif//EEPROM_SETTINGS
 
 void Config_ResetDefault()
 {
@@ -379,7 +433,7 @@ void Config_ResetDefault()
         max_acceleration_units_per_sq_second[i]=pgm_read_float(&tmp3[i]);
 		#ifdef SCARA
 		axis_scaling[i]=1;
-		#endif
+		#endif//SCARA
     }
     
     // steps per sq second need to be updated to agree with the units per sq second
@@ -400,7 +454,7 @@ void Config_ResetDefault()
 	delta_diagonal_rod= DELTA_DIAGONAL_ROD;
 	delta_segments_per_second= DELTA_SEGMENTS_PER_SECOND;
 	recalc_delta_settings(delta_radius, delta_diagonal_rod);
-#endif
+#endif//DELTA
 #ifdef ULTIPANEL
     plaPreheatHotendTemp = PLA_PREHEAT_HOTEND_TEMP;
     plaPreheatHPBTemp = PLA_PREHEAT_HPB_TEMP;
@@ -408,24 +462,29 @@ void Config_ResetDefault()
     absPreheatHotendTemp = ABS_PREHEAT_HOTEND_TEMP;
     absPreheatHPBTemp = ABS_PREHEAT_HPB_TEMP;
     absPreheatFanSpeed = ABS_PREHEAT_FAN_SPEED;
-#endif
+#endif//ULTIPANEL
 #ifdef ENABLE_AUTO_BED_LEVELING
     zprobe_zoffset = -Z_PROBE_OFFSET_FROM_EXTRUDER;
-#endif
+#endif//ENABLE_AUTO_BED_LEVELING
 #ifdef DOGLCD
     lcd_contrast = DEFAULT_LCD_CONTRAST;
-#endif
+#endif//DOGLCD
 #ifdef PIDTEMP
-    Kp = DEFAULT_Kp;
-    Ki = scalePID_i(DEFAULT_Ki);
-    Kd = scalePID_d(DEFAULT_Kd);
-    
+#ifdef PID_PARAMS_PER_EXTRUDER
+	for (int e = 0; e < EXTRUDERS; e++)
+#else // PID_PARAMS_PER_EXTRUDER
+	int e = 0; // only need to write once
+#endif // PID_PARAMS_PER_EXTRUDER
+	{
+      PID_PARAM(Kp,e) = DEFAULT_Kp;
+      PID_PARAM(Ki,e) = scalePID_i(DEFAULT_Ki);
+      PID_PARAM(Kd,e) = scalePID_d(DEFAULT_Kd);
+      #ifdef PID_ADD_EXTRUSION_RATE
+        PID_PARAM(Kc,e) = DEFAULT_Kc;
+      #endif//PID_ADD_EXTRUSION_RATE
+    }
     // call updatePID (similar to when we have processed M301)
     updatePID();
-    
-#ifdef PID_ADD_EXTRUSION_RATE
-    Kc = DEFAULT_Kc;
-#endif//PID_ADD_EXTRUSION_RATE
 #endif//PIDTEMP
 
 #ifdef FWRETRACT
@@ -433,15 +492,15 @@ void Config_ResetDefault()
 	retract_length = RETRACT_LENGTH;
 #if EXTRUDERS > 1
 	retract_length_swap = RETRACT_LENGTH_SWAP;
-#endif
+#endif//EXTRUDERS > 1
 	retract_feedrate = RETRACT_FEEDRATE;
 	retract_zlift = RETRACT_ZLIFT;
 	retract_recover_length = RETRACT_RECOVER_LENGTH;
 #if EXTRUDERS > 1
 	retract_recover_length_swap = RETRACT_RECOVER_LENGTH_SWAP;
-#endif
+#endif//EXTRUDERS > 1
 	retract_recover_feedrate = RETRACT_RECOVER_FEEDRATE;
-#endif
+#endif//FWRETRACT
 
 	volumetric_enabled = false;
 	filament_size[0] = DEFAULT_NOMINAL_FILAMENT_DIA;
@@ -449,11 +508,11 @@ void Config_ResetDefault()
 	filament_size[1] = DEFAULT_NOMINAL_FILAMENT_DIA;
 #if EXTRUDERS > 2
 	filament_size[2] = DEFAULT_NOMINAL_FILAMENT_DIA;
-#endif
-#endif
+#endif//EXTRUDERS > 2
+#endif//EXTRUDERS > 1
 	calculate_volumetric_multipliers();
 
 SERIAL_ECHO_START;
 SERIAL_ECHOLNPGM("Hardcoded Default Settings Loaded");
 
-}
+}
\ No newline at end of file
diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 40e4285..2ccff90 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -3196,30 +3196,52 @@ Sigma_Exit:
     #endif // M300
 
     #ifdef PIDTEMP
-    case 301: // M301
-      {
-        if(code_seen('P')) Kp = code_value();
-        if(code_seen('I')) Ki = scalePID_i(code_value());
-        if(code_seen('D')) Kd = scalePID_d(code_value());
+	case 301: // M301
+	{
 
-        #ifdef PID_ADD_EXTRUSION_RATE
-        if(code_seen('C')) Kc = code_value();
-        #endif
+		// multi-extruder PID patch: M301 updates or prints a single extruder's PID values
+		// default behaviour (omitting E parameter) is to update for extruder 0 only
+		int e = 0; // extruder being updated
+		if (code_seen('E'))
+		{
+			e = (int)code_value();
+		}
+		if (e < EXTRUDERS) // catch bad input value
+		{
+
+			if (code_seen('P')) PID_PARAM(Kp,e) = code_value();
+			if (code_seen('I')) PID_PARAM(Ki,e) = scalePID_i(code_value());
+			if (code_seen('D')) PID_PARAM(Kd,e) = scalePID_d(code_value());
+			#ifdef PID_ADD_EXTRUSION_RATE
+			if (code_seen('C')) PID_PARAM(Kc,e) = code_value();
+			#endif			
+
+			updatePID();
+			SERIAL_PROTOCOL(MSG_OK);
+            #ifdef PID_PARAMS_PER_EXTRUDER
+			  SERIAL_PROTOCOL(" e:"); // specify extruder in serial output
+			  SERIAL_PROTOCOL(e);
+            #endif // PID_PARAMS_PER_EXTRUDER
+			SERIAL_PROTOCOL(" p:");
+			SERIAL_PROTOCOL(PID_PARAM(Kp,e));
+			SERIAL_PROTOCOL(" i:");
+			SERIAL_PROTOCOL(unscalePID_i(PID_PARAM(Ki,e)));
+			SERIAL_PROTOCOL(" d:");
+			SERIAL_PROTOCOL(unscalePID_d(PID_PARAM(Kd,e)));
+			#ifdef PID_ADD_EXTRUSION_RATE
+			SERIAL_PROTOCOL(" c:");
+			//Kc does not have scaling applied above, or in resetting defaults
+			SERIAL_PROTOCOL(PID_PARAM(Kc,e));
+			#endif
+			SERIAL_PROTOCOLLN("");
+		
+		}
+		else
+		{
+			SERIAL_ECHO_START;
+			SERIAL_ECHOLN(MSG_INVALID_EXTRUDER);
+		}
 
-        updatePID();
-        SERIAL_PROTOCOL(MSG_OK);
-        SERIAL_PROTOCOL(" p:");
-        SERIAL_PROTOCOL(Kp);
-        SERIAL_PROTOCOL(" i:");
-        SERIAL_PROTOCOL(unscalePID_i(Ki));
-        SERIAL_PROTOCOL(" d:");
-        SERIAL_PROTOCOL(unscalePID_d(Kd));
-        #ifdef PID_ADD_EXTRUSION_RATE
-        SERIAL_PROTOCOL(" c:");
-        //Kc does not have scaling applied above, or in resetting defaults
-        SERIAL_PROTOCOL(Kc);
-        #endif
-        SERIAL_PROTOCOLLN("");
       }
       break;
     #endif //PIDTEMP
diff --git a/Marlin/language_ca.h b/Marlin/language_ca.h
index ba5d371..db0e802 100644
--- a/Marlin/language_ca.h
+++ b/Marlin/language_ca.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_de.h b/Marlin/language_de.h
index e442448..a019290 100644
--- a/Marlin/language_de.h
+++ b/Marlin/language_de.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Acc"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_en.h b/Marlin/language_en.h
index 014b42e..ecf87fc 100644
--- a/Marlin/language_en.h
+++ b/Marlin/language_en.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_es.h b/Marlin/language_es.h
index 064c770..8f5fb73 100644
--- a/Marlin/language_es.h
+++ b/Marlin/language_es.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Acel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_eu.h b/Marlin/language_eu.h
index 7e65ca5..6696254 100644
--- a/Marlin/language_eu.h
+++ b/Marlin/language_eu.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Azelerazioa"
 #define MSG_VXY_JERK                        "Vxy-astindua"
 #define MSG_VZ_JERK                         "Vz-astindua"
diff --git a/Marlin/language_fi.h b/Marlin/language_fi.h
index 0b1ac9c..c04637d 100644
--- a/Marlin/language_fi.h
+++ b/Marlin/language_fi.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Kiihtyv"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_fr.h b/Marlin/language_fr.h
index 59066b1..29922c3 100644
--- a/Marlin/language_fr.h
+++ b/Marlin/language_fr.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_it.h b/Marlin/language_it.h
index cb7dc46..d7abee4 100644
--- a/Marlin/language_it.h
+++ b/Marlin/language_it.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel."
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_nl.h b/Marlin/language_nl.h
index e9dc380..77e256e 100644
--- a/Marlin/language_nl.h
+++ b/Marlin/language_nl.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Versn"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_pl.h b/Marlin/language_pl.h
index 55ec20e..8992097 100644
--- a/Marlin/language_pl.h
+++ b/Marlin/language_pl.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Przyspieszenie"
 #define MSG_VXY_JERK                        "Zryw Vxy"
 #define MSG_VZ_JERK                         "Zryw Vz"
diff --git a/Marlin/language_pt.h b/Marlin/language_pt.h
index 09e3467..473bed3 100644
--- a/Marlin/language_pt.h
+++ b/Marlin/language_pt.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I: "
 #define MSG_PID_D                           "PID-D: "
 #define MSG_PID_C                           "PID-C: "
+#define MSG_PID_P1                          "PID-P E2: "
+#define MSG_PID_I1                          "PID-I E2: "
+#define MSG_PID_D1                          "PID-D E2: "
+#define MSG_PID_C1                          "PID-C E2: "
+#define MSG_PID_P2                          "PID-P E3: "
+#define MSG_PID_I2                          "PID-I E3: "
+#define MSG_PID_D2                          "PID-D E3: "
+#define MSG_PID_C2                          "PID-C E3: "
 #define MSG_ACC                             "Acc:"
 #define MSG_VXY_JERK                        "Vxy-jerk: "
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_ru.h b/Marlin/language_ru.h
index ec666f1..87c5b1d 100644
--- a/Marlin/language_ru.h
+++ b/Marlin/language_ru.h
@@ -69,6 +69,14 @@
 #define MSG_PID_I                           "PID-I: "
 #define MSG_PID_D                           "PID-D: "
 #define MSG_PID_C                           "PID-C: "
+#define MSG_PID_P1                          "PID-P E2: "
+#define MSG_PID_I1                          "PID-I E2: "
+#define MSG_PID_D1                          "PID-D E2: "
+#define MSG_PID_C1                          "PID-C E2: "
+#define MSG_PID_P2                          "PID-P E3: "
+#define MSG_PID_I2                          "PID-I E3: "
+#define MSG_PID_D2                          "PID-D E3: "
+#define MSG_PID_C2                          "PID-C E3: "
 #define MSG_ACC                             "Acc:"
 #define MSG_VXY_JERK                        "Vxy-jerk: "
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index 5b33c00..d04f1fe 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -51,14 +51,6 @@ float current_temperature_bed = 0.0;
   int redundant_temperature_raw = 0;
   float redundant_temperature = 0.0;
 #endif
-#ifdef PIDTEMP
-  float Kp=DEFAULT_Kp;
-  float Ki=(DEFAULT_Ki*PID_dT);
-  float Kd=(DEFAULT_Kd/PID_dT);
-  #ifdef PID_ADD_EXTRUSION_RATE
-    float Kc=DEFAULT_Kc;
-  #endif
-#endif //PIDTEMP
 
 #ifdef PIDTEMPBED
   float bedKp=DEFAULT_bedKp;
@@ -134,6 +126,24 @@ static volatile bool temp_meas_ready = false;
   # define ARRAY_BY_EXTRUDERS(v1, v2, v3) { v1 }
 #endif
 
+#ifdef PIDTEMP
+#ifdef PID_PARAMS_PER_EXTRUDER
+  float Kp[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Kp, DEFAULT_Kp, DEFAULT_Kp);
+  float Ki[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Ki*PID_dT, DEFAULT_Ki*PID_dT, DEFAULT_Ki*PID_dT);
+  float Kd[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Kd / PID_dT, DEFAULT_Kd / PID_dT, DEFAULT_Kd / PID_dT);
+  #ifdef PID_ADD_EXTRUSION_RATE
+    float Kc[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Kc, DEFAULT_Kc, DEFAULT_Kc);
+  #endif // PID_ADD_EXTRUSION_RATE
+#else //PID_PARAMS_PER_EXTRUDER
+  float Kp = DEFAULT_Kp;
+  float Ki = DEFAULT_Ki * PID_dT;
+  float Kd = DEFAULT_Kd / PID_dT;
+  #ifdef PID_ADD_EXTRUSION_RATE
+    float Kc = DEFAULT_Kc;
+  #endif // PID_ADD_EXTRUSION_RATE
+#endif // PID_PARAMS_PER_EXTRUDER
+#endif //PIDTEMP
+
 // Init min and max temp with extreme values to prevent false errors during startup
 static int minttemp_raw[EXTRUDERS] = ARRAY_BY_EXTRUDERS( HEATER_0_RAW_LO_TEMP , HEATER_1_RAW_LO_TEMP , HEATER_2_RAW_LO_TEMP );
 static int maxttemp_raw[EXTRUDERS] = ARRAY_BY_EXTRUDERS( HEATER_0_RAW_HI_TEMP , HEATER_1_RAW_HI_TEMP , HEATER_2_RAW_HI_TEMP );
@@ -343,7 +353,7 @@ void updatePID()
 {
 #ifdef PIDTEMP
   for(int e = 0; e < EXTRUDERS; e++) { 
-     temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / Ki;  
+     temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / PID_PARAM(Ki,e);  
   }
 #endif
 #ifdef PIDTEMPBED
@@ -464,14 +474,14 @@ void manage_heater()
             temp_iState[e] = 0.0;
             pid_reset[e] = false;
           }
-          pTerm[e] = Kp * pid_error[e];
+          pTerm[e] = PID_PARAM(Kp,e) * pid_error[e];
           temp_iState[e] += pid_error[e];
           temp_iState[e] = constrain(temp_iState[e], temp_iState_min[e], temp_iState_max[e]);
-          iTerm[e] = Ki * temp_iState[e];
+          iTerm[e] = PID_PARAM(Ki,e) * temp_iState[e];
 
           //K1 defined in Configuration.h in the PID settings
           #define K2 (1.0-K1)
-          dTerm[e] = (Kd * (pid_input - temp_dState[e]))*K2 + (K1 * dTerm[e]);
+          dTerm[e] = (PID_PARAM(Kd,e) * (pid_input - temp_dState[e]))*K2 + (K1 * dTerm[e]);
           pid_output = pTerm[e] + iTerm[e] - dTerm[e];
           if (pid_output > PID_MAX) {
             if (pid_error[e] > 0 )  temp_iState[e] -= pid_error[e]; // conditional un-integration
@@ -811,7 +821,7 @@ void tp_init()
     maxttemp[e] = maxttemp[0];
 #ifdef PIDTEMP
     temp_iState_min[e] = 0.0;
-    temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / Ki;
+    temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / PID_PARAM(Ki,e);
 #endif //PIDTEMP
 #ifdef PIDTEMPBED
     temp_iState_min_bed = 0.0;
diff --git a/Marlin/temperature.h b/Marlin/temperature.h
index 95c3514..287b92b 100644
--- a/Marlin/temperature.h
+++ b/Marlin/temperature.h
@@ -58,7 +58,14 @@ extern float current_temperature_bed;
 #endif
 
 #ifdef PIDTEMP
-  extern float Kp,Ki,Kd,Kc;
+
+  #ifdef PID_PARAMS_PER_EXTRUDER
+    extern float Kp[EXTRUDERS], Ki[EXTRUDERS], Kd[EXTRUDERS], Kc[EXTRUDERS]; // one param per extruder
+    #define PID_PARAM(param,e) param[e] // use macro to point to array value
+  #else
+    extern float Kp, Ki, Kd, Kc; // one param per extruder - saves 20 or 36 bytes of ram (inc array pointer)
+    #define PID_PARAM(param, e) param // use macro to point directly to value
+  #endif // PID_PARAMS_PER_EXTRUDER	
   float scalePID_i(float i);
   float scalePID_d(float d);
   float unscalePID_i(float i);
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 13d4f3f..0f7645c 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -185,8 +185,9 @@ void* editValue;
 int32_t minEditValue, maxEditValue;
 menuFunc_t callbackFunc;
 
-// place-holders for Ki and Kd edits
+// place-holders for Ki and Kd edits, and the extruder # being edited
 float raw_Ki, raw_Kd;
+int pid_current_extruder;
 
 static void lcd_goto_menu(menuFunc_t menu, const uint32_t encoder=0, const bool feedback=true) {
   if (currentMenu != menu) {
@@ -765,12 +766,6 @@ static void lcd_control_menu()
 
 static void lcd_control_temperature_menu()
 {
-#ifdef PIDTEMP
-    // set up temp variables - undo the default scaling
-    raw_Ki = unscalePID_i(Ki);
-    raw_Kd = unscalePID_d(Kd);
-#endif
-
     START_MENU();
     MENU_ITEM(back, MSG_CONTROL, lcd_control_menu);
 #if TEMP_SENSOR_0 != 0
@@ -793,13 +788,45 @@ static void lcd_control_temperature_menu()
     MENU_ITEM_EDIT(float32, MSG_FACTOR, &autotemp_factor, 0.0, 1.0);
 #endif
 #ifdef PIDTEMP
-    MENU_ITEM_EDIT(float52, MSG_PID_P, &Kp, 1, 9990);
-    // i is typically a small value so allows values below 1
-    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
-    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D, &raw_Kd, 1, 9990, copy_and_scalePID_d);
-# ifdef PID_ADD_EXTRUSION_RATE
-    MENU_ITEM_EDIT(float3, MSG_PID_C, &Kc, 1, 9990);
-# endif//PID_ADD_EXTRUSION_RATE
+	// set up temp variables - undo the default scaling
+	pid_current_extruder = 0;
+	raw_Ki = unscalePID_i(PID_PARAM(Ki,0));
+	raw_Kd = unscalePID_d(PID_PARAM(Kd,0));
+	MENU_ITEM_EDIT(float52, MSG_PID_P, &PID_PARAM(Kp,0), 1, 9990);
+	// i is typically a small value so allows values below 1
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+    #ifdef PID_ADD_EXTRUSION_RATE
+	  MENU_ITEM_EDIT(float3, MSG_PID_C, &PID_PARAM(Kc,0), 1, 9990);
+    #endif//PID_ADD_EXTRUSION_RATE
+#ifdef PID_PARAMS_PER_EXTRUDER
+  #if EXTRUDERS > 1
+	  // set up temp variables - undo the default scaling
+	  pid_current_extruder = 0;
+	  raw_Ki = unscalePID_i(PID_PARAM(Ki,1));
+	  raw_Kd = unscalePID_d(PID_PARAM(Kd,1));
+	  MENU_ITEM_EDIT(float52, MSG_PID_P1, &PID_PARAM(Kp,1), 1, 9990);
+	  // i is typically a small value so allows values below 1
+	  MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I1, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	  MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D1, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+      #ifdef PID_ADD_EXTRUSION_RATE
+	    MENU_ITEM_EDIT(float3, MSG_PID_C1, &PID_PARAM(Kc,1), 1, 9990);
+      #endif//PID_ADD_EXTRUSION_RATE
+  #endif//EXTRUDERS > 1
+  #if EXTRUDERS > 2
+	    // set up temp variables - undo the default scaling
+	    pid_current_extruder = 0;
+	    raw_Ki = unscalePID_i(PID_PARAM(Ki,2));
+	    raw_Kd = unscalePID_d(PID_PARAM(Kd,2));
+	    MENU_ITEM_EDIT(float52, MSG_PID_P2, &PID_PARAM(Kp,2), 1, 9990);
+	    // i is typically a small value so allows values below 1
+	    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I2, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D2, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+        #ifdef PID_ADD_EXTRUSION_RATE
+	      MENU_ITEM_EDIT(float3, MSG_PID_C2, &PID_PARAM(Kc,2), 1, 9990);
+        #endif//PID_ADD_EXTRUSION_RATE
+  #endif//EXTRUDERS > 2
+#endif // PID_PARAMS_PER_EXTRUDER
 #endif//PIDTEMP
     MENU_ITEM(submenu, MSG_PREHEAT_PLA_SETTINGS, lcd_control_temperature_preheat_pla_settings_menu);
     MENU_ITEM(submenu, MSG_PREHEAT_ABS_SETTINGS, lcd_control_temperature_preheat_abs_settings_menu);
@@ -1706,7 +1733,7 @@ char *ftostr52(const float &x)
 void copy_and_scalePID_i()
 {
 #ifdef PIDTEMP
-  Ki = scalePID_i(raw_Ki);
+  PID_PARAM(Ki, pid_current_extruder) = scalePID_i(raw_Ki);
   updatePID();
 #endif
 }
@@ -1716,7 +1743,7 @@ void copy_and_scalePID_i()
 void copy_and_scalePID_d()
 {
 #ifdef PIDTEMP
-  Kd = scalePID_d(raw_Kd);
+	PID_PARAM(Kd, pid_current_extruder) = scalePID_d(raw_Kd);
   updatePID();
 #endif
 }

commit ab074dac179ea6b03ec7f2a161719e3d84f1b37e (from bf2c923db57cf8d41a2d163a8ad691fc51d59635)
Merge: d4a6656 bf2c923
Author: Bo Herrmannsen <bo.herrmannsen@gmail.com>
Date:   Tue Jan 13 12:10:37 2015 +0100

    Merge pull request #1344 from grob6000/independent_pid
    
    Independent PID parameters for each extruder

diff --git a/Documentation/GCodes.md b/Documentation/GCodes.md
index dd58294..9ad2a33 100644
--- a/Documentation/GCodes.md
+++ b/Documentation/GCodes.md
@@ -10,7 +10,7 @@
 *  G10 - retract filament according to settings of M207
 *  G11 - retract recover filament according to settings of M208
 *  G28 - Home all Axis
-*  G29 - Detailed Z-Probe, probes the bed at 3 points.  You must de at the home position for this to work correctly.
+*  G29 - Detailed Z-Probe, probes the bed at 3 points.  You must be at the home position for this to work correctly.
 *  G30 - Single Z Probe, probes bed at current XY location.
 *  G31 - Dock Z Probe sled (if enabled)
 *  G32 - Undock Z Probe sled (if enabled)
@@ -68,36 +68,36 @@
 *  M203 - Set maximum feedrate that your machine can sustain (M203 X200 Y200 Z300 E10000) in mm/sec
 *  M204 - Set default acceleration: S normal moves T filament only moves (M204 S3000 T7000) im mm/sec^2  also sets minimum segment time in ms (B20000) to prevent buffer underruns and M20 minimum feedrate
 *  M205 -  advanced settings:  minimum travel speed S=while printing T=travel only,  B=minimum segment time X= maximum xy jerk, Z=maximum Z jerk, E=maximum E jerk
-*  M206 - set additional homeing offset
+*  M206 - set additional homing offset
 *  M207 - set retract length S[positive mm] F[feedrate mm/min] Z[additional zlift/hop], stays in mm regardless of M200 setting
 *  M208 - set recover=unretract length S[positive mm surplus to the M207 S*] F[feedrate mm/min]
 *  M209 - S<1=true/0=false> enable automatic retract detect if the slicer did not support G10/11: every normal extrude-only move will be classified as retract depending on the direction.
 *  M218 - set hotend offset (in mm): T<extruder_number> X<offset_on_X> Y<offset_on_Y>
-*  M220 S<factor in percent>- set speed factor override percentage
-*  M221 S<factor in percent>- set extrude factor override percentage
+*  M220 - S[factor in percent] - set speed factor override percentage
+*  M221 - S[factor in percent] - set extrude factor override percentage
 *  M240 - Trigger a camera to take a photograph
 *  M280 - Position an RC Servo P<index> S<angle/microseconds>, ommit S to report back current angle
-*  M300 - Play beepsound S<frequency Hz> P<duration ms>
+*  M300 - Play beep sound S<frequency Hz> P<duration ms>
 *  M301 - Set PID parameters P I and D
 *  M302 - Allow cold extrudes
 *  M303 - PID relay autotune S<temperature> sets the target temperature. (default target temperature = 150C)
 *  M304 - Set bed PID parameters P I and D
+*  M350 - Set microstepping mode.
+*  M351 - Toggle MS1 MS2 pins directly.
 *  M400 - Finish all moves
 *  M401 - Lower z-probe if present
 *  M402 - Raise z-probe if present
-*  M404 - N<dia in mm> Enter the nominal filament width (3mm, 1.75mm ) or will display nominal filament width without parameters
-*  M405 - Turn on Filament Sensor extrusion control.  Optional D<delay in cm> to set delay in centimeters between sensor and extruder
+*  M404 - N<dia in mm> Enter the nominal filament width (3mm, 1.75mm) or will display nominal filament width without parameters
+*  M405 - Turn on Filament Sensor extrusion control.  Optional D[delay in cm] to set delay in centimeters between sensor and extruder
 *  M406 - Turn off Filament Sensor extrusion control
 *  M407 - Displays measured filament diameter
 *  M500 - stores paramters in EEPROM
 *  M501 - reads parameters from EEPROM (if you need reset them after you changed them temporarily).
 *  M502 - reverts to the default "factory settings".  You still need to store them in EEPROM afterwards if you want to.
-*  M503 - print the current settings (from memory not from eeprom)
+*  M503 - print the current settings (from memory not from EEPROM)
 *  M540 - Use S[0|1] to enable or disable the stop SD card print on endstop hit (requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
 *  M600 - Pause for filament change X[pos] Y[pos] Z[relative lift] E[initial retract] L[later retract distance for removal]
 *  M907 - Set digital trimpot motor current using axis codes.
 *  M908 - Control digital trimpot directly.
-*  M350 - Set microstepping mode.
-*  M351 - Toggle MS1 MS2 pins directly.
 *  M928 - Start SD logging (M928 filename.g) - ended by M29
 *  M999 - Restart after being stopped by error
diff --git a/Documentation/Hardware.md b/Documentation/Hardware.md
deleted file mode 100644
index 26b03ae..0000000
--- a/Documentation/Hardware.md
+++ /dev/null
@@ -1,119 +0,0 @@
-# Supported Hardware
-
-__Please note:__ We need more feedback from users weather their board is actually working!
-
-Supported boards are listed under: [/Marlin/boards.h](/Marlin/boards.h)
-
-
-
-
-##### RAMPS
-
-http://reprap.org/wiki/RAMPS
-
-```
-#define BOARD_RAMPS_OLD         3    // MEGA/RAMPS up to 1.2
-#define BOARD_RAMPS_13_EFB      33   // RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Bed)
-#define BOARD_RAMPS_13_EEB      34   // RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Bed)
-#define BOARD_RAMPS_13_EFF      35   // RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Fan)
-#define BOARD_RAMPS_13_EEF      36   // RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Fan)
-```
-
-##### Generation 3 Electronics
-
-http://reprap.org/wiki/Generation_3_Electronics
-
-```
-#define BOARD_GEN3_PLUS         9    // Gen3+
-#define BOARD_GEN3_MONOLITHIC   22   // Gen3 Monolithic Electronics
-```
-
-##### Generation 6 Electronics
-
-http://reprap.org/wiki/Generation_6_Electronics
-
-```
-#define BOARD_GEN6              5    // Gen6
-#define BOARD_GEN6_DELUXE       51   // Gen6 deluxe
-```
-
-##### Generation 7 Electronics
-
-http://reprap.org/wiki/Generation_7_Electronics
-
-```
-#define BOARD_GEN7_CUSTOM       10   // Gen7 custom (Alfons3 Version) "https://github.com/Alfons3/Generation_7_Electronics"
-#define BOARD_GEN7_12           11   // Gen7 v1.1, v1.2
-#define BOARD_GEN7_13           12   // Gen7 v1.3
-#define BOARD_GEN7_14           13   // Gen7 v1.4
-```
-
-
-```
-#define BOARD_CHEAPTRONIC       2    // Cheaptronic v1.0
-#define BOARD_SETHI             20   // Sethi 3D_1
-```
-
-##### Sanguinololu
-
-http://reprap.org/wiki/Sanguinololu
-
-```
-#define BOARD_SANGUINOLOLU_11   6    // Sanguinololu < 1.2
-#define BOARD_SANGUINOLOLU_12   62   // Sanguinololu 1.2 and above
-
-```
-
-##### Melzi
-
-http://reprap.org/wiki/Melzi
-
-```
-#define BOARD_MELZI             63   // Melzi
-#define BOARD_MELZI_1284        66   // Melzi with ATmega1284 (MaKr3d version)
-```
-
-##### RUMBA
-
-http://reprap.org/wiki/RUMBA
-
-```
-#define BOARD_RUMBA             80   // Rumba
-```
-
-##### Azteeg
-
-  - http://reprap.org/wiki/Azteeg_X1
-  - http://reprap.org/wiki/Azteeg_X3
-
-
-```
-#define BOARD_AZTEEG_X1         65   // Azteeg X1
-#define BOARD_AZTEEG_X3         67   // Azteeg X3
-#define BOARD_AZTEEG_X3_PRO     68   // Azteeg X3 Pro
-```
-
-#### Others
-
-```
-#define BOARD_DUEMILANOVE_328P  4    // Duemilanove w/ ATMega328P pin assignment
-#define BOARD_STB_11            64   // STB V1.1
-#define BOARD_ULTIMAKER         7    // Ultimaker
-#define BOARD_ULTIMAKER_OLD     71   // Ultimaker (Older electronics. Pre 1.5.4. This is rare)
-#define BOARD_ULTIMAIN_2        72   // Ultimainboard 2.x (Uses TEMP_SENSOR 20)
-#define BOARD_3DRAG             77   // 3Drag Controller
-#define BOARD_TEENSYLU          8    // Teensylu
-#define BOARD_PRINTRBOARD       81   // Printrboard (AT90USB1286)
-#define BOARD_BRAINWAVE         82   // Brainwave (AT90USB646)
-#define BOARD_SAV_MKI           83   // SAV Mk-I (AT90USB1286)
-#define BOARD_TEENSY2           84   // Teensy++2.0 (AT90USB1286) - CLI compile: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
-#define BOARD_MEGATRONICS       70   // Megatronics
-#define BOARD_MEGATRONICS_2     701  // Megatronics v2.0
-#define BOARD_MEGATRONICS_1     702  // Minitronics v1.0
-#define BOARD_OMCA_A            90   // Alpha OMCA board
-#define BOARD_OMCA              91   // Final OMCA board
-#define BOARD_RAMBO             301  // Rambo
-#define BOARD_ELEFU_3           21   // Elefu Ra Board (v3)
-#define BOARD_5DPRINT           88   // 5DPrint D8 Driver Board
-#define BOARD_LEAPFROG          999  // Leapfrog
-```
diff --git a/Documentation/RampsServoPower.md b/Documentation/RampsServoPower.md
new file mode 100644
index 0000000..2f715cf
--- /dev/null
+++ b/Documentation/RampsServoPower.md
@@ -0,0 +1,9 @@
+
+
+__Note for RAMPS users:__
+----------------------
+
+-By default, RAMPS have no power on servo bus (if you happen to have a multimeter, check the voltage on servo power pins).
+-In order to get the servo working, you need to supply 5V to 5V pin.. You can do it using your power supply (if it has a 5V output) or jumping the "Vcc" from Arduino to the 5V RAMPS rail.
+-These 2 pins are located just between the Reset Button and the yellow fuses... There are marks in the board showing 5V and VCC.. just connect them..
+-If jumping the arduino Vcc do RAMPS 5V rail, take care to not use a power hungry servo, otherwise you will cause a blackout in the arduino board ;-)
diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index 4e07861..f0b180b 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -791,6 +791,5 @@ const bool Z_MAX_ENDSTOP_INVERTING = true; // set to true to invert the logic of
 
 
 #include "Configuration_adv.h"
-#include "thermistortables.h"
 
 #endif //__CONFIGURATION_H
diff --git a/Marlin/ConfigurationStore.cpp b/Marlin/ConfigurationStore.cpp
index 9a64d19..30af7d0 100644
--- a/Marlin/ConfigurationStore.cpp
+++ b/Marlin/ConfigurationStore.cpp
@@ -423,14 +423,14 @@ void Config_RetrieveSettings()
 
 void Config_ResetDefault()
 {
-    float tmp1[]=DEFAULT_AXIS_STEPS_PER_UNIT;
-    float tmp2[]=DEFAULT_MAX_FEEDRATE;
-    long tmp3[]=DEFAULT_MAX_ACCELERATION;
+    const static float tmp1[] MARLIN_PROGMEM =DEFAULT_AXIS_STEPS_PER_UNIT;
+    const static float tmp2[] MARLIN_PROGMEM =DEFAULT_MAX_FEEDRATE;
+    const static long tmp3[] MARLIN_PROGMEM =DEFAULT_MAX_ACCELERATION;
     for (short i=0;i<4;i++) 
     {
-        axis_steps_per_unit[i]=tmp1[i];  
-        max_feedrate[i]=tmp2[i];  
-        max_acceleration_units_per_sq_second[i]=tmp3[i];
+        axis_steps_per_unit[i]=pgm_read_float(&tmp1[i]);  
+        max_feedrate[i]=pgm_read_float(&tmp2[i]);  
+        max_acceleration_units_per_sq_second[i]=pgm_read_float(&tmp3[i]);
 		#ifdef SCARA
 		axis_scaling[i]=1;
 		#endif//SCARA
diff --git a/Marlin/LiquidCrystalRus.cpp b/Marlin/LiquidCrystalRus.cpp
index 6ee2c11..a9204a8 100644
--- a/Marlin/LiquidCrystalRus.cpp
+++ b/Marlin/LiquidCrystalRus.cpp
@@ -13,7 +13,7 @@
 
 // it is a Russian alphabet translation
 // except 0401 --> 0xa2 = ╗, 0451 --> 0xb5
-const PROGMEM uint8_t utf_recode[] = 
+const prog_uint8_t utf_recode[] PROGMEM = 
        { 0x41,0xa0,0x42,0xa1,0xe0,0x45,0xa3,0xa4,0xa5,0xa6,0x4b,0xa7,0x4d,0x48,0x4f,
          0xa8,0x50,0x43,0x54,0xa9,0xaa,0x58,0xe1,0xab,0xac,0xe2,0xad,0xae,0x62,0xaf,0xb0,0xb1,
          0x61,0xb2,0xb3,0xb4,0xe3,0x65,0xb6,0xb7,0xb8,0xb9,0xba,0xbb,0xbc,0xbd,0x6f,
diff --git a/Marlin/Marlin.h b/Marlin/Marlin.h
index 7a1afa3..da1b489 100644
--- a/Marlin/Marlin.h
+++ b/Marlin/Marlin.h
@@ -41,6 +41,25 @@
 #include "HardwareSerial.h"
 #endif
 
+
+#ifdef __GNUC__
+#ifndef GCC_VERSION2
+#define GCC_VERSION2 (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__)
+#endif
+
+#if GCC_VERSION2 < 40602 // Test for GCC < 4.6.2
+#ifdef PROGMEM
+#define MARLIN_PROGMEM __attribute__((section(".progmem.data")))
+#ifdef PSTR
+#undef PSTR
+#define PSTR(s) (__extension__({static const prog_char __c[] MARLIN_PROGMEM = (s); &__c[0];})) // Copied from pgmspace.h in avr-libc source
+#endif
+#endif
+#endif
+#endif
+
+
+
 #include "MarlinSerial.h"
 
 #ifndef cbi
diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 38af8cd..2ccff90 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -338,8 +338,8 @@ bool cancel_heatup = false ;
   int meas_delay_cm = MEASUREMENT_DELAY_CM;  //distance delay setting
 #endif
 
-const char errormagic[] PROGMEM = "Error:";
-const char echomagic[] PROGMEM = "echo:";
+const prog_char errormagic[] MARLIN_PROGMEM = "Error:";
+const prog_char echomagic[] MARLIN_PROGMEM = "echo:";
 
 //===========================================================================
 //=============================Private Variables=============================
@@ -865,7 +865,7 @@ DEFINE_PGM_READ_ANY(float,       float);
 DEFINE_PGM_READ_ANY(signed char, byte);
 
 #define XYZ_CONSTS_FROM_CONFIG(type, array, CONFIG) \
-static const PROGMEM type array##_P[3] =        \
+static const type array##_P[3] MARLIN_PROGMEM =        \
     { X_##CONFIG, Y_##CONFIG, Z_##CONFIG };     \
 static inline type array(int axis)          \
     { return pgm_read_any(&array##_P[axis]); }
diff --git a/Marlin/planner.cpp b/Marlin/planner.cpp
index 5d9fba9..7c43ef6 100644
--- a/Marlin/planner.cpp
+++ b/Marlin/planner.cpp
@@ -80,7 +80,7 @@ unsigned long axis_steps_per_sqr_second[NUM_AXIS];
 matrix_3x3 plan_bed_level_matrix = {
 	1.0, 0.0, 0.0,
 	0.0, 1.0, 0.0,
-	0.0, 0.0, 1.0,
+	0.0, 0.0, 1.0
 };
 #endif // #ifdef ENABLE_AUTO_BED_LEVELING
 
diff --git a/Marlin/speed_lookuptable.h b/Marlin/speed_lookuptable.h
index b7c00f1..67530a4 100644
--- a/Marlin/speed_lookuptable.h
+++ b/Marlin/speed_lookuptable.h
@@ -5,7 +5,7 @@
 
 #if F_CPU == 16000000
 
-const uint16_t speed_lookuptable_fast[256][2] PROGMEM = {\
+const prog_uint16_t speed_lookuptable_fast[256][2] MARLIN_PROGMEM = {\
 { 62500, 55556}, { 6944, 3268}, { 3676, 1176}, { 2500, 607}, { 1893, 369}, { 1524, 249}, { 1275, 179}, { 1096, 135}, 
 { 961, 105}, { 856, 85}, { 771, 69}, { 702, 58}, { 644, 49}, { 595, 42}, { 553, 37}, { 516, 32}, 
 { 484, 28}, { 456, 25}, { 431, 23}, { 408, 20}, { 388, 19}, { 369, 16}, { 353, 16}, { 337, 14}, 
@@ -40,7 +40,7 @@ const uint16_t speed_lookuptable_fast[256][2] PROGMEM = {\
 { 31, 0}, { 31, 0}, { 31, 0}, { 31, 1}, { 30, 0}, { 30, 0}, { 30, 0}, { 30, 0}
 };
 
-const uint16_t speed_lookuptable_slow[256][2] PROGMEM = {\
+const prog_uint16_t speed_lookuptable_slow[256][2] MARLIN_PROGMEM = {\
 { 62500, 12500}, { 50000, 8334}, { 41666, 5952}, { 35714, 4464}, { 31250, 3473}, { 27777, 2777}, { 25000, 2273}, { 22727, 1894}, 
 { 20833, 1603}, { 19230, 1373}, { 17857, 1191}, { 16666, 1041}, { 15625, 920}, { 14705, 817}, { 13888, 731}, { 13157, 657}, 
 { 12500, 596}, { 11904, 541}, { 11363, 494}, { 10869, 453}, { 10416, 416}, { 10000, 385}, { 9615, 356}, { 9259, 331}, 
@@ -77,7 +77,7 @@ const uint16_t speed_lookuptable_slow[256][2] PROGMEM = {\
 
 #elif F_CPU == 20000000
 
-const uint16_t speed_lookuptable_fast[256][2] PROGMEM = {
+const uint16_t speed_lookuptable_fast[256][2] MARLIN_PROGMEM = {
    {62500, 54055}, {8445, 3917}, {4528, 1434}, {3094, 745}, {2349, 456}, {1893, 307}, {1586, 222}, {1364, 167},
    {1197, 131}, {1066, 105}, {961, 86}, {875, 72}, {803, 61}, {742, 53}, {689, 45}, {644, 40},
    {604, 35}, {569, 32}, {537, 28}, {509, 25}, {484, 23}, {461, 21}, {440, 19}, {421, 17},
@@ -112,7 +112,7 @@ const uint16_t speed_lookuptable_fast[256][2] PROGMEM = {
    {39, 0}, {39, 0}, {39, 1}, {38, 0}, {38, 0}, {38, 0}, {38, 0}, {38, 0},
 };
 
-const uint16_t speed_lookuptable_slow[256][2] PROGMEM = {
+const uint16_t speed_lookuptable_slow[256][2] MARLIN_PROGMEM = {
    {62500, 10417}, {52083, 7441}, {44642, 5580}, {39062, 4340}, {34722, 3472}, {31250, 2841}, {28409, 2368}, {26041, 2003},
    {24038, 1717}, {22321, 1488}, {20833, 1302}, {19531, 1149}, {18382, 1021}, {17361, 914}, {16447, 822}, {15625, 745},
    {14880, 676}, {14204, 618}, {13586, 566}, {13020, 520}, {12500, 481}, {12019, 445}, {11574, 414}, {11160, 385},
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index f6eadaa..d04f1fe 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -33,6 +33,7 @@
 #include "ultralcd.h"
 #include "temperature.h"
 #include "watchdog.h"
+#include "thermistortables.h"
 
 #include "Sd2PinMap.h"
 
diff --git a/README.md b/README.md
index 8a2eb6c..a3bae9b 100644
--- a/README.md
+++ b/README.md
@@ -9,6 +9,7 @@
   * Notes
     * [Auto Bed Leveling](/Documentation/BedLeveling.md)
     * [Filament Sensor](/Documentation/FilamentSensor.md)
+    * [Ramps Servo Power](/Documentation/RampsServoPower.md)
 
 ##### [RepRap.org Wiki Page](http://reprap.org/wiki/Marlin)
 

