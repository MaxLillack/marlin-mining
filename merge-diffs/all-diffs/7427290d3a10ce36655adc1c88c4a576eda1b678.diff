commit 7427290d3a10ce36655adc1c88c4a576eda1b678 (from 165d7abb1b854becddacc18187cdc05ad76ed95c)
Merge: 165d7ab aa30550
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Aug 15 19:25:56 2016 -0700

    Merge pull request #4634 from thinkyhead/rc_lang_disp_char
    
    Set language display charset in language.h

diff --git a/Marlin/language.h b/Marlin/language.h
index 496fed5..002e957 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -25,6 +25,9 @@
 
 #include "MarlinConfig.h"
 
+// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
+//#define SIMULATE_ROMFONT
+
 // Fallback if no language is set. DON'T CHANGE
 #ifndef LCD_LANGUAGE
   #define LCD_LANGUAGE en
@@ -239,6 +242,11 @@
 #define INCLUDE_LANGUAGE LANGUAGE_INCL(LCD_LANGUAGE)
 
 #include INCLUDE_LANGUAGE
+
+#if DISABLED(SIMULATE_ROMFONT) && DISABLED(DISPLAY_CHARSET_ISO10646_1) && DISABLED(DISPLAY_CHARSET_ISO10646_5) && DISABLED(DISPLAY_CHARSET_ISO10646_KANA) && DISABLED(DISPLAY_CHARSET_ISO10646_GREEK) && DISABLED(DISPLAY_CHARSET_ISO10646_CN)
+  #define DISPLAY_CHARSET_ISO10646_1 // use the better font on full graphic displays.
+#endif
+
 #include "language_en.h"
 
 #endif //__LANGUAGE_H
diff --git a/Marlin/language_an.h b/Marlin/language_an.h
index afc6a07..9184d33 100644
--- a/Marlin/language_an.h
+++ b/Marlin/language_an.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_AN_H
 #define LANGUAGE_AN_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " parada."
diff --git a/Marlin/language_bg.h b/Marlin/language_bg.h
index 8c8b641..5d5d322 100644
--- a/Marlin/language_bg.h
+++ b/Marlin/language_bg.h
@@ -31,8 +31,6 @@
 #define LANGUAGE_BG_H
 
 #define MAPPER_D0D1                // For Cyrillic
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_5
 
 #define WELCOME_MSG                         MACHINE_NAME " Готов."
diff --git a/Marlin/language_ca.h b/Marlin/language_ca.h
index f20580e..efa296f 100644
--- a/Marlin/language_ca.h
+++ b/Marlin/language_ca.h
@@ -31,8 +31,6 @@
 #define LANGUAGE_CA_H
 
 #define MAPPER_C2C3  // because of "ó"
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " preparada."
diff --git a/Marlin/language_cz.h b/Marlin/language_cz.h
index 9753a0c..89158e7 100644
--- a/Marlin/language_cz.h
+++ b/Marlin/language_cz.h
@@ -34,8 +34,6 @@
 #ifndef LANGUAGE_CZ_H
 #define LANGUAGE_CZ_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " pripraven."
diff --git a/Marlin/language_da.h b/Marlin/language_da.h
index 3af5d8f..b4cf853 100644
--- a/Marlin/language_da.h
+++ b/Marlin/language_da.h
@@ -31,8 +31,6 @@
 #define LANGUAGE_DA_H
 
 #define MAPPER_C2C3
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " er klar"
diff --git a/Marlin/language_de.h b/Marlin/language_de.h
index ed78368..5ea5063 100644
--- a/Marlin/language_de.h
+++ b/Marlin/language_de.h
@@ -31,8 +31,6 @@
 #define LANGUAGE_DE_H
 
 #define MAPPER_C2C3
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " bereit"
diff --git a/Marlin/language_el-gr.h b/Marlin/language_el-gr.h
index 04b3aa8..1c18496 100644
--- a/Marlin/language_el-gr.h
+++ b/Marlin/language_el-gr.h
@@ -30,9 +30,6 @@
 #ifndef LANGUAGE_EL_GR_H
 #define LANGUAGE_EL_GR_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
-
 //#define MAPPER_CECF
 //#define DISPLAY_CHARSET_ISO10646_GREEK
 
diff --git a/Marlin/language_el.h b/Marlin/language_el.h
index 0bcaffd..4242969 100644
--- a/Marlin/language_el.h
+++ b/Marlin/language_el.h
@@ -30,9 +30,6 @@
 #ifndef LANGUAGE_EL_H
 #define LANGUAGE_EL_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
-
 #define MAPPER_CECF
 #define DISPLAY_CHARSET_ISO10646_GREEK
 
diff --git a/Marlin/language_en.h b/Marlin/language_en.h
index 4c2e8bc..560c44b 100644
--- a/Marlin/language_en.h
+++ b/Marlin/language_en.h
@@ -30,11 +30,6 @@
 #ifndef LANGUAGE_EN_H
 #define LANGUAGE_EN_H
 
-//#define SIMULATE_ROMFONT //Comment in to see what is seen on the character based displays
-#if DISABLED(SIMULATE_ROMFONT) && DISABLED(DISPLAY_CHARSET_ISO10646_1) && DISABLED(DISPLAY_CHARSET_ISO10646_5) && DISABLED(DISPLAY_CHARSET_ISO10646_KANA) && DISABLED(DISPLAY_CHARSET_ISO10646_GREEK) && DISABLED(DISPLAY_CHARSET_ISO10646_CN)
-  #define DISPLAY_CHARSET_ISO10646_1 // use the better font on full graphic displays.
-#endif
-
 #ifndef WELCOME_MSG
   #define WELCOME_MSG                         MACHINE_NAME " ready."
 #endif
diff --git a/Marlin/language_es.h b/Marlin/language_es.h
index 662530e..06d79f7 100644
--- a/Marlin/language_es.h
+++ b/Marlin/language_es.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_ES_H
 #define LANGUAGE_ES_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " lista."
diff --git a/Marlin/language_eu.h b/Marlin/language_eu.h
index ce7e7bd..64c3fb3 100644
--- a/Marlin/language_eu.h
+++ b/Marlin/language_eu.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_EU_H
 #define LANGUAGE_EU_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " prest."
diff --git a/Marlin/language_fi.h b/Marlin/language_fi.h
index 90c6276..461bb41 100644
--- a/Marlin/language_fi.h
+++ b/Marlin/language_fi.h
@@ -31,8 +31,6 @@
 #define LANGUAGE_FI_H
 
 #define MAPPER_C2C3
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " valmis."
diff --git a/Marlin/language_fr.h b/Marlin/language_fr.h
index a2b7b3f..eff8d32 100644
--- a/Marlin/language_fr.h
+++ b/Marlin/language_fr.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_FR_H
 #define LANGUAGE_FR_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " prete."
diff --git a/Marlin/language_gl.h b/Marlin/language_gl.h
index e28d193..5f1b591 100644
--- a/Marlin/language_gl.h
+++ b/Marlin/language_gl.h
@@ -31,8 +31,6 @@
 #define LANGUAGE_GL_H
 
 #define MAPPER_C2C3
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " lista."
diff --git a/Marlin/language_hr.h b/Marlin/language_hr.h
index e8a3c11..ebfaeb2 100644
--- a/Marlin/language_hr.h
+++ b/Marlin/language_hr.h
@@ -30,9 +30,6 @@
 #ifndef LANGUAGE_HR_H
 #define LANGUAGE_HR_H
 
-
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1 // use the better font on full graphic displays.
 
 #define WELCOME_MSG                         MACHINE_NAME " spreman."
diff --git a/Marlin/language_it.h b/Marlin/language_it.h
index ee2e6f1..4121d59 100644
--- a/Marlin/language_it.h
+++ b/Marlin/language_it.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_IT_H
 #define LANGUAGE_IT_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " pronto."
diff --git a/Marlin/language_kana_utf8.h b/Marlin/language_kana_utf8.h
index 6dfec2e..b483995 100644
--- a/Marlin/language_kana_utf8.h
+++ b/Marlin/language_kana_utf8.h
@@ -32,8 +32,6 @@
 #define LANGUAGE_KANA_UTF_H
 
 #define MAPPER_E382E383
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_KANA
 
 // This just to show the potential benefit of unicode.
diff --git a/Marlin/language_nl.h b/Marlin/language_nl.h
index 842a64d..82f0a69 100644
--- a/Marlin/language_nl.h
+++ b/Marlin/language_nl.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_NL_H
 #define LANGUAGE_NL_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " gereed."
diff --git a/Marlin/language_pl.h b/Marlin/language_pl.h
index fd6ebd5..efde140 100644
--- a/Marlin/language_pl.h
+++ b/Marlin/language_pl.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_PL_H
 #define LANGUAGE_PL_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " gotowy."
diff --git a/Marlin/language_pt-br.h b/Marlin/language_pt-br.h
index 49bec2c..1db6ae6 100644
--- a/Marlin/language_pt-br.h
+++ b/Marlin/language_pt-br.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_PT_BR_H
 #define LANGUAGE_PT_BR_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " pronto."
diff --git a/Marlin/language_pt-br_utf8.h b/Marlin/language_pt-br_utf8.h
index bc8e5e2..43e5d54 100644
--- a/Marlin/language_pt-br_utf8.h
+++ b/Marlin/language_pt-br_utf8.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_PT_BR_UTF_H
 #define LANGUAGE_PT_BR_UTF_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " pronto."
diff --git a/Marlin/language_pt.h b/Marlin/language_pt.h
index b64c042..5996dd1 100644
--- a/Marlin/language_pt.h
+++ b/Marlin/language_pt.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_PT_H
 #define LANGUAGE_PT_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " pronto."
diff --git a/Marlin/language_pt_utf8.h b/Marlin/language_pt_utf8.h
index 0146ff9..ec56a86 100644
--- a/Marlin/language_pt_utf8.h
+++ b/Marlin/language_pt_utf8.h
@@ -30,8 +30,6 @@
 #ifndef LANGUAGE_PT_UTF_H
 #define LANGUAGE_PT_UTF_H
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_1
 
 #define WELCOME_MSG                         MACHINE_NAME " pronto."
diff --git a/Marlin/language_ru.h b/Marlin/language_ru.h
index e3e63cb..e953b0b 100644
--- a/Marlin/language_ru.h
+++ b/Marlin/language_ru.h
@@ -31,8 +31,6 @@
 #define LANGUAGE_RU_H
 
 #define MAPPER_D0D1                // For Cyrillic
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_5
 
 #define WELCOME_MSG                         MACHINE_NAME " Готов."
diff --git a/Marlin/language_test.h b/Marlin/language_test.h
index 99fa712..25b9c09 100644
--- a/Marlin/language_test.h
+++ b/Marlin/language_test.h
@@ -51,8 +51,6 @@
 //#define MAPPER_E382E383    // For Katakana
 //#define MAPPER_NON         // For direct ascii codes. Fall back mapper - if no other is defined.
 
-// Define SIMULATE_ROMFONT to see what is seen on the character based display defined in Configuration.h
-//#define SIMULATE_ROMFONT
 
 // Select the better font for full graphic displays.
 //#define DISPLAY_CHARSET_ISO10646_1

commit 7427290d3a10ce36655adc1c88c4a576eda1b678 (from aa30550b2130751dfb6e04a0cb6cb6b7312c8f96)
Merge: 165d7ab aa30550
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Aug 15 19:25:56 2016 -0700

    Merge pull request #4634 from thinkyhead/rc_lang_disp_char
    
    Set language display charset in language.h

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 5dab1f4..0866a08 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -5285,8 +5285,8 @@ inline void gcode_M121() { endstops.enable_globally(false); }
 
     uint8_t bytes = code_seen('B') ? code_value_byte() : 1;
 
-    if (i2c.addr > 0 && bytes > 0 && bytes <= 32) {
-      i2c.reqbytes(bytes);
+    if (i2c.addr && bytes && bytes <= TWIBUS_BUFFER_SIZE) {
+      i2c.relay(bytes);
     }
     else {
       SERIAL_ERROR_START;
diff --git a/Marlin/language_es.h b/Marlin/language_es.h
index c1a2a12..06d79f7 100644
--- a/Marlin/language_es.h
+++ b/Marlin/language_es.h
@@ -44,7 +44,7 @@
 #define MSG_AUTO_HOME_Y                     "Origen Y"
 #define MSG_AUTO_HOME_Z                     "Origen Z"
 #define MSG_LEVEL_BED_HOMING                "Origen XYZ"
-#define MSG_LEVEL_BED_WAITING               "Presione para iniciar"
+#define MSG_LEVEL_BED_WAITING               "Iniciar (Presione)"
 #define MSG_LEVEL_BED_DONE                  "Nivelacion lista!"
 #define MSG_LEVEL_BED_CANCEL                "Cancelar"
 #define MSG_SET_HOME_OFFSETS                "Ajustar desfases"
@@ -84,7 +84,7 @@
 #define MSG_MIN                             LCD_STR_THERMOMETER " Min"
 #define MSG_MAX                             LCD_STR_THERMOMETER " Max"
 #define MSG_FACTOR                          LCD_STR_THERMOMETER " Fact"
-#define MSG_AUTOTEMP                        "Temperatura Automatica"
+#define MSG_AUTOTEMP                        "Temperatura Auto."
 #define MSG_ON                              "Encender"
 #define MSG_OFF                             "Apagar"
 #define MSG_PID_P                           "PID-P"
@@ -113,7 +113,7 @@
 #define MSG_CONTRAST                        "Contraste"
 #define MSG_STORE_EPROM                     "Guardar memoria"
 #define MSG_LOAD_EPROM                      "Cargar memoria"
-#define MSG_RESTORE_FAILSAFE                "Restaurar memoria."
+#define MSG_RESTORE_FAILSAFE                "Restaurar memoria"
 #define MSG_REFRESH                         "Volver a cargar"
 #define MSG_WATCH                           "Informacion"
 #define MSG_PREPARE                         "Preparar"
@@ -128,7 +128,7 @@
 #define MSG_RESUMING                        "Resumiendo impre."
 #define MSG_PRINT_ABORTED                   "Impresion cancelada"
 #define MSG_NO_MOVE                         "Sin movimiento"
-#define MSG_KILLED                          "Parada de emergencia."
+#define MSG_KILLED                          "Parada de emergencia"
 #define MSG_STOPPED                         "Detenida"
 #define MSG_CONTROL_RETRACT                 "Retraer mm"
 #define MSG_CONTROL_RETRACT_SWAP            "Interc. Retraer mm"
@@ -150,20 +150,62 @@
 #define MSG_BABYSTEP_Z                      "Micropaso Z"
 #define MSG_ENDSTOP_ABORT                   "Cancelado - Endstop"
 #define MSG_HEATING_FAILED_LCD              "Error: al calentar"
-#define MSG_ERR_REDUNDANT_TEMP              "Error: temperatura redundante"
+#define MSG_ERR_REDUNDANT_TEMP              "Error: temperatura"
 #define MSG_THERMAL_RUNAWAY                 "Error de temperatura"
 #define MSG_ERR_MAXTEMP                     "Error: Temp Maxima"
 #define MSG_ERR_MINTEMP                     "Error: Temp Minima"
-#define MSG_ERR_MAXTEMP_BED                 "Error: Temp Max Plataforma"
-#define MSG_ERR_MINTEMP_BED                 "Error: Temp Min Plataforma"
+#define MSG_ERR_MAXTEMP_BED                 "Error: Temp Max Plat"
+#define MSG_ERR_MINTEMP_BED                 "Error: Temp Min Plat"
 #define MSG_HEATING                         "Calentando..."
-#define MSG_HEATING_COMPLETE                "Calentamiento Completo"
-#define MSG_BED_HEATING                     "Calentando plataforma ..."
+#define MSG_HEATING_COMPLETE                "Calentamiento listo"
+#define MSG_BED_HEATING                     "Calentando Plat..."
 #define MSG_BED_DONE                        "Plataforma Caliente"
 #define MSG_DELTA_CALIBRATE                 "Calibracion Delta"
 #define MSG_DELTA_CALIBRATE_X               "Calibrar X"
 #define MSG_DELTA_CALIBRATE_Y               "Calibrar Y"
 #define MSG_DELTA_CALIBRATE_Z               "Calibrar Z"
 #define MSG_DELTA_CALIBRATE_CENTER          "Calibrar Centro"
-
+#define MSG_INFO_MENU                       "Inf. Impresora"
+#define MSG_INFO_PRINTER_MENU               "Inf. Impresora"
+#define MSG_INFO_STATS_MENU                 "Estadisticas Imp."
+#define MSG_INFO_BOARD_MENU                 "Inf. Controlador"
+#define MSG_INFO_THERMISTOR_MENU            "Termistores"
+#define MSG_INFO_EXTRUDERS                  "Extrusores"
+#define MSG_INFO_BAUDRATE                   "Baudios"
+#define MSG_INFO_PROTOCOL                   "Protocolo"
+#define MSG_INFO_PRINT_COUNT                "Conteo de impresion"
+#define MSG_INFO_COMPLETED_PRINTS           "Completadas"
+#define MSG_INFO_PRINT_TIME                 "Tiempo total de imp."
+#define MSG_INFO_PRINT_LONGEST              "Impresion mas larga"
+#define MSG_INFO_PRINT_FILAMENT             "Total de Extrusion"
+#define MSG_INFO_PRINT_COUNT                "Impresiones"
+#define MSG_INFO_COMPLETED_PRINTS           "Completadas"
+#define MSG_INFO_PRINT_TIME                 "Total"
+#define MSG_INFO_PRINT_LONGEST              "Mas larga"
+#define MSG_INFO_PRINT_FILAMENT             "Extrusion"
+#define MSG_INFO_MIN_TEMP                   "Temperatura minima"
+#define MSG_INFO_MAX_TEMP                   "Temperatura maxima"
+#define MSG_INFO_PSU                        "Fuente de poder"
+#define MSG_FILAMENT_CHANGE_HEADER          "Cambiar Filamento"
+#define MSG_FILAMENT_CHANGE_OPTION_HEADER   "Opciones de cambio:"
+#define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  "Extruir mas"
+#define MSG_FILAMENT_CHANGE_OPTION_RESUME   "Resumir imp."
+#define MSG_FILAMENT_CHANGE_INIT_1          "Esperando iniciar"
+#define MSG_FILAMENT_CHANGE_INIT_2          "del filamento"
+#define MSG_FILAMENT_CHANGE_INIT_3          "cambiar"
+#define MSG_FILAMENT_CHANGE_UNLOAD_1        "Esperado por"
+#define MSG_FILAMENT_CHANGE_UNLOAD_2        "filamento expulsado"
+#define MSG_FILAMENT_CHANGE_UNLOAD_3        ""
+#define MSG_FILAMENT_CHANGE_INSERT_1        "Inserte filamento"
+#define MSG_FILAMENT_CHANGE_INSERT_2        "y presione el boton"
+#define MSG_FILAMENT_CHANGE_INSERT_3        "para continuar..."
+#define MSG_FILAMENT_CHANGE_LOAD_1          "Esperado por"
+#define MSG_FILAMENT_CHANGE_LOAD_2          "Cargar filamento"
+#define MSG_FILAMENT_CHANGE_LOAD_3          ""
+#define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Esperado por"
+#define MSG_FILAMENT_CHANGE_EXTRUDE_2       "Extruir filamento"
+#define MSG_FILAMENT_CHANGE_EXTRUDE_3       ""
+#define MSG_FILAMENT_CHANGE_RESUME_1        "Esperando imp."
+#define MSG_FILAMENT_CHANGE_RESUME_2        "para resumir"
+#define MSG_FILAMENT_CHANGE_RESUME_3        ""
 #endif // LANGUAGE_ES_H
diff --git a/Marlin/twibus.cpp b/Marlin/twibus.cpp
index ab04fa3..bf17db3 100644
--- a/Marlin/twibus.cpp
+++ b/Marlin/twibus.cpp
@@ -86,32 +86,72 @@ void TWIBus::send() {
   this->reset();
 }
 
-void TWIBus::echodata(uint8_t bytes, const char prefix[], uint8_t adr) {
+// static
+void TWIBus::echoprefix(uint8_t bytes, const char prefix[], uint8_t adr) {
   SERIAL_ECHO_START;
   serialprintPGM(prefix);
   SERIAL_ECHOPAIR(": from:", adr);
   SERIAL_ECHOPAIR(" bytes:", bytes);
   SERIAL_ECHOPGM (" data:");
+}
+
+// static
+void TWIBus::echodata(uint8_t bytes, const char prefix[], uint8_t adr) {
+  echoprefix(bytes, prefix, adr);
   while (bytes-- && Wire.available()) SERIAL_CHAR(Wire.read());
   SERIAL_EOL;
 }
 
-void TWIBus::reqbytes(const uint8_t bytes) {
-  if (!this->addr) return;
+void TWIBus::echobuffer(const char prefix[], uint8_t adr) {
+  echoprefix(this->buffer_s, prefix, adr);
+  for (uint8_t i = 0; i < this->buffer_s; i++) SERIAL_CHAR(this->buffer[i]);
+  SERIAL_EOL;
+}
+
+bool TWIBus::request(const uint8_t bytes) {
+  if (!this->addr) return false;
 
   #if ENABLED(DEBUG_TWIBUS)
-    debug(PSTR("reqbytes"), bytes);
+    debug(PSTR("request"), bytes);
   #endif
 
   // requestFrom() is a blocking function
   Wire.requestFrom(this->addr, bytes);
 
-  // Wait until all bytes arrive, or timeout
+  // Wait for all bytes to arrive
   millis_t t = millis() + this->timeout;
-  while (Wire.available() < bytes && PENDING(millis(), t)) { /*nada*/ }
+  while (Wire.available() < bytes)
+    if (ELAPSED(millis(), t)) {
+      #if ENABLED(DEBUG_TWIBUS)
+        SERIAL_ECHO_START;
+        SERIAL_ECHOLNPGM("i2c timeout");
+      #endif
+      return false;
+    }
+
+  return true;
+}
+
+void TWIBus::relay(const uint8_t bytes) {
+  #if ENABLED(DEBUG_TWIBUS)
+    debug(PSTR("relay"), bytes);
+  #endif
+
+  if (this->request(bytes))
+    echodata(bytes, PSTR("i2c-reply"), this->addr);
+}
+
+uint8_t TWIBus::capture(char *dst, const uint8_t bytes) {
+  this->reset();
+  uint8_t count = 0;
+  while (count < bytes && Wire.available())
+    dst[count++] = Wire.read();
+  return count;
+}
 
-  // Simply echo the data to the bus
-  this->echodata(bytes, PSTR("i2c-reply"), this->addr);
+// static
+void TWIBus::flush() {
+  while (Wire.available()) Wire.read();
 }
 
 #if I2C_SLAVE_ADDRESS > 0
@@ -120,7 +160,7 @@ void TWIBus::reqbytes(const uint8_t bytes) {
     #if ENABLED(DEBUG_TWIBUS)
       debug(PSTR("receive"), bytes);
     #endif
-    this->echodata(bytes, PSTR("i2c-receive"), 0);
+    echodata(bytes, PSTR("i2c-receive"), 0);
   }
 
   void TWIBus::reply(char str[]/*=NULL*/) {
@@ -142,6 +182,7 @@ void TWIBus::reqbytes(const uint8_t bytes) {
 
 #if ENABLED(DEBUG_TWIBUS)
 
+  // static
   void TWIBus::prefix(const char func[]) {
     SERIAL_ECHOPGM("TWIBus::");
     serialprintPGM(func);
diff --git a/Marlin/twibus.h b/Marlin/twibus.h
index 32928a8..d578a6d 100644
--- a/Marlin/twibus.h
+++ b/Marlin/twibus.h
@@ -33,6 +33,8 @@
 typedef void (*twiReceiveFunc_t)(int bytes);
 typedef void (*twiRequestFunc_t)();
 
+#define TWIBUS_BUFFER_SIZE 32
+
 /**
  * TWIBUS class
  *
@@ -70,7 +72,7 @@ class TWIBus {
      * @brief Internal buffer
      * @details A fixed buffer. TWI commands can be no longer than this.
      */
-    char buffer[32];
+    char buffer[TWIBUS_BUFFER_SIZE];
 
 
   public:
@@ -135,6 +137,14 @@ class TWIBus {
     void address(const uint8_t adr);
 
     /**
+     * @brief Prefix for echo to serial
+     * @details Echo a label, length, address, and "data:"
+     *
+     * @param bytes the number of bytes to request
+     */
+    static void echoprefix(uint8_t bytes, const char prefix[], uint8_t adr);
+
+    /**
      * @brief Echo data on the bus to serial
      * @details Echo some number of bytes from the bus
      *          to serial in a parser-friendly format.
@@ -144,14 +154,48 @@ class TWIBus {
     static void echodata(uint8_t bytes, const char prefix[], uint8_t adr);
 
     /**
-     * @brief Request data from the slave device
+     * @brief Echo data in the buffer to serial
+     * @details Echo the entire buffer to serial
+     *          to serial in a parser-friendly format.
+     *
+     * @param bytes the number of bytes to request
+     */
+    void echobuffer(const char prefix[], uint8_t adr);
+
+    /**
+     * @brief Request data from the slave device and wait.
      * @details Request a number of bytes from a slave device.
-     *          This implementation simply sends the data to serial
-     *          in a parser-friendly format.
+     *          Wait for the data to arrive until the timeout
+     *          interval expires. Return true on success.
+     *
+     * @param bytes the number of bytes to request
+     * @return status of the request: true=success, false=timeout
+     */
+    bool request(const uint8_t bytes);
+
+    /**
+     * @brief Capture data from the bus into the buffer.
+     * @details Capture data after a request has succeeded.
+     *
+     * @param bytes the number of bytes to request
+     * @return the number of bytes captured to the buffer
+     */
+    uint8_t capture(char *dst, const uint8_t bytes);
+
+    /**
+     * @brief Flush the i2c bus.
+     * @details Get all bytes on the bus and throw them away.
+     */
+    static void flush();
+
+    /**
+     * @brief Request data from the slave device, echo to serial.
+     * @details Request a number of bytes from a slave device and output
+     *          the returned data to serial in a parser-friendly format.
      *
      * @param bytes the number of bytes to request
      */
-    void reqbytes(const uint8_t bytes);
+    void relay(const uint8_t bytes);
 
     #if I2C_SLAVE_ADDRESS > 0
 
@@ -181,6 +225,7 @@ class TWIBus {
       /**
        * @brief Send a reply to the bus
        * @details Send the buffer and clear it.
+       *          If a string is passed, write it into the buffer first.
        */
       void reply(char str[]=NULL);
       inline void reply(const char str[]) { this->reply((char*)str); }

