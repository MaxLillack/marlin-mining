commit 34377ee512d22d0c98bc02f2fc7f8f2e6cd53d2d (from 7378a7fef444bf081746f786556b90f2b6aa986f)
Merge: 7378a7f 53eea61
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jan 27 22:10:08 2015 -0800

    Merge pull request #1427 from thinkyhead/fewer_preheat_strings
    
    Remove language strings that only add a number

diff --git a/Marlin/language.h b/Marlin/language.h
index 8dd0250..e019b36 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -11,19 +11,20 @@
 //   ==> ALSO TRY ALL AVAILABLE LANGUAGE OPTIONS
 
 // Languages
-// en English
-// pl Polish
-// fr French
-// de German
-// es Spanish
-// ru Russian
-// it Italian
-// pt Portuguese
-// fi Finnish
-// an Aragonese
-// nl Dutch
-// ca Catalan
-// eu Basque-Euskera
+// en    English
+// pl    Polish
+// fr    French
+// de    German
+// es    Spanish
+// ru    Russian
+// it    Italian
+// pt    Portuguese
+// pt-br Portuguese (Brazil)
+// fi    Finnish
+// an    Aragonese
+// nl    Dutch
+// ca    Catalan
+// eu    Basque-Euskera
 
 #ifndef LANGUAGE_INCLUDE
   // pick your language from the list above
diff --git a/Marlin/language_an.h b/Marlin/language_an.h
index 5ba45af..e26c7d8 100644
--- a/Marlin/language_an.h
+++ b/Marlin/language_an.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Establir zero"
 #define MSG_PREHEAT_PLA                     "Precalentar PLA"
-#define MSG_PREHEAT_PLA0                    "Precalentar PLA1"
-#define MSG_PREHEAT_PLA1                    "Precalentar PLA2"
-#define MSG_PREHEAT_PLA2                    "Precalentar PLA3"
-#define MSG_PREHEAT_PLA3                    "Precalentar PLA4"
-#define MSG_PREHEAT_PLA0123                 "Precalentar PLA a"
+#define MSG_PREHEAT_PLA_N                   "Precalentar PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Precalentar PLA a"
 #define MSG_PREHEAT_PLA_BEDONLY             "Prec. PLA Base"
 #define MSG_PREHEAT_PLA_SETTINGS            "Achustar tem. PLA"
 #define MSG_PREHEAT_ABS                     "Precalentar ABS"
-#define MSG_PREHEAT_ABS0                    "Precalentar ABS1"
-#define MSG_PREHEAT_ABS1                    "Precalentar ABS2"
-#define MSG_PREHEAT_ABS2                    "Precalentar ABS3"
-#define MSG_PREHEAT_ABS3                    "Precalentar ABS4"
-#define MSG_PREHEAT_ABS0123                 "Precalentar ABS a"
+#define MSG_PREHEAT_ABS_N                   "Precalentar ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Precalentar ABS a"
 #define MSG_PREHEAT_ABS_BEDONLY             "Prec. ABS Base"
 #define MSG_PREHEAT_ABS_SETTINGS            "Achustar tem. ABS"
 #define MSG_COOLDOWN                        "Enfriar"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Move Y"
 #define MSG_MOVE_Z                          "Move Z"
 #define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "Move 0.1mm"
 #define MSG_MOVE_1MM                        "Move 1mm"
 #define MSG_MOVE_10MM                       "Move 10mm"
 #define MSG_SPEED                           "Velocidat"
 #define MSG_NOZZLE                          "Nozzle"
-#define MSG_NOZZLE1                         "Nozzle2"
-#define MSG_NOZZLE2                         "Nozzle3"
 #define MSG_BED                             "Base"
 #define MSG_FAN_SPEED                       "Ixoriador"
 #define MSG_FLOW                            "Fluxo"
-#define MSG_FLOW0                           "Fluxo 0"
-#define MSG_FLOW1                           "Fluxo 1"
-#define MSG_FLOW2                           "Fluxo 2"
 #define MSG_CONTROL                         "Control"
 #define MSG_MIN                             "\002 Min"
 #define MSG_MAX                             "\002 Max"
@@ -132,17 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
 
-#define MSG_RECTRACT                        "Retraer"
-#define MSG_RECTRACT_WIDE                   "Retraer"
-#define MSG_TEMPERATURE_WIDE                "Temperatura"
-#define MSG_TEMPERATURE_RTN                 "Temperatura"
-#define MSG_MAIN_WIDE                       "Menu Prencipal"
-#define MSG_MOTION_WIDE                     "Movimiento"
-#define MSG_PREPARE_ALT                     "Preparar"
-#define MSG_CONTROL_ARROW                   "Control \x7E"
-#define MSG_RETRACT_ARROW                   "Retraer \x7E"
-#define MSG_STEPPER_RELEASED                "Desacoplada."
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_ca.h b/Marlin/language_ca.h
index 12ad566..e7f837d 100644
--- a/Marlin/language_ca.h
+++ b/Marlin/language_ca.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Establir origen"
 #define MSG_PREHEAT_PLA                     "Preescalfar PLA"
-#define MSG_PREHEAT_PLA0                    "Preescalfar PLA 1"
-#define MSG_PREHEAT_PLA1                    "Preescalfar PLA 2"
-#define MSG_PREHEAT_PLA2                    "Preescalfar PLA 3"
-#define MSG_PREHEAT_PLA3                    "Preescalfar PLA 4" 
-#define MSG_PREHEAT_PLA0123                 "Preesc. tot PLA"
+#define MSG_PREHEAT_PLA_N                   "Preescalfar PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Preesc. tot PLA"
 #define MSG_PREHEAT_PLA_BEDONLY             "Preesc. llit PLA"
 #define MSG_PREHEAT_PLA_SETTINGS            "Configuració PLA"
 #define MSG_PREHEAT_ABS                     "Preescalfar ABS"
-#define MSG_PREHEAT_ABS0                    "Preescalfar ABS 1"
-#define MSG_PREHEAT_ABS1                    "Preescalfar ABS 2"
-#define MSG_PREHEAT_ABS2                    "Preescalfar ABS 3"
-#define MSG_PREHEAT_ABS3                    "Preescalfar ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Preesc. tot ABS"
+#define MSG_PREHEAT_ABS_N                   "Preescalfar ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Preesc. tot ABS"
 #define MSG_PREHEAT_ABS_BEDONLY             "Preesc. llit ABS"
 #define MSG_PREHEAT_ABS_SETTINGS            "Configuració ABS"
 #define MSG_COOLDOWN                        "Refredar"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Moure Y"
 #define MSG_MOVE_Z                          "Moure Z"
 #define MSG_MOVE_E                          "Extrusor"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "Moure 0.1mm"
 #define MSG_MOVE_1MM                        "Moure 1mm"
 #define MSG_MOVE_10MM                       "Moure 10mm"
 #define MSG_SPEED                           "Velocitat"
 #define MSG_NOZZLE                          "Nozzle"
-#define MSG_NOZZLE1                         "Nozzle2"
-#define MSG_NOZZLE2                         "Nozzle3"
 #define MSG_BED                             "Llit"
 #define MSG_FAN_SPEED                       "Vel. Ventilador"
 #define MSG_FLOW                            "Fluxe"
-#define MSG_FLOW0                           "Fluxe 0"
-#define MSG_FLOW1                           "Fluxe 1"
-#define MSG_FLOW2                           "Fluxe 2"
 #define MSG_CONTROL                         "Control"
 #define MSG_MIN                             " \002 Min"
 #define MSG_MAX                             " \002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -140,8 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
 
-#define MSG_RECTRACT                        "Retreure"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_de.h b/Marlin/language_de.h
index c3a1a95..8aa0602 100644
--- a/Marlin/language_de.h
+++ b/Marlin/language_de.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Setze Nullpunkt"
 #define MSG_PREHEAT_PLA                     "Vorwärmen PLA"
-#define MSG_PREHEAT_PLA0                    "Vorwärmen PLA 1"
-#define MSG_PREHEAT_PLA1                    "Vorwärmen PLA 2"
-#define MSG_PREHEAT_PLA2                    "Vorwärmen PLA 3"
-#define MSG_PREHEAT_PLA3                    "Vorwärmen PLA 4" 
-#define MSG_PREHEAT_PLA0123                 "Vorw. PLA Alle"
+#define MSG_PREHEAT_PLA_N                   "Vorwärmen PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Vorw. PLA Alle"
 #define MSG_PREHEAT_PLA_BEDONLY             "Vorw. PLA Bett"
 #define MSG_PREHEAT_PLA_SETTINGS            "Vorwärm. PLA Ein."
 #define MSG_PREHEAT_ABS                     "Vorwärmen ABS"
-#define MSG_PREHEAT_ABS0                    "Vorwärmen ABS 1"
-#define MSG_PREHEAT_ABS1                    "Vorwärmen ABS 2"
-#define MSG_PREHEAT_ABS2                    "Vorwärmen ABS 3"
-#define MSG_PREHEAT_ABS3                    "Vorwärmen ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Vorw. ABS Alle"
+#define MSG_PREHEAT_ABS_N                   "Vorwärmen ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Vorw. ABS Alle"
 #define MSG_PREHEAT_ABS_BEDONLY             "Vorw. ABS Bett"
 #define MSG_PREHEAT_ABS_SETTINGS            "Vorwärm. ABS Ein."
 #define MSG_COOLDOWN                        "Abkühlen"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Y bewegen"
 #define MSG_MOVE_Z                          "Z bewegen"
 #define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "0.1mm bewegen"
 #define MSG_MOVE_1MM                        "1mm bewegen"
 #define MSG_MOVE_10MM                       "10mm bewegen"
 #define MSG_SPEED                           "Geschw"
 #define MSG_NOZZLE                          "Düse"
-#define MSG_NOZZLE1                         "Düse2"
-#define MSG_NOZZLE2                         "Düse3"
 #define MSG_BED                             "Bett"
 #define MSG_FAN_SPEED                       "Lüftergeschw."
 #define MSG_FLOW                            "Fluss"
-#define MSG_FLOW0                           "Fluss 0"
-#define MSG_FLOW1                           "Fluss 1"
-#define MSG_FLOW2                           "Fluss 2"
 #define MSG_CONTROL                         "Einstellungen"
 #define MSG_MIN                             "\002 Min"
 #define MSG_MAX                             "\002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Acc"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -140,9 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
 
-#define MSG_STEPPER_RELEASED                "Stepper frei"
-#define MSG_RECTRACT_WIDE                   "Rectract"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_en.h b/Marlin/language_en.h
index 6261b14..55f784e 100644
--- a/Marlin/language_en.h
+++ b/Marlin/language_en.h
@@ -18,21 +18,15 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Set origin"
 #define MSG_PREHEAT_PLA                     "Preheat PLA"
-#define MSG_PREHEAT_PLA0                    "Preheat PLA 1"
-#define MSG_PREHEAT_PLA1                    "Preheat PLA 2"
-#define MSG_PREHEAT_PLA2                    "Preheat PLA 3"
-#define MSG_PREHEAT_PLA3                    "Preheat PLA 4"
-#define MSG_PREHEAT_PLA0123                 "Preheat PLA All"
-#define MSG_PREHEAT_PLA_BEDONLY             "Preheat PLA Bed"
-#define MSG_PREHEAT_PLA_SETTINGS            "Preheat PLA conf"
+#define MSG_PREHEAT_PLA_N                   MSG_PREHEAT_PLA " "
+#define MSG_PREHEAT_PLA_ALL                 MSG_PREHEAT_PLA " All"
+#define MSG_PREHEAT_PLA_BEDONLY             MSG_PREHEAT_PLA " Bed"
+#define MSG_PREHEAT_PLA_SETTINGS            MSG_PREHEAT_PLA " conf"
 #define MSG_PREHEAT_ABS                     "Preheat ABS"
-#define MSG_PREHEAT_ABS0                    "Preheat ABS 1"
-#define MSG_PREHEAT_ABS1                    "Preheat ABS 2"
-#define MSG_PREHEAT_ABS2                    "Preheat ABS 3"
-#define MSG_PREHEAT_ABS3                    "Preheat ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Preheat ABS All"
-#define MSG_PREHEAT_ABS_BEDONLY             "Preheat ABS Bed"
-#define MSG_PREHEAT_ABS_SETTINGS            "Preheat ABS conf"
+#define MSG_PREHEAT_ABS_N                   MSG_PREHEAT_ABS " "
+#define MSG_PREHEAT_ABS_ALL                 MSG_PREHEAT_ABS " All"
+#define MSG_PREHEAT_ABS_BEDONLY             MSG_PREHEAT_ABS " Bed"
+#define MSG_PREHEAT_ABS_SETTINGS            MSG_PREHEAT_ABS " conf"
 #define MSG_COOLDOWN                        "Cooldown"
 #define MSG_SWITCH_PS_ON                    "Switch power on"
 #define MSG_SWITCH_PS_OFF                   "Switch power off"
@@ -43,24 +37,14 @@
 #define MSG_MOVE_Y                          "Move Y"
 #define MSG_MOVE_Z                          "Move Z"
 #define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
-#define MSG_MOVE_E3                         "Extruder4"
 #define MSG_MOVE_01MM                       "Move 0.1mm"
 #define MSG_MOVE_1MM                        "Move 1mm"
 #define MSG_MOVE_10MM                       "Move 10mm"
 #define MSG_SPEED                           "Speed"
 #define MSG_NOZZLE                          "Nozzle"
-#define MSG_NOZZLE1                         "Nozzle2"
-#define MSG_NOZZLE2                         "Nozzle3"
-#define MSG_NOZZLE3                         "Nozzle4"
 #define MSG_BED                             "Bed"
 #define MSG_FAN_SPEED                       "Fan speed"
 #define MSG_FLOW                            "Flow"
-#define MSG_FLOW0                           "Flow 0"
-#define MSG_FLOW1                           "Flow 1"
-#define MSG_FLOW2                           "Flow 2"
-#define MSG_FLOW3                           "Flow 3"
 #define MSG_CONTROL                         "Control"
 #define MSG_MIN                             " \002 Min"
 #define MSG_MAX                             " \002 Max"
@@ -72,18 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
-#define MSG_PID_P3                          "PID-P E4"
-#define MSG_PID_I3                          "PID-I E4"
-#define MSG_PID_D3                          "PID-D E4"
-#define MSG_PID_C3                          "PID-C E4"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -148,8 +120,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
 
-#define MSG_RECTRACT                        "Rectract"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_es.h b/Marlin/language_es.h
index 65132e8..2d7b785 100644
--- a/Marlin/language_es.h
+++ b/Marlin/language_es.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Ajustar offsets"
 #define MSG_SET_ORIGIN                      "Establecer cero"
 #define MSG_PREHEAT_PLA                     "Precalentar PLA"
-#define MSG_PREHEAT_PLA0                    "Precalentar PLA 1"
-#define MSG_PREHEAT_PLA1                    "Precalentar PLA 2"
-#define MSG_PREHEAT_PLA2                    "Precalentar PLA 3"
-#define MSG_PREHEAT_PLA3                    "Precalentar PLA 4" 
-#define MSG_PREHEAT_PLA0123                 "Precal. PLA Todo"
+#define MSG_PREHEAT_PLA_N                   "Precalentar PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Precal. PLA Todo"
 #define MSG_PREHEAT_PLA_BEDONLY             "Precal. PLA Base"
 #define MSG_PREHEAT_PLA_SETTINGS            "Ajustar temp. PLA"
 #define MSG_PREHEAT_ABS                     "Precalentar ABS"
-#define MSG_PREHEAT_ABS0                    "Precalentar ABS 1"
-#define MSG_PREHEAT_ABS1                    "Precalentar ABS 2"
-#define MSG_PREHEAT_ABS2                    "Precalentar ABS 3"
-#define MSG_PREHEAT_ABS3                    "Precalentar ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Precal. ABS Todo"
+#define MSG_PREHEAT_ABS_N                   "Precalentar ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Precal. ABS Todo"
 #define MSG_PREHEAT_ABS_BEDONLY             "Precal. ABS Base"
 #define MSG_PREHEAT_ABS_SETTINGS            "Ajustar temp. ABS"
 #define MSG_COOLDOWN                        "Enfriar"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Mover Y"
 #define MSG_MOVE_Z                          "Mover Z"
 #define MSG_MOVE_E                          "Extrusor"
-#define MSG_MOVE_E1                         "Extrusor2"
-#define MSG_MOVE_E2                         "Extrusor3"
 #define MSG_MOVE_01MM                       "Mover 0.1mm"
 #define MSG_MOVE_1MM                        "Mover 1mm"
 #define MSG_MOVE_10MM                       "Mover 10mm"
 #define MSG_SPEED                           "Velocidad"
 #define MSG_NOZZLE                          "Nozzle"
-#define MSG_NOZZLE1                         "Nozzle2"
-#define MSG_NOZZLE2                         "Nozzle3"
 #define MSG_BED                             "Base"
 #define MSG_FAN_SPEED                       "Ventilador"
 #define MSG_FLOW                            "Flujo"
-#define MSG_FLOW0                           "Flujo 0"
-#define MSG_FLOW1                           "Flujo 1"
-#define MSG_FLOW2                           "Flujo 2"
 #define MSG_CONTROL                         "Control"
 #define MSG_MIN                             "\002 Min"
 #define MSG_MAX                             "\002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Acel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -140,17 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
 
-#define MSG_RECTRACT                        "Retraer"
-#define MSG_RECTRACT_WIDE                   "Retraer"
-#define MSG_TEMPERATURE_WIDE                "Temperatura"
-#define MSG_TEMPERATURE_RTN                 "Temperatura"
-#define MSG_MAIN_WIDE                       "Menu principal"
-#define MSG_MOTION_WIDE                     "Movimiento"
-#define MSG_PREPARE_ALT                     "Preparar"
-#define MSG_CONTROL_ARROW                   "Control \x7E"
-#define MSG_RETRACT_ARROW                   "Retraer \x7E"
-#define MSG_STEPPER_RELEASED                "Desacoplada."
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_eu.h b/Marlin/language_eu.h
index ddb7819..0f615d5 100644
--- a/Marlin/language_eu.h
+++ b/Marlin/language_eu.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Hasiera ipini"
 #define MSG_PREHEAT_PLA                     "Aurreberotu PLA"
-#define MSG_PREHEAT_PLA0                    "Aurreberotu PLA1"
-#define MSG_PREHEAT_PLA1                    "Aurreberotu PLA2"
-#define MSG_PREHEAT_PLA2                    "Aurreberotu PLA3"
-#define MSG_PREHEAT_PLA3                    "Aurreberotu PLA4"
-#define MSG_PREHEAT_PLA0123                 "Berotu PLA Guztia"
+#define MSG_PREHEAT_PLA_N                   "Aurreberotu PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Berotu PLA Guztia"
 #define MSG_PREHEAT_PLA_BEDONLY             "Berotu PLA Ohea"
 #define MSG_PREHEAT_PLA_SETTINGS            "Berotu PLA Konfig"
 #define MSG_PREHEAT_ABS                     "Aurreberotu ABS"
-#define MSG_PREHEAT_ABS0                    "Aurreberotu ABS 1"
-#define MSG_PREHEAT_ABS1                    "Aurreberotu ABS 2"
-#define MSG_PREHEAT_ABS2                    "Aurreberotu ABS 3"
-#define MSG_PREHEAT_ABS3                    "Aurreberotu ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Berotu ABS Guztia"
+#define MSG_PREHEAT_ABS_N                   "Aurreberotu ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Berotu ABS Guztia"
 #define MSG_PREHEAT_ABS_BEDONLY             "Berotu ABS Ohea"
 #define MSG_PREHEAT_ABS_SETTINGS            "Berotu ABS Konfig"
 #define MSG_COOLDOWN                        "Hoztu"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Mugitu Y"
 #define MSG_MOVE_Z                          "Mugitu Z"
 #define MSG_MOVE_E                          "Estrusorea"
-#define MSG_MOVE_E1                         "Estrusorea2"
-#define MSG_MOVE_E2                         "Estrusorea3"
 #define MSG_MOVE_01MM                       "Mugitu 0.1mm"
 #define MSG_MOVE_1MM                        "Mugitu 1mm"
 #define MSG_MOVE_10MM                       "Mugitu 10mm"
 #define MSG_SPEED                           "Abiadura"
 #define MSG_NOZZLE                          "Pita"
-#define MSG_NOZZLE1                         "Pita2"
-#define MSG_NOZZLE2                         "Pita3"
 #define MSG_BED                             "Ohea"
 #define MSG_FAN_SPEED                       "Haizagailua"
 #define MSG_FLOW                            "Fluxua"
-#define MSG_FLOW0                           "Fluxua 0"
-#define MSG_FLOW1                           "Fluxua 1"
-#define MSG_FLOW2                           "Fluxua 2"
 #define MSG_CONTROL                         "Kontrola"
 #define MSG_MIN                             " \002 Min"
 #define MSG_MAX                             " \002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Azelerazioa"
 #define MSG_VXY_JERK                        "Vxy-astindua"
 #define MSG_VZ_JERK                         "Vz-astindua"
@@ -140,8 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop deuseztat"
 
-#define MSG_RECTRACT                        "Atzera eragin"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_fi.h b/Marlin/language_fi.h
index bf7f747..2346600 100644
--- a/Marlin/language_fi.h
+++ b/Marlin/language_fi.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Aseta origo"
 #define MSG_PREHEAT_PLA                     "Esilammita PLA"
-#define MSG_PREHEAT_PLA0                    "Esilammita PLA 1"
-#define MSG_PREHEAT_PLA1                    "Esilammita PLA 2"
-#define MSG_PREHEAT_PLA2                    "Esilammita PLA 3"
-#define MSG_PREHEAT_PLA3                    "Esilammita PLA 4"
-#define MSG_PREHEAT_PLA0123                 "Esila. PLA Kaikki"
+#define MSG_PREHEAT_PLA_N                   "Esilammita PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Esila. PLA Kaikki"
 #define MSG_PREHEAT_PLA_BEDONLY             "Esila. PLA Alusta"
 #define MSG_PREHEAT_PLA_SETTINGS            "Esilamm. PLA konf"
 #define MSG_PREHEAT_ABS                     "Esilammita ABS"
-#define MSG_PREHEAT_ABS0                    "Esilammita ABS 1"
-#define MSG_PREHEAT_ABS1                    "Esilammita ABS 2"
-#define MSG_PREHEAT_ABS2                    "Esilammita ABS 3"
-#define MSG_PREHEAT_ABS3                    "Esilammita ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Esila. ABS Kaikki"
+#define MSG_PREHEAT_ABS_N                   "Esilammita ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Esila. ABS Kaikki"
 #define MSG_PREHEAT_ABS_BEDONLY             "Esila. ABS Alusta"
 #define MSG_PREHEAT_ABS_SETTINGS            "Esilamm. ABS konf"
 #define MSG_COOLDOWN                        "Jaahdyta"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Move Y"
 #define MSG_MOVE_Z                          "Move Z"
 #define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "Move 0.1mm"
 #define MSG_MOVE_1MM                        "Move 1mm"
 #define MSG_MOVE_10MM                       "Move 10mm"
 #define MSG_SPEED                           "Nopeus"
 #define MSG_NOZZLE                          "Suutin"
-#define MSG_NOZZLE1                         "Suutin2"
-#define MSG_NOZZLE2                         "Suutin3"
 #define MSG_BED                             "Alusta"
 #define MSG_FAN_SPEED                       "Tuul. nopeus"
 #define MSG_FLOW                            "Virtaus"
-#define MSG_FLOW0                           "Virtaus 0"
-#define MSG_FLOW1                           "Virtaus 1"
-#define MSG_FLOW2                           "Virtaus 2"
 #define MSG_CONTROL                         "Kontrolli"
 #define MSG_MIN                             " \002 Min"
 #define MSG_MAX                             " \002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Kiihtyv"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -140,8 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
 
-#define MSG_RECTRACT                        "Veda takaisin"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_fr.h b/Marlin/language_fr.h
index ddd4a77..8019f96 100644
--- a/Marlin/language_fr.h
+++ b/Marlin/language_fr.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Regler origine"
 #define MSG_PREHEAT_PLA                     "Prechauffage PLA"
-#define MSG_PREHEAT_PLA0                    "Prechauff. PLA 1"
-#define MSG_PREHEAT_PLA1                    "Prechauff. PLA 2"
-#define MSG_PREHEAT_PLA2                    "Prechauff. PLA 3"
-#define MSG_PREHEAT_PLA3                    "Prechauff. PLA 4"
-#define MSG_PREHEAT_PLA0123                 "Prech. PLA Tout"
+#define MSG_PREHEAT_PLA_N                   "Prechauff. PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Prech. PLA Tout"
 #define MSG_PREHEAT_PLA_BEDONLY             "Prech. PLA Plateau"
 #define MSG_PREHEAT_PLA_SETTINGS            "Regl. prech. PLA"
 #define MSG_PREHEAT_ABS                     "Prechauffage ABS"
-#define MSG_PREHEAT_ABS0                    "Prechauff. ABS 1"
-#define MSG_PREHEAT_ABS1                    "Prechauff. ABS 2"
-#define MSG_PREHEAT_ABS2                    "Prechauff. ABS 3"
-#define MSG_PREHEAT_ABS3                    "Prechauff. ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Prech. ABS Tout"
+#define MSG_PREHEAT_ABS_N                   "Prechauff. ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Prech. ABS Tout"
 #define MSG_PREHEAT_ABS_BEDONLY             "Prech. ABS Plateau"
 #define MSG_PREHEAT_ABS_SETTINGS            "Regl. prech. ABS"
 #define MSG_COOLDOWN                        "Refroidir"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Move Y"
 #define MSG_MOVE_Z                          "Move Z"
 #define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "Move 0.1mm"
 #define MSG_MOVE_1MM                        "Move 1mm"
 #define MSG_MOVE_10MM                       "Move 10mm"
 #define MSG_SPEED                           " Vitesse"
 #define MSG_NOZZLE                          "Buse"
-#define MSG_NOZZLE1                         "Buse2"
-#define MSG_NOZZLE2                         "Buse3"
 #define MSG_BED                             "Plateau"
 #define MSG_FAN_SPEED                       "Vite. ventilateur"
 #define MSG_FLOW                            "Flux"
-#define MSG_FLOW0                           "Flux 0"
-#define MSG_FLOW1                           "Flux 1"
-#define MSG_FLOW2                           "Flux 2"
 #define MSG_CONTROL                         "Controler"
 #define MSG_MIN                             " \002 Min"
 #define MSG_MAX                             " \002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -140,9 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Butee abandon"
 
-#define MSG_RECTRACT                        "Rectract"
-#define MSG_STEPPER_RELEASED                "RELACHE."
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_it.h b/Marlin/language_it.h
index 98e6812..b0b6442 100644
--- a/Marlin/language_it.h
+++ b/Marlin/language_it.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Setta offset home"
 #define MSG_SET_ORIGIN                      "Imposta Origine"
 #define MSG_PREHEAT_PLA                     "Preriscalda PLA"
-#define MSG_PREHEAT_PLA0                    "Preriscalda PLA 1"
-#define MSG_PREHEAT_PLA1                    "Preriscalda PLA 2"
-#define MSG_PREHEAT_PLA2                    "Preriscalda PLA 3"
-#define MSG_PREHEAT_PLA3                    "Preriscalda PLA 4"
-#define MSG_PREHEAT_PLA0123                 "Prer. PLA Tutto"
+#define MSG_PREHEAT_PLA_N                   "Preriscalda PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Prer. PLA Tutto"
 #define MSG_PREHEAT_PLA_BEDONLY             "Prer. PLA Piatto"
 #define MSG_PREHEAT_PLA_SETTINGS            "Config. prer. PLA"
 #define MSG_PREHEAT_ABS                     "Preriscalda ABS"
-#define MSG_PREHEAT_ABS0                    "Preriscalda ABS 1"
-#define MSG_PREHEAT_ABS1                    "Preriscalda ABS 2"
-#define MSG_PREHEAT_ABS2                    "Preriscalda ABS 3"
-#define MSG_PREHEAT_ABS3                    "Preriscalda ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Prer. ABS Tutto"
+#define MSG_PREHEAT_ABS_N                   "Preriscalda ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Prer. ABS Tutto"
 #define MSG_PREHEAT_ABS_BEDONLY             "Prer. ABS Piatto"
 #define MSG_PREHEAT_ABS_SETTINGS            "Config. prer. ABS"
 #define MSG_COOLDOWN                        "Raffredda"
@@ -43,28 +37,18 @@
 #define MSG_MOVE_Y                          "Muovi Y"
 #define MSG_MOVE_Z                          "Muovi Z"
 #define MSG_MOVE_E                          "Estrusore"
-#define MSG_MOVE_E1                         "Estrusore 2"
-#define MSG_MOVE_E2                         "Estrusore 3"
-#define MSG_MOVE_E3                         "Estrusore 4"
 #define MSG_MOVE_01MM                       "Muovi di 0.1mm"
 #define MSG_MOVE_1MM                        "Muovi di   1mm"
 #define MSG_MOVE_10MM                       "Muovi di  10mm"
 #define MSG_SPEED                           "Velcità"
 #define MSG_NOZZLE                          "Ugello"
-#define MSG_NOZZLE1                         "Ugello2"
-#define MSG_NOZZLE2                         "Ugello3"
-#define MSG_NOZZLE3                         "Ugello4"
 #define MSG_BED                             "Piatto"
 #define MSG_FAN_SPEED                       "Ventola"
 #define MSG_FLOW                            "Flusso"
-#define MSG_FLOW0                           "Flusso 0"
-#define MSG_FLOW1                           "Flusso 1"
-#define MSG_FLOW2                           "Flusso 2"
-#define MSG_FLOW3                           "Flusso 3"
 #define MSG_CONTROL                         "Controllo"
-#define MSG_MIN                             " \002 Min:"
-#define MSG_MAX                             " \002 Max:"
-#define MSG_FACTOR                          " \002 Fact:"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Fact"
 #define MSG_AUTOTEMP                        "Autotemp"
 #define MSG_ON                              "ON "
 #define MSG_OFF                             "OFF"
@@ -72,18 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
-#define MSG_PID_P3                          "PID-P E4"
-#define MSG_PID_I3                          "PID-I E4"
-#define MSG_PID_D3                          "PID-D E4"
-#define MSG_PID_C3                          "PID-C E4"
 #define MSG_ACC                             "Accel."
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -148,8 +120,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Finecorsa abort"
 
-#define MSG_RECTRACT                        "Ritrai"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Calibraz. Delta"
     #define MSG_DELTA_CALIBRATE_X           "Calibra X"
diff --git a/Marlin/language_nl.h b/Marlin/language_nl.h
index 105f3fc..7de2f9a 100644
--- a/Marlin/language_nl.h
+++ b/Marlin/language_nl.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Nulpunt instellen"
 #define MSG_PREHEAT_PLA                     "PLA voorverwarmen"
-#define MSG_PREHEAT_PLA0                    "PLA voorverw. 1"
-#define MSG_PREHEAT_PLA1                    "PLA voorverw. 2"
-#define MSG_PREHEAT_PLA2                    "PLA voorverw. 3"
-#define MSG_PREHEAT_PLA3                    "PLA voorverw. 4"
-#define MSG_PREHEAT_PLA0123                 "PLA voorverw. aan"
+#define MSG_PREHEAT_PLA_N                   "PLA voorverw. "
+#define MSG_PREHEAT_PLA_ALL                 "PLA voorverw. aan"
 #define MSG_PREHEAT_PLA_BEDONLY             "PLA voorverw. Bed"
 #define MSG_PREHEAT_PLA_SETTINGS            "PLA verw. conf"
 #define MSG_PREHEAT_ABS                     "ABS voorverwarmen"
-#define MSG_PREHEAT_ABS0                    "ABS voorverw. 1"
-#define MSG_PREHEAT_ABS1                    "ABS voorverw. 2"
-#define MSG_PREHEAT_ABS2                    "ABS voorverw. 3"
-#define MSG_PREHEAT_ABS3                    "ABS voorverw. 4"
-#define MSG_PREHEAT_ABS0123                 "ABS voorverw. aan"
+#define MSG_PREHEAT_ABS_N                   "ABS voorverw. "
+#define MSG_PREHEAT_ABS_ALL                 "ABS voorverw. aan"
 #define MSG_PREHEAT_ABS_BEDONLY             "ABS voorverw. Bed"
 #define MSG_PREHEAT_ABS_SETTINGS            "ABS verw. conf"
 #define MSG_COOLDOWN                        "Afkoelen"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Verplaats Y"
 #define MSG_MOVE_Z                          "Verplaats Z"
 #define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "Verplaats 0.1mm"
 #define MSG_MOVE_1MM                        "Verplaats 1mm"
 #define MSG_MOVE_10MM                       "Verplaats 10mm"
 #define MSG_SPEED                           "Snelheid"
 #define MSG_NOZZLE                          "Nozzle"
-#define MSG_NOZZLE1                         "Nozzle2"
-#define MSG_NOZZLE2                         "Nozzle3"
 #define MSG_BED                             "Bed"
 #define MSG_FAN_SPEED                       "Fan snelheid"
 #define MSG_FLOW                            "Flow"
-#define MSG_FLOW0                           "Flow 0"
-#define MSG_FLOW1                           "Flow 1"
-#define MSG_FLOW2                           "Flow 2"
 #define MSG_CONTROL                         "Control"
 #define MSG_MIN                             " \002 Min"
 #define MSG_MAX                             " \002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Versn"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
@@ -140,8 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystap Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop afbr."
 
-#define MSG_RECTRACT                        "Terugtrekken"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_pl.h b/Marlin/language_pl.h
index 7c3c8ee..93ccf40 100644
--- a/Marlin/language_pl.h
+++ b/Marlin/language_pl.h
@@ -18,19 +18,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Ustaw punkt zero"
 #define MSG_PREHEAT_PLA                     "Rozgrzej PLA"
-#define MSG_PREHEAT_PLA0                    "Rozgrzej PLA 1"
-#define MSG_PREHEAT_PLA1                    "Rozgrzej PLA 2"
-#define MSG_PREHEAT_PLA2                    "Rozgrzej PLA 3"
-#define MSG_PREHEAT_PLA3                    "Rozgrzej PLA 4"
-#define MSG_PREHEAT_PLA0123                 "Roz. PLA Wszystko"
+#define MSG_PREHEAT_PLA_N                   "Rozgrzej PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Roz. PLA Wszystko"
 #define MSG_PREHEAT_PLA_BEDONLY             "Rozgrzej PLA Loze"
 #define MSG_PREHEAT_PLA_SETTINGS            "Ustaw. rozg. PLA"
 #define MSG_PREHEAT_ABS                     "Rozgrzej ABS"
-#define MSG_PREHEAT_ABS0                    "Rozgrzej ABS 1"
-#define MSG_PREHEAT_ABS1                    "Rozgrzej ABS 2"
-#define MSG_PREHEAT_ABS2                    "Rozgrzej ABS 3"
-#define MSG_PREHEAT_ABS3                    "Rozgrzej ABS 4"
-#define MSG_PREHEAT_ABS0123                 "Roz. ABS Wszystko"
+#define MSG_PREHEAT_ABS_N                   "Rozgrzej ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Roz. ABS Wszystko"
 #define MSG_PREHEAT_ABS_BEDONLY             "Rozgrzej ABS Loze"
 #define MSG_PREHEAT_ABS_SETTINGS            "Ustaw. rozg. ABS"
 #define MSG_COOLDOWN                        "Chlodzenie"
@@ -43,21 +37,14 @@
 #define MSG_MOVE_Y                          "Przesun w Y"
 #define MSG_MOVE_Z                          "Przesun w Z"
 #define MSG_MOVE_E                          "Ekstruzja (os E)"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "Przesuwaj co .1mm"
 #define MSG_MOVE_1MM                        "Przesuwaj co 1mm"
 #define MSG_MOVE_10MM                       "Przesuwaj co 10mm"
 #define MSG_SPEED                           "Predkosc"
 #define MSG_NOZZLE                          "Dysza"
-#define MSG_NOZZLE1                         "Dysza 2"
-#define MSG_NOZZLE2                         "Dysza 3"
 #define MSG_BED                             "Loze"
 #define MSG_FAN_SPEED                       "Obroty wiatraka"
 #define MSG_FLOW                            "Przeplyw"
-#define MSG_FLOW0                           "Przeplyw 0"
-#define MSG_FLOW1                           "Przeplyw 1"
-#define MSG_FLOW2                           "Przeplyw 2"
 #define MSG_CONTROL                         "Ustawienia"
 #define MSG_MIN                             " \002 Min"
 #define MSG_MAX                             " \002 Max"
@@ -69,14 +56,6 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
-#define MSG_PID_P1                          "PID-P E2"
-#define MSG_PID_I1                          "PID-I E2"
-#define MSG_PID_D1                          "PID-D E2"
-#define MSG_PID_C1                          "PID-C E2"
-#define MSG_PID_P2                          "PID-P E3"
-#define MSG_PID_I2                          "PID-I E3"
-#define MSG_PID_D2                          "PID-D E3"
-#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Przyspieszenie"
 #define MSG_VXY_JERK                        "Zryw Vxy"
 #define MSG_VZ_JERK                         "Zryw Vz"
@@ -124,7 +103,7 @@
 #define MSG_CONTROL_RETRACT                 "Wycofaj mm"
 #define MSG_CONTROL_RETRACT_SWAP            "Z Wycof. mm"
 #define MSG_CONTROL_RETRACTF                "Wycofaj  V"
-#define MSG_CONTROL_RETRACT_ZLIFT           "Skok Z mm:"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Skok Z mm"
 #define MSG_CONTROL_RETRACT_RECOVER         "Cof. wycof. +mm"
 #define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Z Cof. wyc. +mm"
 #define MSG_CONTROL_RETRACT_RECOVERF        "Cof. wycof.  V"
@@ -140,9 +119,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Blad wyl. kranc."
 
-#define MSG_RECTRACT                        "Wycofanie"
-#define MSG_STEPPER_RELEASED                "Zwolniony."
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/language_pt-br.h b/Marlin/language_pt-br.h
new file mode 100644
index 0000000..924b6e4
--- /dev/null
+++ b/Marlin/language_pt-br.h
@@ -0,0 +1,130 @@
+/**
+ * Portuguese (Brazil)
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_PT_BR_H
+#define LANGUAGE_PT_BR_H
+
+#define WELCOME_MSG							MACHINE_NAME " pronto."
+#define MSG_SD_INSERTED                     "Cartao inserido"
+#define MSG_SD_REMOVED                      "Cartao removido"
+#define MSG_MAIN                            " Menu principal \003"
+#define MSG_AUTOSTART                       "Autostart"
+#define MSG_DISABLE_STEPPERS                " Apagar motores"
+#define MSG_AUTO_HOME                       "Ir para origen"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Estabelecer orig."
+#define MSG_PREHEAT_PLA                     "Pre-aquecer PLA"
+#define MSG_PREHEAT_PLA_N                   "Pre-aquecer PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Pre-aq. PLA Tudo"
+#define MSG_PREHEAT_PLA_BEDONLY             "Pre-aq. PLA \002Base"
+#define MSG_PREHEAT_PLA_SETTINGS            "PLA setting"
+#define MSG_PREHEAT_ABS                     "Pre-aquecer ABS"
+#define MSG_PREHEAT_ABS_N                   "Pre-aquecer ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Pre-aq. ABS Tudo"
+#define MSG_PREHEAT_ABS_BEDONLY             "Pre-aq. ABS \002Base"
+#define MSG_PREHEAT_ABS_SETTINGS            "ABS setting"
+#define MSG_COOLDOWN                        "Esfriar"
+#define MSG_SWITCH_PS_ON                    "Switch Power On"
+#define MSG_SWITCH_PS_OFF                   "Switch Power Off"
+#define MSG_EXTRUDE                         "Extrudar"
+#define MSG_RETRACT                         "Retrair"
+#define MSG_MOVE_AXIS                       "Mover eixo      \x7E"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           "Velocidade"
+#define MSG_NOZZLE                          "\002Nozzle"
+#define MSG_BED                             "\002Base"
+#define MSG_FAN_SPEED                       "Velocidade vento."
+#define MSG_FLOW                            "Fluxo"
+#define MSG_CONTROL                         "Controle \003"
+#define MSG_MIN                             "\002 Min"
+#define MSG_MAX                             "\002 Max"
+#define MSG_FACTOR                          "\002 Fact"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "On "
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Acc"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            " Vmax "
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "Xpasso/mm"
+#define MSG_YSTEPS                          "Ypasso/mm"
+#define MSG_ZSTEPS                          "Zpasso/mm"
+#define MSG_ESTEPS                          "Epasso/mm"
+#define MSG_TEMPERATURE                     "Temperatura"
+#define MSG_MOTION                          "Movimento"
+#define MSG_VOLUMETRIC                      "Filament"
+#define MSG_VOLUMETRIC_ENABLED		        "E in mm3"
+#define MSG_FILAMENT_SIZE_EXTRUDER_0        "Fil. Dia. 1"
+#define MSG_FILAMENT_SIZE_EXTRUDER_1        "Fil. Dia. 2"
+#define MSG_FILAMENT_SIZE_EXTRUDER_2        "Fil. Dia. 3"
+#define MSG_CONTRAST                        "Contrast"
+#define MSG_STORE_EPROM                     "Guardar memoria"
+#define MSG_LOAD_EPROM                      "Carregar memoria"
+#define MSG_RESTORE_FAILSAFE                "Rest. de emergen."
+#define MSG_REFRESH                         "\004Recarregar"
+#define MSG_WATCH                           "Monitorar   \003"
+#define MSG_PREPARE                         "Preparar \x7E"
+#define MSG_TUNE                            "Tune    \x7E"
+#define MSG_PAUSE_PRINT                     "Pausar impressao"
+#define MSG_RESUME_PRINT                    "Resumir impressao"
+#define MSG_STOP_PRINT                      "Parar impressao"
+#define MSG_CARD_MENU                       "Menu cartao SD"
+#define MSG_NO_CARD                         "Sem cartao SD"
+#define MSG_DWELL                           "Repouso..."
+#define MSG_USERWAIT                        "Esperando ordem"
+#define MSG_RESUMING                        "Resuming print"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Sem movimento"
+#define MSG_KILLED                          "PARADA DE EMERG."
+#define MSG_STOPPED                         "PARADA. "
+#define MSG_CONTROL_RETRACT                 " Retrair mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Troca Retrair mm"
+#define MSG_CONTROL_RETRACTF                " Retrair  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           " Levantar mm"
+#define MSG_CONTROL_RETRACT_RECOVER         " DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Troca DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        " DesRet  V"
+#define MSG_AUTORETRACT                     " AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Change filament"
+#define MSG_INIT_SDCARD                     "Init. SD-Card"
+#define MSG_CNG_SDCARD                      "Change SD-Card"
+#define MSG_ZPROBE_OUT                      "Son. fora da mesa"
+#define MSG_POSITION_UNKNOWN                "XY antes de Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#ifdef DELTA_CALIBRATION_MENU
+    #define MSG_DELTA_CALIBRATE             "Delta Calibration"
+    #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
+    #define MSG_DELTA_CALIBRATE_Y           "Calibrate Y"
+    #define MSG_DELTA_CALIBRATE_Z           "Calibrate Z"
+    #define MSG_DELTA_CALIBRATE_CENTER      "Calibrate Center"
+#endif // DELTA_CALIBRATION_MENU
+
+#endif // LANGUAGE_PT_BR_H
diff --git a/Marlin/language_pt.h b/Marlin/language_pt.h
index 624b404..90c4b5c 100644
--- a/Marlin/language_pt.h
+++ b/Marlin/language_pt.h
@@ -8,151 +8,123 @@
 #ifndef LANGUAGE_PT_H
 #define LANGUAGE_PT_H
 
-#define WELCOME_MSG							MACHINE_NAME " pronto."
+#define WELCOME_MSG                         MACHINE_NAME " pronto."
 #define MSG_SD_INSERTED                     "Cartao inserido"
 #define MSG_SD_REMOVED                      "Cartao removido"
 #define MSG_MAIN                            " Menu principal \003"
 #define MSG_AUTOSTART                       "Autostart"
-#define MSG_DISABLE_STEPPERS                " Apagar motores"
-#define MSG_AUTO_HOME                       "Ir para origen"
-#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_DISABLE_STEPPERS                " Desligar motores"
+#define MSG_AUTO_HOME                       "Ir para home"
+#define MSG_SET_HOME_OFFSETS                "Def. home offsets"
 #define MSG_SET_ORIGIN                      "Estabelecer orig."
 #define MSG_PREHEAT_PLA                     "Pre-aquecer PLA"
-#define MSG_PREHEAT_PLA0                    " pre-aquecer PLA 1"
-#define MSG_PREHEAT_PLA1                    " pre-aquecer PLA 2"
-#define MSG_PREHEAT_PLA2                    " pre-aquecer PLA 3"
-#define MSG_PREHEAT_PLA3                    " pre-aquecer PLA 4"
-#define MSG_PREHEAT_PLA0123                 " pre-aq. PLA Tudo"
-#define MSG_PREHEAT_PLA_BEDONLY             " pre-aq. PLA \002Base"
-#define MSG_PREHEAT_PLA_SETTINGS            "PLA setting"
+#define MSG_PREHEAT_PLA_N                   "Pre-aquecer PLA "
+#define MSG_PREHEAT_PLA_ALL                 "Pre-aq. PLA Tudo"
+#define MSG_PREHEAT_PLA_BEDONLY             "Pre-aq. PLA \002Base"
+#define MSG_PREHEAT_PLA_SETTINGS            "PLA definicoes"
 #define MSG_PREHEAT_ABS                     "Pre-aquecer ABS"
-#define MSG_PREHEAT_ABS0                    " pre-aquecer ABS 1"
-#define MSG_PREHEAT_ABS1                    " pre-aquecer ABS 2"
-#define MSG_PREHEAT_ABS2                    " pre-aquecer ABS 3"
-#define MSG_PREHEAT_ABS3                    " pre-aquecer ABS 4"
-#define MSG_PREHEAT_ABS0123                 " pre-aq. ABS Tudo"
-#define MSG_PREHEAT_ABS_BEDONLY             " pre-aq. ABS \002Base"
-#define MSG_PREHEAT_ABS_SETTINGS            "ABS setting"
-#define MSG_COOLDOWN                        "Esfriar"
-#define MSG_SWITCH_PS_ON                    "Switch Power On"
-#define MSG_SWITCH_PS_OFF                   "Switch Power Off"
-#define MSG_EXTRUDE                         "Extrudar"
+#define MSG_PREHEAT_ABS_N                   "Pre-aquecer ABS "
+#define MSG_PREHEAT_ABS_ALL                 "Pre-aq. ABS Tudo"
+#define MSG_PREHEAT_ABS_BEDONLY             "Pre-aq. ABS \002Base"
+#define MSG_PREHEAT_ABS_SETTINGS            "ABS definicoes"
+#define MSG_COOLDOWN                        "Arrefecer"
+#define MSG_SWITCH_PS_ON                    "Ligar"
+#define MSG_SWITCH_PS_OFF                   "Desligar"
+#define MSG_EXTRUDE                         "Extrudir"
 #define MSG_RETRACT                         "Retrair"
 #define MSG_MOVE_AXIS                       "Mover eixo      \x7E"
-#define MSG_MOVE_X                          "Move X"
-#define MSG_MOVE_Y                          "Move Y"
-#define MSG_MOVE_Z                          "Move Z"
-#define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
-#define MSG_MOVE_01MM                       "Move 0.1mm"
-#define MSG_MOVE_1MM                        "Move 1mm"
-#define MSG_MOVE_10MM                       "Move 10mm"
-#define MSG_SPEED                           "Velocidade:"
-#define MSG_NOZZLE                          "\002Nozzle:"
-#define MSG_NOZZLE1                         "\002Nozzle2:"
-#define MSG_NOZZLE2                         "\002Nozzle3:"
-#define MSG_BED                             "\002Base:"
-#define MSG_FAN_SPEED                       "Velocidade vento."
-#define MSG_FLOW                            "Fluxo:"
-#define MSG_FLOW0                           "Fluxo0:"
-#define MSG_FLOW1                           "Fluxo1:"
-#define MSG_FLOW2                           "Fluxo2:"
-#define MSG_CONTROL                         "Controle \003"
-#define MSG_MIN                             "\002 Min:"
-#define MSG_MAX                             "\002 Max:"
-#define MSG_FACTOR                          "\002 Fact:"
-#define MSG_AUTOTEMP                        "Autotemp:"
+#define MSG_MOVE_X                          "Mover X"
+#define MSG_MOVE_Y                          "Mover Y"
+#define MSG_MOVE_Z                          "Mover Z"
+#define MSG_MOVE_E                          "Extrusor"
+#define MSG_MOVE_01MM                       "Mover 0.1mm"
+#define MSG_MOVE_1MM                        "Mover 1mm"
+#define MSG_MOVE_10MM                       "Mover 10mm"
+#define MSG_SPEED                           "Velocidade"
+#define MSG_NOZZLE                          "\002Bico"
+#define MSG_BED                             "\002Base"
+#define MSG_FAN_SPEED                       "Velocidade do ar."
+#define MSG_FLOW                            "Fluxo"
+#define MSG_CONTROL                         "Controlo \003"
+#define MSG_MIN                             "\002 Min"
+#define MSG_MAX                             "\002 Max"
+#define MSG_FACTOR                          "\002 Fact"
+#define MSG_AUTOTEMP                        "Autotemp"
 #define MSG_ON                              "On "
 #define MSG_OFF                             "Off"
-#define MSG_PID_P                           "PID-P: "
-#define MSG_PID_I                           "PID-I: "
-#define MSG_PID_D                           "PID-D: "
-#define MSG_PID_C                           "PID-C: "
-#define MSG_PID_P1                          "PID-P E2: "
-#define MSG_PID_I1                          "PID-I E2: "
-#define MSG_PID_D1                          "PID-D E2: "
-#define MSG_PID_C1                          "PID-C E2: "
-#define MSG_PID_P2                          "PID-P E3: "
-#define MSG_PID_I2                          "PID-I E3: "
-#define MSG_PID_D2                          "PID-D E3: "
-#define MSG_PID_C2                          "PID-C E3: "
-#define MSG_ACC                             "Acc:"
-#define MSG_VXY_JERK                        "Vxy-jerk: "
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Acc"
+#define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
 #define MSG_VE_JERK                         "Ve-jerk"
 #define MSG_VMAX                            " Vmax "
-#define MSG_X                               "x:"
-#define MSG_Y                               "y:"
-#define MSG_Z                               "z:"
-#define MSG_E                               "e:"
-#define MSG_VMIN                            "Vmin:"
-#define MSG_VTRAV_MIN                       "VTrav min:"
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
 #define MSG_AMAX                            "Amax "
-#define MSG_A_RETRACT                       "A-retract:"
-#define MSG_XSTEPS                          "Xpasso/mm:"
-#define MSG_YSTEPS                          "Ypasso/mm:"
-#define MSG_ZSTEPS                          "Zpasso/mm:"
-#define MSG_ESTEPS                          "Epasso/mm:"
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "Xpasso/mm"
+#define MSG_YSTEPS                          "Ypasso/mm"
+#define MSG_ZSTEPS                          "Zpasso/mm"
+#define MSG_ESTEPS                          "Epasso/mm"
 #define MSG_TEMPERATURE                     "Temperatura"
 #define MSG_MOTION                          "Movimento"
-#define MSG_VOLUMETRIC                      "Filament"
+#define MSG_VOLUMETRIC                      "Filamento"
 #define MSG_VOLUMETRIC_ENABLED		        "E in mm3"
-#define MSG_FILAMENT_SIZE_EXTRUDER_0        "Fil. Dia. 1"
-#define MSG_FILAMENT_SIZE_EXTRUDER_1        "Fil. Dia. 2"
-#define MSG_FILAMENT_SIZE_EXTRUDER_2        "Fil. Dia. 3"
-#define MSG_CONTRAST                        "Contrast"
-#define MSG_STORE_EPROM                     "Guardar memoria"
-#define MSG_LOAD_EPROM                      "Carregar memoria"
+#define MSG_FILAMENT_SIZE_EXTRUDER_0        "Fil. Diam. 1"
+#define MSG_FILAMENT_SIZE_EXTRUDER_1        "Fil. Diam. 2"
+#define MSG_FILAMENT_SIZE_EXTRUDER_2        "Fil. Diam. 3"
+#define MSG_CONTRAST                        "Contraste"
+#define MSG_STORE_EPROM                     "Guardar na memoria"
+#define MSG_LOAD_EPROM                      "Carregar da memoria"
 #define MSG_RESTORE_FAILSAFE                "Rest. de emergen."
 #define MSG_REFRESH                         "\004Recarregar"
 #define MSG_WATCH                           "Monitorar   \003"
 #define MSG_PREPARE                         "Preparar \x7E"
-#define MSG_TUNE                            "Tune    \x7E"
+#define MSG_TUNE                            "Afinar    \x7E"
 #define MSG_PAUSE_PRINT                     "Pausar impressao"
 #define MSG_RESUME_PRINT                    "Resumir impressao"
 #define MSG_STOP_PRINT                      "Parar impressao"
 #define MSG_CARD_MENU                       "Menu cartao SD"
 #define MSG_NO_CARD                         "Sem cartao SD"
 #define MSG_DWELL                           "Repouso..."
-#define MSG_USERWAIT                        "Esperando ordem"
-#define MSG_RESUMING                        "Resuming print"
-#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_USERWAIT                        "A espera de ordem"
+#define MSG_RESUMING                        "Resumir impressao"
+#define MSG_PRINT_ABORTED                   "Impr. Cancelada"
 #define MSG_NO_MOVE                         "Sem movimento"
-#define MSG_KILLED                          "PARADA DE EMERG."
-#define MSG_STOPPED                         "PARADA. "
-#define MSG_CONTROL_RETRACT                 " Retrair mm:"
-#define MSG_CONTROL_RETRACT_SWAP            "Troca Retrair mm:"
-#define MSG_CONTROL_RETRACTF                " Retrair  V:"
-#define MSG_CONTROL_RETRACT_ZLIFT           " Levantar mm:"
-#define MSG_CONTROL_RETRACT_RECOVER         " DesRet +mm:"
-#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Troca DesRet +mm:"
-#define MSG_CONTROL_RETRACT_RECOVERF        " DesRet  V:"
-#define MSG_AUTORETRACT                     " AutoRetr.:"
-#define MSG_FILAMENTCHANGE                  "Change filament"
-#define MSG_INIT_SDCARD                     "Init. SD-Card"
-#define MSG_CNG_SDCARD                      "Change SD-Card"
-#define MSG_ZPROBE_OUT                      "Son. fora da mesa"
+#define MSG_KILLED                          "INTRRP. DE EMERG."
+#define MSG_STOPPED                         "PARADO. "
+#define MSG_CONTROL_RETRACT                 " Retrair mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Troca Retrair mm"
+#define MSG_CONTROL_RETRACTF                " Retrair  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           " Levantar mm"
+#define MSG_CONTROL_RETRACT_RECOVER         " DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Troca DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        " DesRet  V"
+#define MSG_AUTORETRACT                     " AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Trocar filamento"
+#define MSG_INIT_SDCARD                     "Inic. SD-Card"
+#define MSG_CNG_SDCARD                      "Trocar SD-Card"
+#define MSG_ZPROBE_OUT                      "Sens. fora da Base"
 #define MSG_POSITION_UNKNOWN                "XY antes de Z"
 #define MSG_ZPROBE_ZOFFSET                  "Z Offset"
 #define MSG_BABYSTEP_X                      "Babystep X"
 #define MSG_BABYSTEP_Y                      "Babystep Y"
 #define MSG_BABYSTEP_Z                      "Babystep Z"
-#define MSG_ENDSTOP_ABORT                   "Endstop abort"
-
-#define MSG_RECTRACT                        "Retrair"
-#define MSG_MAIN_WIDE                       "Menu Principal  \003"
-#define MSG_PREPARE_ALT                     "Preparar \003"
-#define MSG_CONTROL_ARROW                   "Controle \x7E"
-#define MSG_RETRACT_ARROW                   "Retrair \x7E"
-#define MSG_STEPPER_RELEASED                "Lancado."
+#define MSG_ENDSTOP_ABORT                   "Endstop abort."
 
 #ifdef DELTA_CALIBRATION_MENU
-    #define MSG_DELTA_CALIBRATE             "Delta Calibration"
-    #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
-    #define MSG_DELTA_CALIBRATE_Y           "Calibrate Y"
-    #define MSG_DELTA_CALIBRATE_Z           "Calibrate Z"
-    #define MSG_DELTA_CALIBRATE_CENTER      "Calibrate Center"
+    #define MSG_DELTA_CALIBRATE             "Delta Calibracao"
+    #define MSG_DELTA_CALIBRATE_X           "Calibrar X"
+    #define MSG_DELTA_CALIBRATE_Y           "Calibrar Y"
+    #define MSG_DELTA_CALIBRATE_Z           "Calibrar Z"
+    #define MSG_DELTA_CALIBRATE_CENTER      "Calibrar Centro"
 #endif // DELTA_CALIBRATION_MENU
 
 #endif // LANGUAGE_PT_H
diff --git a/Marlin/language_ru.h b/Marlin/language_ru.h
index 0e98221..010380b 100644
--- a/Marlin/language_ru.h
+++ b/Marlin/language_ru.h
@@ -20,19 +20,13 @@
 #define MSG_SET_HOME_OFFSETS                "Set home offsets"
 #define MSG_SET_ORIGIN                      "Запомнить ноль"
 #define MSG_PREHEAT_PLA                     "Преднагрев PLA"
-#define MSG_PREHEAT_PLA0                    "Преднагрев PLA1"
-#define MSG_PREHEAT_PLA1                    "Преднагрев PLA2"
-#define MSG_PREHEAT_PLA2                    "Преднагрев PLA3"
-#define MSG_PREHEAT_PLA3                    "Преднагрев PLA4"
-#define MSG_PREHEAT_PLA0123                 "Преднаг. PLA все"
+#define MSG_PREHEAT_PLA_N                   "Преднагрев PLA"
+#define MSG_PREHEAT_PLA_ALL                 "Преднаг. PLA все"
 #define MSG_PREHEAT_PLA_BEDONLY             "Пред. PLA Кровать"
 #define MSG_PREHEAT_PLA_SETTINGS            "Настройки PLA"
 #define MSG_PREHEAT_ABS                     "Преднагрев ABS"
-#define MSG_PREHEAT_ABS0                    "Преднагрев ABS1"
-#define MSG_PREHEAT_ABS1                    "Преднагрев ABS2"
-#define MSG_PREHEAT_ABS2                    "Преднагрев ABS3"
-#define MSG_PREHEAT_ABS3                    "Преднагрев ABS4"
-#define MSG_PREHEAT_ABS0123                 "Преднаг. ABS все "
+#define MSG_PREHEAT_ABS_N                   "Преднагрев ABS"
+#define MSG_PREHEAT_ABS_ALL                 "Преднаг. ABS все "
 #define MSG_PREHEAT_ABS_BEDONLY             "Пред. ABS Кровать"
 #define MSG_PREHEAT_ABS_SETTINGS            "Настройки ABS"
 #define MSG_COOLDOWN                        "Охлаждение"
@@ -45,57 +39,42 @@
 #define MSG_MOVE_Y                          "Move Y"
 #define MSG_MOVE_Z                          "Move Z"
 #define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_E1                         "Extruder2"
-#define MSG_MOVE_E2                         "Extruder3"
 #define MSG_MOVE_01MM                       "Move 0.1mm"
 #define MSG_MOVE_1MM                        "Move 1mm"
 #define MSG_MOVE_10MM                       "Move 10mm"
-#define MSG_SPEED                           "Скорость:"
-#define MSG_NOZZLE                          "\002 Фильера:"
-#define MSG_NOZZLE1                         "\002 Фильера2:"
-#define MSG_NOZZLE2                         "\002 Фильера3:"
-#define MSG_BED                             "\002 Кровать:"
-#define MSG_FAN_SPEED                       "Куллер:"
-#define MSG_FLOW                            "Поток:"
-#define MSG_FLOW0                           " Поток0:"
-#define MSG_FLOW1                           " Поток1:"
-#define MSG_FLOW2                           " Поток2:"
+#define MSG_SPEED                           "Скорость"
+#define MSG_NOZZLE                          "\002 Фильера"
+#define MSG_BED                             "\002 Кровать"
+#define MSG_FAN_SPEED                       "Куллер"
+#define MSG_FLOW                            "Поток"
 #define MSG_CONTROL                         "Настройки \003"
-#define MSG_MIN                             "\002 Минимум:"
-#define MSG_MAX                             "\002 Максимум:"
-#define MSG_FACTOR                          "\002 Фактор:"
-#define MSG_AUTOTEMP                        "Autotemp:"
+#define MSG_MIN                             "\002 Минимум"
+#define MSG_MAX                             "\002 Максимум"
+#define MSG_FACTOR                          "\002 Фактор"
+#define MSG_AUTOTEMP                        "Autotemp"
 #define MSG_ON                              "Вкл. "
 #define MSG_OFF                             "Выкл. "
-#define MSG_PID_P                           "PID-P: "
-#define MSG_PID_I                           "PID-I: "
-#define MSG_PID_D                           "PID-D: "
-#define MSG_PID_C                           "PID-C: "
-#define MSG_PID_P1                          "PID-P E2: "
-#define MSG_PID_I1                          "PID-I E2: "
-#define MSG_PID_D1                          "PID-D E2: "
-#define MSG_PID_C1                          "PID-C E2: "
-#define MSG_PID_P2                          "PID-P E3: "
-#define MSG_PID_I2                          "PID-I E3: "
-#define MSG_PID_D2                          "PID-D E3: "
-#define MSG_PID_C2                          "PID-C E3: "
-#define MSG_ACC                             "Acc:"
-#define MSG_VXY_JERK                        "Vxy-jerk: "
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Acc"
+#define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
 #define MSG_VE_JERK                         "Ve-jerk"
 #define MSG_VMAX                            "Vmax "
-#define MSG_X                               "x:"
-#define MSG_Y                               "y:"
-#define MSG_Z                               "z:"
-#define MSG_E                               "e:"
-#define MSG_VMIN                            "Vmin:"
-#define MSG_VTRAV_MIN                       "VTrav min:"
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
 #define MSG_AMAX                            "Amax "
-#define MSG_A_RETRACT                       "A-retract:"
-#define MSG_XSTEPS                          "X шаг/mm:"
-#define MSG_YSTEPS                          "Y шаг/mm:"
-#define MSG_ZSTEPS                          "Z шаг/mm:"
-#define MSG_ESTEPS                          "E шаг/mm:"
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "X шаг/mm"
+#define MSG_YSTEPS                          "Y шаг/mm"
+#define MSG_ZSTEPS                          "Z шаг/mm"
+#define MSG_ESTEPS                          "E шаг/mm"
 #define MSG_TEMPERATURE                     "Температура     \x7E"
 #define MSG_MOTION                          "Скорости        \x7E"
 #define MSG_VOLUMETRIC                      "Filament"
@@ -123,14 +102,14 @@
 #define MSG_NO_MOVE                         "Нет движения."
 #define MSG_KILLED                          "УБИТО."
 #define MSG_STOPPED                         "ОСТАНОВЛЕНО."
-#define MSG_CONTROL_RETRACT                 "Откат mm:"
-#define MSG_CONTROL_RETRACT_SWAP            "своп Откат mm:"
-#define MSG_CONTROL_RETRACTF                "Откат  V:"
-#define MSG_CONTROL_RETRACT_ZLIFT           "Прыжок mm:"
-#define MSG_CONTROL_RETRACT_RECOVER         "Возврат +mm:"
-#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "своп Возврат +mm:"
-#define MSG_CONTROL_RETRACT_RECOVERF        "Возврат  V:"
-#define MSG_AUTORETRACT                     "АвтоОткат:"
+#define MSG_CONTROL_RETRACT                 "Откат mm"
+#define MSG_CONTROL_RETRACT_SWAP            "своп Откат mm"
+#define MSG_CONTROL_RETRACTF                "Откат  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Прыжок mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "Возврат +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "своп Возврат +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "Возврат  V"
+#define MSG_AUTORETRACT                     "АвтоОткат"
 #define MSG_FILAMENTCHANGE                  "Change filament"
 #define MSG_INIT_SDCARD                     "Init. SD-Card"
 #define MSG_CNG_SDCARD                      "Change SD-Card"
@@ -142,8 +121,6 @@
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
 
-#define MSG_RECTRACT                        "Откат подачи    \x7E"
-
 #ifdef DELTA_CALIBRATION_MENU
     #define MSG_DELTA_CALIBRATE             "Delta Calibration"
     #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 1b02185..8015f48 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -426,13 +426,13 @@ static void lcd_tune_menu()
     MENU_ITEM_EDIT(int3, MSG_NOZZLE, &target_temperature[0], 0, HEATER_0_MAXTEMP - 15);
 #endif
 #if TEMP_SENSOR_1 != 0
-    MENU_ITEM_EDIT(int3, MSG_NOZZLE1, &target_temperature[1], 0, HEATER_1_MAXTEMP - 15);
+    MENU_ITEM_EDIT(int3, MSG_NOZZLE " 2", &target_temperature[1], 0, HEATER_1_MAXTEMP - 15);
 #endif
 #if TEMP_SENSOR_2 != 0
-    MENU_ITEM_EDIT(int3, MSG_NOZZLE2, &target_temperature[2], 0, HEATER_2_MAXTEMP - 15);
+    MENU_ITEM_EDIT(int3, MSG_NOZZLE " 3", &target_temperature[2], 0, HEATER_2_MAXTEMP - 15);
 #endif
 #if TEMP_SENSOR_3 != 0
-    MENU_ITEM_EDIT(int3, MSG_NOZZLE3, &target_temperature[3], 0, HEATER_3_MAXTEMP - 15);
+    MENU_ITEM_EDIT(int3, MSG_NOZZLE " 4", &target_temperature[3], 0, HEATER_3_MAXTEMP - 15);
 #endif
 
 
@@ -441,15 +441,15 @@ static void lcd_tune_menu()
 #endif
     MENU_ITEM_EDIT(int3, MSG_FAN_SPEED, &fanSpeed, 0, 255);
     MENU_ITEM_EDIT(int3, MSG_FLOW, &extrudemultiply, 10, 999);
-    MENU_ITEM_EDIT(int3, MSG_FLOW0, &extruder_multiply[0], 10, 999);
+    MENU_ITEM_EDIT(int3, MSG_FLOW " 0", &extruder_multiply[0], 10, 999);
 #if TEMP_SENSOR_1 != 0
-    MENU_ITEM_EDIT(int3, MSG_FLOW1, &extruder_multiply[1], 10, 999);
+    MENU_ITEM_EDIT(int3, MSG_FLOW " 1", &extruder_multiply[1], 10, 999);
 #endif
 #if TEMP_SENSOR_2 != 0
-    MENU_ITEM_EDIT(int3, MSG_FLOW2, &extruder_multiply[2], 10, 999);
+    MENU_ITEM_EDIT(int3, MSG_FLOW " 2", &extruder_multiply[2], 10, 999);
 #endif
 #if TEMP_SENSOR_3 != 0
-    MENU_ITEM_EDIT(int3, MSG_FLOW3, &extruder_multiply[3], 10, 999);
+    MENU_ITEM_EDIT(int3, MSG_FLOW " 3", &extruder_multiply[3], 10, 999);
 #endif
 
 
@@ -591,18 +591,18 @@ static void lcd_preheat_pla_menu()
 {
   START_MENU();
   MENU_ITEM(back, MSG_PREPARE, lcd_prepare_menu);
-  MENU_ITEM(function, MSG_PREHEAT_PLA0, lcd_preheat_pla0);
+  MENU_ITEM(function, MSG_PREHEAT_PLA_N "1", lcd_preheat_pla0);
 #if TEMP_SENSOR_1 != 0 //2 extruder preheat
-  MENU_ITEM(function, MSG_PREHEAT_PLA1, lcd_preheat_pla1);
+  MENU_ITEM(function, MSG_PREHEAT_PLA_N "2", lcd_preheat_pla1);
 #endif //2 extruder preheat
 #if TEMP_SENSOR_2 != 0 //3 extruder preheat
-  MENU_ITEM(function, MSG_PREHEAT_PLA2, lcd_preheat_pla2);
+  MENU_ITEM(function, MSG_PREHEAT_PLA_N "3", lcd_preheat_pla2);
 #endif //3 extruder preheat
 #if TEMP_SENSOR_3 != 0 //4 extruder preheat
-  MENU_ITEM(function, MSG_PREHEAT_PLA3, lcd_preheat_pla3);
+  MENU_ITEM(function, MSG_PREHEAT_PLA_N "4", lcd_preheat_pla3);
 #endif //4 extruder preheat
 #if TEMP_SENSOR_1 != 0 || TEMP_SENSOR_2 != 0 || TEMP_SENSOR_3 != 0 //all extruder preheat
-  MENU_ITEM(function, MSG_PREHEAT_PLA0123, lcd_preheat_pla0123);
+  MENU_ITEM(function, MSG_PREHEAT_PLA_ALL, lcd_preheat_pla0123);
 #endif //all extruder preheat
 #if TEMP_SENSOR_BED != 0
   MENU_ITEM(function, MSG_PREHEAT_PLA_BEDONLY, lcd_preheat_pla_bedonly);
@@ -614,18 +614,18 @@ static void lcd_preheat_abs_menu()
 {
   START_MENU();
   MENU_ITEM(back, MSG_PREPARE, lcd_prepare_menu);
-  MENU_ITEM(function, MSG_PREHEAT_ABS0, lcd_preheat_abs0);
+  MENU_ITEM(function, MSG_PREHEAT_ABS_N "1", lcd_preheat_abs0);
 #if TEMP_SENSOR_1 != 0 //2 extruder preheat
-	MENU_ITEM(function, MSG_PREHEAT_ABS1, lcd_preheat_abs1);
+	MENU_ITEM(function, MSG_PREHEAT_ABS_N "2", lcd_preheat_abs1);
 #endif //2 extruder preheat
 #if TEMP_SENSOR_2 != 0 //3 extruder preheat
-  MENU_ITEM(function, MSG_PREHEAT_ABS2, lcd_preheat_abs2);
+  MENU_ITEM(function, MSG_PREHEAT_ABS_N "3", lcd_preheat_abs2);
 #endif //3 extruder preheat
 #if TEMP_SENSOR_3 != 0 //4 extruder preheat
-  MENU_ITEM(function, MSG_PREHEAT_ABS3, lcd_preheat_abs3);
+  MENU_ITEM(function, MSG_PREHEAT_ABS_N "4", lcd_preheat_abs3);
 #endif //4 extruder preheat
 #if TEMP_SENSOR_1 != 0 || TEMP_SENSOR_2 != 0 || TEMP_SENSOR_3 != 0 //all extruder preheat
-  MENU_ITEM(function, MSG_PREHEAT_ABS0123, lcd_preheat_abs0123);
+  MENU_ITEM(function, MSG_PREHEAT_ABS_ALL, lcd_preheat_abs0123);
 #endif //all extruder preheat
 
 #if TEMP_SENSOR_BED != 0
@@ -812,13 +812,13 @@ static void lcd_control_temperature_menu()
   MENU_ITEM_EDIT(int3, MSG_NOZZLE, &target_temperature[0], 0, HEATER_0_MAXTEMP - 15);
 #endif
 #if TEMP_SENSOR_1 != 0
-  MENU_ITEM_EDIT(int3, MSG_NOZZLE1, &target_temperature[1], 0, HEATER_1_MAXTEMP - 15);
+  MENU_ITEM_EDIT(int3, MSG_NOZZLE " 2", &target_temperature[1], 0, HEATER_1_MAXTEMP - 15);
 #endif
 #if TEMP_SENSOR_2 != 0
-  MENU_ITEM_EDIT(int3, MSG_NOZZLE2, &target_temperature[2], 0, HEATER_2_MAXTEMP - 15);
+  MENU_ITEM_EDIT(int3, MSG_NOZZLE " 3", &target_temperature[2], 0, HEATER_2_MAXTEMP - 15);
 #endif
 #if TEMP_SENSOR_3 != 0
-  MENU_ITEM_EDIT(int3, MSG_NOZZLE3, &target_temperature[3], 0, HEATER_3_MAXTEMP - 15);
+  MENU_ITEM_EDIT(int3, MSG_NOZZLE " 4", &target_temperature[3], 0, HEATER_3_MAXTEMP - 15);
 #endif
 #if TEMP_SENSOR_BED != 0
   MENU_ITEM_EDIT(int3, MSG_BED, &target_temperature_bed, 0, BED_MAXTEMP - 15);
@@ -848,12 +848,12 @@ static void lcd_control_temperature_menu()
 	  pid_current_extruder = 0;
 	  raw_Ki = unscalePID_i(PID_PARAM(Ki,1));
 	  raw_Kd = unscalePID_d(PID_PARAM(Kd,1));
-	  MENU_ITEM_EDIT(float52, MSG_PID_P1, &PID_PARAM(Kp,1), 1, 9990);
+	  MENU_ITEM_EDIT(float52, MSG_PID_P " E2", &PID_PARAM(Kp,1), 1, 9990);
 	  // i is typically a small value so allows values below 1
-	  MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I1, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
-	  MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D1, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+	  MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I " E2", &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	  MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D " E2", &raw_Kd, 1, 9990, copy_and_scalePID_d);
       #ifdef PID_ADD_EXTRUSION_RATE
-	    MENU_ITEM_EDIT(float3, MSG_PID_C1, &PID_PARAM(Kc,1), 1, 9990);
+	    MENU_ITEM_EDIT(float3, MSG_PID_C " E2", &PID_PARAM(Kc,1), 1, 9990);
       #endif//PID_ADD_EXTRUSION_RATE
   #endif//EXTRUDERS > 1
   #if EXTRUDERS > 2
@@ -861,12 +861,12 @@ static void lcd_control_temperature_menu()
 	    pid_current_extruder = 0;
 	    raw_Ki = unscalePID_i(PID_PARAM(Ki,2));
 	    raw_Kd = unscalePID_d(PID_PARAM(Kd,2));
-	    MENU_ITEM_EDIT(float52, MSG_PID_P2, &PID_PARAM(Kp,2), 1, 9990);
+	    MENU_ITEM_EDIT(float52, MSG_PID_P " E3", &PID_PARAM(Kp,2), 1, 9990);
 	    // i is typically a small value so allows values below 1
-	    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I2, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
-	    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D2, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+	    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I " E3", &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D " E3", &raw_Kd, 1, 9990, copy_and_scalePID_d);
         #ifdef PID_ADD_EXTRUSION_RATE
-	      MENU_ITEM_EDIT(float3, MSG_PID_C2, &PID_PARAM(Kc,2), 1, 9990);
+	      MENU_ITEM_EDIT(float3, MSG_PID_C " E3", &PID_PARAM(Kc,2), 1, 9990);
         #endif//PID_ADD_EXTRUSION_RATE
   #endif//EXTRUDERS > 2
 #endif // PID_PARAMS_PER_EXTRUDER

commit 34377ee512d22d0c98bc02f2fc7f8f2e6cd53d2d (from 53eea611b83c5bea5779fcb61c9344d09df24958)
Merge: 7378a7f 53eea61
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Tue Jan 27 22:10:08 2015 -0800

    Merge pull request #1427 from thinkyhead/fewer_preheat_strings
    
    Remove language strings that only add a number

diff --git a/Marlin/Marlin.h b/Marlin/Marlin.h
index 1ab316a..c5caac7 100644
--- a/Marlin/Marlin.h
+++ b/Marlin/Marlin.h
@@ -34,7 +34,7 @@
 
 // Arduino < 1.0.0 does not define this, so we need to do it ourselves
 #ifndef analogInputToDigitalPin
-# define analogInputToDigitalPin(p) ((p) + A0)
+# define analogInputToDigitalPin(p) ((p) + 0xA0)
 #endif
 
 #ifdef AT90USB
diff --git a/Marlin/SdBaseFile.cpp b/Marlin/SdBaseFile.cpp
index dbcf77f..c72eced 100644
--- a/Marlin/SdBaseFile.cpp
+++ b/Marlin/SdBaseFile.cpp
@@ -1012,7 +1012,7 @@ void SdBaseFile::printFatTime( uint16_t fatTime) {
  * the value zero, false, is returned for failure.
  */
 bool SdBaseFile::printName() {
-  char name[13];
+  char name[FILENAME_LENGTH];
   if (!getFilename(name)) return false;
   MYSERIAL.print(name);
   return true;
@@ -1135,7 +1135,7 @@ int8_t SdBaseFile::readDir(dir_t* dir, char* longFilename) {
     	if (VFAT->firstClusterLow == 0 && (VFAT->sequenceNumber & 0x1F) > 0 && (VFAT->sequenceNumber & 0x1F) <= MAX_VFAT_ENTRIES)
     	{
 			//TODO: Store the filename checksum to verify if a none-long filename aware system modified the file table.
-    		n = ((VFAT->sequenceNumber & 0x1F) - 1) * 13;
+    		n = ((VFAT->sequenceNumber & 0x1F) - 1) * FILENAME_LENGTH;
 			longFilename[n+0] = VFAT->name1[0];
 			longFilename[n+1] = VFAT->name1[1];
 			longFilename[n+2] = VFAT->name1[2];
@@ -1151,7 +1151,7 @@ int8_t SdBaseFile::readDir(dir_t* dir, char* longFilename) {
 			longFilename[n+12] = VFAT->name3[1];
 			//If this VFAT entry is the last one, add a NUL terminator at the end of the string
 			if (VFAT->sequenceNumber & 0x40)
-				longFilename[n+13] = '\0';
+				longFilename[n+FILENAME_LENGTH] = '\0';
 		}
     }
     // return if normal file or subdirectory
diff --git a/Marlin/SdFatConfig.h b/Marlin/SdFatConfig.h
index 24caf6f..a549835 100644
--- a/Marlin/SdFatConfig.h
+++ b/Marlin/SdFatConfig.h
@@ -108,15 +108,17 @@ uint8_t const SOFT_SPI_SCK_PIN = 13;
  * a pure virtual function is called.
  */
 #define USE_CXA_PURE_VIRTUAL 1
+
+/** Number of UTF-16 characters per entry */
+#define FILENAME_LENGTH 13
+
 /**
  * Defines for long (vfat) filenames
  */
 /** Number of VFAT entries used. Every entry has 13 UTF-16 characters */
 #define MAX_VFAT_ENTRIES (2)
-/** Number of UTF-16 characters per entry */
-#define FILENAME_LENGTH 13
 /** Total size of the buffer used to store the long filenames */
-#define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
+#define LONG_FILENAME_LENGTH (FILENAME_LENGTH*MAX_VFAT_ENTRIES+1)
 #endif  // SdFatConfig_h
 
 
diff --git a/Marlin/Servo.cpp b/Marlin/Servo.cpp
index 5f8c7ef..27a7d3c 100644
--- a/Marlin/Servo.cpp
+++ b/Marlin/Servo.cpp
@@ -44,6 +44,7 @@
 #include "Configuration.h" 
 
 #ifdef NUM_SERVOS
+
 #include <avr/interrupt.h>
 #include <Arduino.h>
 
@@ -52,7 +53,6 @@
 #define usToTicks(_us)    (( clockCyclesPerMicrosecond()* _us) / 8)     // converts microseconds to tick (assumes prescale of 8)  // 12 Aug 2009
 #define ticksToUs(_ticks) (( (unsigned)_ticks * 8)/ clockCyclesPerMicrosecond() ) // converts from ticks back to microseconds
 
-
 #define TRIM_DURATION       2                               // compensation ticks to trim adjust for digitalWrite delays // 12 August 2009
 
 //#define NBR_TIMERS        (MAX_SERVOS / SERVOS_PER_TIMER)
@@ -74,24 +74,23 @@ uint8_t ServoCount = 0;                                     // the total number
 
 /************ static functions common to all instances ***********************/
 
-static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)
-{
-  if( Channel[timer] < 0 )
+static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA) {
+  if (Channel[timer] < 0)
     *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer
-  else{
-    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )
+  else {
+    if (SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive)
       digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated
   }
 
   Channel[timer]++;    // increment to the next channel
-  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {
+  if (SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {
     *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;
-    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated
+    if (SERVO(timer,Channel[timer]).Pin.isActive)     // check if activated
       digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high
   }
   else {
     // finished all channels so wait for the refresh period to expire before starting over
-    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed
+    if ( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed
       *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);
     else
       *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed
@@ -100,142 +99,126 @@ static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t
 }
 
 #ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform
-// Interrupt handlers for Arduino
-#if defined(_useTimer1)
-SIGNAL (TIMER1_COMPA_vect)
-{
-  handle_interrupts(_timer1, &TCNT1, &OCR1A);
-}
-#endif
-
-#if defined(_useTimer3)
-SIGNAL (TIMER3_COMPA_vect)
-{
-  handle_interrupts(_timer3, &TCNT3, &OCR3A);
-}
-#endif
 
-#if defined(_useTimer4)
-SIGNAL (TIMER4_COMPA_vect)
-{
-  handle_interrupts(_timer4, &TCNT4, &OCR4A);
+  // Interrupt handlers for Arduino
+  #if defined(_useTimer1)
+    SIGNAL (TIMER1_COMPA_vect) { handle_interrupts(_timer1, &TCNT1, &OCR1A); }
+  #endif
+
+  #if defined(_useTimer3)
+    SIGNAL (TIMER3_COMPA_vect) { handle_interrupts(_timer3, &TCNT3, &OCR3A); }
+  #endif
+
+  #if defined(_useTimer4)
+    SIGNAL (TIMER4_COMPA_vect) { handle_interrupts(_timer4, &TCNT4, &OCR4A); }
+  #endif
+
+  #if defined(_useTimer5)
+    SIGNAL (TIMER5_COMPA_vect) { handle_interrupts(_timer5, &TCNT5, &OCR5A); }
+  #endif
+
+#else //!WIRING
+
+  // Interrupt handlers for Wiring
+  #if defined(_useTimer1)
+    void Timer1Service() { handle_interrupts(_timer1, &TCNT1, &OCR1A); }
+  #endif
+  #if defined(_useTimer3)
+    void Timer3Service() { handle_interrupts(_timer3, &TCNT3, &OCR3A); }
+  #endif
+
+#endif //!WIRING
+
+
+static void initISR(timer16_Sequence_t timer) {
+  #if defined(_useTimer1)
+    if (timer == _timer1) {
+      TCCR1A = 0;             // normal counting mode
+      TCCR1B = _BV(CS11);     // set prescaler of 8
+      TCNT1 = 0;              // clear the timer count
+      #if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)
+        TIFR |= _BV(OCF1A);      // clear any pending interrupts;
+        TIMSK |= _BV(OCIE1A);    // enable the output compare interrupt
+      #else
+        // here if not ATmega8 or ATmega128
+        TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;
+        TIMSK1 |= _BV(OCIE1A);   // enable the output compare interrupt
+      #endif
+      #if defined(WIRING)
+        timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);
+      #endif
+    }
+  #endif
+
+  #if defined(_useTimer3)
+    if (timer == _timer3) {
+      TCCR3A = 0;             // normal counting mode
+      TCCR3B = _BV(CS31);     // set prescaler of 8
+      TCNT3 = 0;              // clear the timer count
+      #if defined(__AVR_ATmega128__)
+        TIFR |= _BV(OCF3A);     // clear any pending interrupts;
+      	ETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt
+      #else
+        TIFR3 = _BV(OCF3A);     // clear any pending interrupts;
+        TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt
+      #endif
+      #if defined(WIRING)
+        timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only
+      #endif
+    }
+  #endif
+
+  #if defined(_useTimer4)
+    if (timer == _timer4) {
+      TCCR4A = 0;             // normal counting mode
+      TCCR4B = _BV(CS41);     // set prescaler of 8
+      TCNT4 = 0;              // clear the timer count
+      TIFR4 = _BV(OCF4A);     // clear any pending interrupts;
+      TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt
+    }
+  #endif
+
+  #if defined(_useTimer5)
+    if (timer == _timer5) {
+      TCCR5A = 0;             // normal counting mode
+      TCCR5B = _BV(CS51);     // set prescaler of 8
+      TCNT5 = 0;              // clear the timer count
+      TIFR5 = _BV(OCF5A);     // clear any pending interrupts;
+      TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt
+    }
+  #endif
 }
-#endif
 
-#if defined(_useTimer5)
-SIGNAL (TIMER5_COMPA_vect)
-{
-  handle_interrupts(_timer5, &TCNT5, &OCR5A);
+static void finISR(timer16_Sequence_t timer) {
+  // Disable use of the given timer
+  #if defined(WIRING)
+    if (timer == _timer1) {
+      #if defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2561__)
+        TIMSK1
+      #else
+        TIMSK
+      #endif
+          &= ~_BV(OCIE1A);    // disable timer 1 output compare interrupt
+      timerDetach(TIMER1OUTCOMPAREA_INT);
+    }
+    else if (timer == _timer3) {
+      #if defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2561__)
+        TIMSK3
+      #else
+        ETIMSK
+      #endif
+          &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt
+      timerDetach(TIMER3OUTCOMPAREA_INT);
+    }
+  #else //!WIRING
+    // For arduino - in future: call here to a currently undefined function to reset the timer
+  #endif
 }
-#endif
 
-#elif defined WIRING
-// Interrupt handlers for Wiring
-#if defined(_useTimer1)
-void Timer1Service()
-{
-  handle_interrupts(_timer1, &TCNT1, &OCR1A);
-}
-#endif
-#if defined(_useTimer3)
-void Timer3Service()
-{
-  handle_interrupts(_timer3, &TCNT3, &OCR3A);
-}
-#endif
-#endif
-
-
-static void initISR(timer16_Sequence_t timer)
-{
-#if defined (_useTimer1)
-  if(timer == _timer1) {
-    TCCR1A = 0;             // normal counting mode
-    TCCR1B = _BV(CS11);     // set prescaler of 8
-    TCNT1 = 0;              // clear the timer count
-#if defined(__AVR_ATmega8__)|| defined(__AVR_ATmega128__)
-    TIFR |= _BV(OCF1A);      // clear any pending interrupts;
-    TIMSK |=  _BV(OCIE1A) ;  // enable the output compare interrupt
-#else
-    // here if not ATmega8 or ATmega128
-    TIFR1 |= _BV(OCF1A);     // clear any pending interrupts;
-    TIMSK1 |=  _BV(OCIE1A) ; // enable the output compare interrupt
-#endif
-#if defined(WIRING)
-    timerAttach(TIMER1OUTCOMPAREA_INT, Timer1Service);
-#endif
-  }
-#endif
-
-#if defined (_useTimer3)
-  if(timer == _timer3) {
-    TCCR3A = 0;             // normal counting mode
-    TCCR3B = _BV(CS31);     // set prescaler of 8
-    TCNT3 = 0;              // clear the timer count
-#if defined(__AVR_ATmega128__)
-    TIFR |= _BV(OCF3A);     // clear any pending interrupts;
-	ETIMSK |= _BV(OCIE3A);  // enable the output compare interrupt
-#else
-    TIFR3 = _BV(OCF3A);     // clear any pending interrupts;
-    TIMSK3 =  _BV(OCIE3A) ; // enable the output compare interrupt
-#endif
-#if defined(WIRING)
-    timerAttach(TIMER3OUTCOMPAREA_INT, Timer3Service);  // for Wiring platform only
-#endif
-  }
-#endif
-
-#if defined (_useTimer4)
-  if(timer == _timer4) {
-    TCCR4A = 0;             // normal counting mode
-    TCCR4B = _BV(CS41);     // set prescaler of 8
-    TCNT4 = 0;              // clear the timer count
-    TIFR4 = _BV(OCF4A);     // clear any pending interrupts;
-    TIMSK4 =  _BV(OCIE4A) ; // enable the output compare interrupt
-  }
-#endif
-
-#if defined (_useTimer5)
-  if(timer == _timer5) {
-    TCCR5A = 0;             // normal counting mode
-    TCCR5B = _BV(CS51);     // set prescaler of 8
-    TCNT5 = 0;              // clear the timer count
-    TIFR5 = _BV(OCF5A);     // clear any pending interrupts;
-    TIMSK5 =  _BV(OCIE5A) ; // enable the output compare interrupt
-  }
-#endif
-}
-
-static void finISR(timer16_Sequence_t timer)
-{
-    //disable use of the given timer
-#if defined WIRING   // Wiring
-  if(timer == _timer1) {
-    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)
-    TIMSK1 &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt
-    #else
-    TIMSK &=  ~_BV(OCIE1A) ;  // disable timer 1 output compare interrupt
-    #endif
-    timerDetach(TIMER1OUTCOMPAREA_INT);
-  }
-  else if(timer == _timer3) {
-    #if defined(__AVR_ATmega1281__)||defined(__AVR_ATmega2561__)
-    TIMSK3 &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt
-    #else
-    ETIMSK &= ~_BV(OCIE3A);    // disable the timer3 output compare A interrupt
-    #endif
-    timerDetach(TIMER3OUTCOMPAREA_INT);
-  }
-#else
-    //For arduino - in future: call here to a currently undefined function to reset the timer
-#endif
-}
-
-static boolean isTimerActive(timer16_Sequence_t timer)
-{
+static boolean isTimerActive(timer16_Sequence_t timer) {
   // returns true if any servo is active on this timer
   for(uint8_t channel=0; channel < SERVOS_PER_TIMER; channel++) {
-    if(SERVO(timer,channel).Pin.isActive == true)
+    if (SERVO(timer,channel).Pin.isActive)
       return true;
   }
   return false;
@@ -244,70 +227,59 @@ static boolean isTimerActive(timer16_Sequence_t timer)
 
 /****************** end of static functions ******************************/
 
-Servo::Servo()
-{
-  if( ServoCount < MAX_SERVOS) {
+Servo::Servo() {
+  if ( ServoCount < MAX_SERVOS) {
     this->servoIndex = ServoCount++;                    // assign a servo index to this instance
-	servos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009
+    servos[this->servoIndex].ticks = usToTicks(DEFAULT_PULSE_WIDTH);   // store default values  - 12 Aug 2009
   }
   else
-    this->servoIndex = INVALID_SERVO ;  // too many servos
+    this->servoIndex = INVALID_SERVO;  // too many servos
 }
 
-uint8_t Servo::attach(int pin)
-{
+uint8_t Servo::attach(int pin) {
   return this->attach(pin, MIN_PULSE_WIDTH, MAX_PULSE_WIDTH);
 }
 
-uint8_t Servo::attach(int pin, int min, int max)
-{
-  if(this->servoIndex < MAX_SERVOS ) {
-#if defined (ENABLE_AUTO_BED_LEVELING) && (PROBE_SERVO_DEACTIVATION_DELAY > 0)
+uint8_t Servo::attach(int pin, int min, int max) {
+  if (this->servoIndex < MAX_SERVOS ) {
+  #if defined(ENABLE_AUTO_BED_LEVELING) && (PROBE_SERVO_DEACTIVATION_DELAY > 0)
     if (pin > 0) this->pin = pin; else pin = this->pin;
-#endif
-    pinMode( pin, OUTPUT) ;                                   // set servo pin to output
+  #endif
+    pinMode(pin, OUTPUT);                                   // set servo pin to output
     servos[this->servoIndex].Pin.nbr = pin;
     // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128
-    this->min  = (MIN_PULSE_WIDTH - min)/4; //resolution of min/max is 4 uS
-    this->max  = (MAX_PULSE_WIDTH - max)/4;
+    this->min = (MIN_PULSE_WIDTH - min) / 4; //resolution of min/max is 4 uS
+    this->max = (MAX_PULSE_WIDTH - max) / 4;
     // initialize the timer if it has not already been initialized
     timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);
-    if(isTimerActive(timer) == false)
-      initISR(timer);
+    if (!isTimerActive(timer)) initISR(timer);
     servos[this->servoIndex].Pin.isActive = true;  // this must be set after the check for isTimerActive
   }
-  return this->servoIndex ;
+  return this->servoIndex;
 }
 
-void Servo::detach()
-{
+void Servo::detach() {
   servos[this->servoIndex].Pin.isActive = false;
   timer16_Sequence_t timer = SERVO_INDEX_TO_TIMER(servoIndex);
-  if(isTimerActive(timer) == false) {
-    finISR(timer);
-  }
+  if (!isTimerActive(timer)) finISR(timer);
 }
 
-void Servo::write(int value)
-{
-  if(value < MIN_PULSE_WIDTH)
-  {  // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)
-    if(value < 0) value = 0;
-    if(value > 180) value = 180;
+void Servo::write(int value) {
+  if (value < MIN_PULSE_WIDTH) { // treat values less than 544 as angles in degrees (valid values in microseconds are handled as microseconds)
+    if (value < 0) value = 0;
+    if (value > 180) value = 180;
     value = map(value, 0, 180, SERVO_MIN(),  SERVO_MAX());
   }
   this->writeMicroseconds(value);
 }
 
-void Servo::writeMicroseconds(int value)
-{
+void Servo::writeMicroseconds(int value) {
   // calculate and store the values for the given channel
   byte channel = this->servoIndex;
-  if( (channel < MAX_SERVOS) )   // ensure channel is valid
-  {
-    if( value < SERVO_MIN() )          // ensure pulse width is valid
+  if (channel < MAX_SERVOS) {  // ensure channel is valid
+    if (value < SERVO_MIN())   // ensure pulse width is valid
       value = SERVO_MIN();
-    else if( value > SERVO_MAX() )
+    else if (value > SERVO_MAX())
       value = SERVO_MAX();
 
   	value = value - TRIM_DURATION;
@@ -320,25 +292,13 @@ void Servo::writeMicroseconds(int value)
   }
 }
 
-int Servo::read() // return the value as degrees
-{
-  return  map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180);
-}
+// return the value as degrees
+int Servo::read() { return map( this->readMicroseconds()+1, SERVO_MIN(), SERVO_MAX(), 0, 180); }
 
-int Servo::readMicroseconds()
-{
-  unsigned int pulsewidth;
-  if( this->servoIndex != INVALID_SERVO )
-    pulsewidth = ticksToUs(servos[this->servoIndex].ticks)  + TRIM_DURATION ;   // 12 aug 2009
-  else
-    pulsewidth  = 0;
-
-  return pulsewidth;
+int Servo::readMicroseconds() {
+  return (this->servoIndex == INVALID_SERVO) ? 0 : ticksToUs(servos[this->servoIndex].ticks) + TRIM_DURATION;
 }
 
-bool Servo::attached()
-{
-  return servos[this->servoIndex].Pin.isActive ;
-}
+bool Servo::attached() { return servos[this->servoIndex].Pin.isActive; }
 
 #endif
diff --git a/Marlin/Servo.h b/Marlin/Servo.h
index 204497a..bbdf6bf 100644
--- a/Marlin/Servo.h
+++ b/Marlin/Servo.h
@@ -58,35 +58,36 @@
 
 // Say which 16 bit timers can be used and in what order
 #if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
-#define _useTimer5
-//#define _useTimer1
-#define _useTimer3
-#define _useTimer4
-//typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;
-typedef enum { _timer5, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;
+  #define _useTimer5
+  //#define _useTimer1
+  #define _useTimer3
+  #define _useTimer4
+  //typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;
+  typedef enum { _timer5, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t ;
 
 #elif defined(__AVR_ATmega32U4__)
-//#define _useTimer1
-#define _useTimer3
-//typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;
-typedef enum { _timer3, _Nbr_16timers } timer16_Sequence_t ;
+  //#define _useTimer1
+  #define _useTimer3
+  //typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;
+  typedef enum { _timer3, _Nbr_16timers } timer16_Sequence_t ;
 
 #elif defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB1286__)
-#define _useTimer3
-//#define _useTimer1
-//typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;
-typedef enum { _timer3, _Nbr_16timers } timer16_Sequence_t ;
+  #define _useTimer3
+  //#define _useTimer1
+  //typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;
+  typedef enum { _timer3, _Nbr_16timers } timer16_Sequence_t ;
 
 #elif defined(__AVR_ATmega128__) ||defined(__AVR_ATmega1281__) || defined(__AVR_ATmega1284P__) ||defined(__AVR_ATmega2561__)
-#define _useTimer3
-//#define _useTimer1
-//typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;
-typedef enum { _timer3, _Nbr_16timers } timer16_Sequence_t ;
+  #define _useTimer3
+  //#define _useTimer1
+  //typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t ;
+  typedef enum { _timer3, _Nbr_16timers } timer16_Sequence_t ;
 
 #else  // everything else
-//#define _useTimer1
-//typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;
-typedef enum { _Nbr_16timers } timer16_Sequence_t ;
+  //#define _useTimer1
+  //typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t ;
+  typedef enum { _Nbr_16timers } timer16_Sequence_t ;
+
 #endif
 
 #define Servo_VERSION           2     // software version of this library
@@ -101,35 +102,34 @@ typedef enum { _Nbr_16timers } timer16_Sequence_t ;
 
 #define INVALID_SERVO         255     // flag indicating an invalid servo index
 
-typedef struct  {
+typedef struct {
   uint8_t nbr        :6 ;             // a pin number from 0 to 63
   uint8_t isActive   :1 ;             // true if this channel is enabled, pin not pulsed if false
-} ServoPin_t   ;
+} ServoPin_t;
 
 typedef struct {
   ServoPin_t Pin;
   unsigned int ticks;
 } servo_t;
 
-class Servo
-{
-public:
-  Servo();
-  uint8_t attach(int pin);           // attach the given pin to the next free channel, sets pinMode, returns channel number or 0 if failure
-  uint8_t attach(int pin, int min, int max); // as above but also sets min and max values for writes.
-  void detach();
-  void write(int value);             // if value is < 200 it is treated as an angle, otherwise as pulse width in microseconds
-  void writeMicroseconds(int value); // Write pulse width in microseconds
-  int read();                        // returns current pulse width as an angle between 0 and 180 degrees
-  int readMicroseconds();            // returns current pulse width in microseconds for this servo (was read_us() in first release)
-  bool attached();                   // return true if this servo is attached, otherwise false
-#if defined (ENABLE_AUTO_BED_LEVELING) && (PROBE_SERVO_DEACTIVATION_DELAY > 0)
-  int pin;                           // store the hardware pin of the servo
-#endif
-private:
-   uint8_t servoIndex;               // index into the channel data for this servo
-   int8_t min;                       // minimum is this value times 4 added to MIN_PULSE_WIDTH
-   int8_t max;                       // maximum is this value times 4 added to MAX_PULSE_WIDTH
+class Servo {
+  public:
+    Servo();
+    uint8_t attach(int pin);           // attach the given pin to the next free channel, sets pinMode, returns channel number or 0 if failure
+    uint8_t attach(int pin, int min, int max); // as above but also sets min and max values for writes.
+    void detach();
+    void write(int value);             // if value is < 200 it is treated as an angle, otherwise as pulse width in microseconds
+    void writeMicroseconds(int value); // Write pulse width in microseconds
+    int read();                        // returns current pulse width as an angle between 0 and 180 degrees
+    int readMicroseconds();            // returns current pulse width in microseconds for this servo (was read_us() in first release)
+    bool attached();                   // return true if this servo is attached, otherwise false
+    #if defined (ENABLE_AUTO_BED_LEVELING) && (PROBE_SERVO_DEACTIVATION_DELAY > 0)
+      int pin;                           // store the hardware pin of the servo
+    #endif
+  private:
+    uint8_t servoIndex;               // index into the channel data for this servo
+    int8_t min;                       // minimum is this value times 4 added to MIN_PULSE_WIDTH
+    int8_t max;                       // maximum is this value times 4 added to MAX_PULSE_WIDTH
 };
 
 #endif
diff --git a/Marlin/boards.h b/Marlin/boards.h
index 1670ad7..fa06f0d 100644
--- a/Marlin/boards.h
+++ b/Marlin/boards.h
@@ -14,7 +14,7 @@
 #define BOARD_RAMPS_13_EEB      34   // RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Bed)
 #define BOARD_RAMPS_13_EFF      35   // RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Fan)
 #define BOARD_RAMPS_13_EEF      36   // RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Fan)
-#define BOARD_DUEMILANOVE_328P  4    // Duemilanove w/ ATMega328P pin assignment
+#define BOARD_DUEMILANOVE_328P  4    // Duemilanove w/ ATMega328P pin assignments
 #define BOARD_GEN6              5    // Gen6
 #define BOARD_GEN6_DELUXE       51   // Gen6 deluxe
 #define BOARD_SANGUINOLOLU_11   6    // Sanguinololu < 1.2
@@ -41,6 +41,7 @@
 #define BOARD_MEGATRONICS       70   // Megatronics
 #define BOARD_MEGATRONICS_2     701  // Megatronics v2.0
 #define BOARD_MEGATRONICS_1     702  // Minitronics v1.0
+#define BOARD_MEGATRONICS_3     703  // Megatronics v3.0
 #define BOARD_OMCA_A            90   // Alpha OMCA board
 #define BOARD_OMCA              91   // Final OMCA board
 #define BOARD_RAMBO             301  // Rambo
diff --git a/Marlin/cardreader.cpp b/Marlin/cardreader.cpp
index e22f343..83671e0 100644
--- a/Marlin/cardreader.cpp
+++ b/Marlin/cardreader.cpp
@@ -23,7 +23,7 @@ CardReader::CardReader()
    memset(workDirParents, 0, sizeof(workDirParents));
 
    autostart_stilltocheck=true; //the SD start is delayed, because otherwise the serial cannot answer fast enough to make contact with the host software.
-   lastnr=0;
+   autostart_index=0;
   //power to SD reader
   #if SDPOWER > -1
     SET_OUTPUT(SDPOWER); 
@@ -60,8 +60,8 @@ void CardReader::lsDive(const char *prepend, SdFile parent, const char * const m
     if( DIR_IS_SUBDIR(&p) && lsAction!=LS_Count && lsAction!=LS_GetFilename) // hence LS_SerialPrint
     {
 
-      char path[13*2];
-      char lfilename[13];
+      char path[FILENAME_LENGTH*2];
+      char lfilename[FILENAME_LENGTH];
       createFilename(lfilename,p);
       
       path[0]=0;
@@ -241,7 +241,7 @@ void CardReader::getAbsFilename(char *t)
     while(*t!=0 && cnt< MAXPATHNAMELENGTH) 
     {t++;cnt++;}  //crawl counter forward.
   }
-  if(cnt<MAXPATHNAMELENGTH-13)
+  if(cnt<MAXPATHNAMELENGTH-FILENAME_LENGTH)
     file.getFilename(t);
   else
     t[0]=0;
@@ -311,7 +311,7 @@ void CardReader::openFile(char* name,bool read, bool replace_current/*=true*/)
       //SERIAL_ECHO("end  :");SERIAL_ECHOLN((int)(dirname_end-name));
       if(dirname_end>0 && dirname_end>dirname_start)
       {
-        char subdirname[13];
+        char subdirname[FILENAME_LENGTH];
         strncpy(subdirname, dirname_start, dirname_end-dirname_start);
         subdirname[dirname_end-dirname_start]=0;
         SERIAL_ECHOLN(subdirname);
@@ -408,7 +408,7 @@ void CardReader::removeFile(char* name)
       //SERIAL_ECHO("end  :");SERIAL_ECHOLN((int)(dirname_end-name));
       if(dirname_end>0 && dirname_end>dirname_start)
       {
-        char subdirname[13];
+        char subdirname[FILENAME_LENGTH];
         strncpy(subdirname, dirname_start, dirname_end-dirname_start);
         subdirname[dirname_end-dirname_start]=0;
         SERIAL_ECHOLN(subdirname);
@@ -510,7 +510,7 @@ void CardReader::checkautostart(bool force)
   }
   
   char autoname[30];
-  sprintf_P(autoname, PSTR("auto%i.g"), lastnr);
+  sprintf_P(autoname, PSTR("auto%i.g"), autostart_index);
   for(int8_t i=0;i<(int8_t)strlen(autoname);i++)
     autoname[i]=tolower(autoname[i]);
   dir_t p;
@@ -537,9 +537,9 @@ void CardReader::checkautostart(bool force)
     }
   }
   if(!found)
-    lastnr=-1;
+    autostart_index=-1;
   else
-    lastnr++;
+    autostart_index++;
 }
 
 void CardReader::closefile(bool store_location)
diff --git a/Marlin/cardreader.h b/Marlin/cardreader.h
index e513dc0..a1da3d6 100644
--- a/Marlin/cardreader.h
+++ b/Marlin/cardreader.h
@@ -50,12 +50,12 @@ public:
 public:
   bool saving;
   bool logging;
-  bool sdprinting ;  
-  bool cardOK ;
-  char filename[13];
+  bool sdprinting;  
+  bool cardOK;
+  char filename[FILENAME_LENGTH];
   char longFilename[LONG_FILENAME_LENGTH];
   bool filenameIsDir;
-  int lastnr; //last number of the autostart;
+  int autostart_index;
 private:
   SdFile root,*curDir,workDir,workDirParents[MAX_DIR_DEPTH];
   uint16_t workDirDepth;
@@ -63,7 +63,7 @@ private:
   SdVolume volume;
   SdFile file;
   #define SD_PROCEDURE_DEPTH 1
-  #define MAXPATHNAMELENGTH (13*MAX_DIR_DEPTH+MAX_DIR_DEPTH+1)
+  #define MAXPATHNAMELENGTH (FILENAME_LENGTH*MAX_DIR_DEPTH+MAX_DIR_DEPTH+1)
   uint8_t file_subcall_ctr;
   uint32_t filespos[SD_PROCEDURE_DEPTH];
   char filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
diff --git a/Marlin/pins.h b/Marlin/pins.h
index 3dd34f1..3f11e90 100644
--- a/Marlin/pins.h
+++ b/Marlin/pins.h
@@ -1,2979 +1,131 @@
-#ifndef PINS_H
-#define PINS_H
-
-#include "boards.h"
-
-#if !MB(5DPRINT)
-#define X_MS1_PIN -1
-#define X_MS2_PIN -1
-#define Y_MS1_PIN -1
-#define Y_MS2_PIN -1
-#define Z_MS1_PIN -1
-#define Z_MS2_PIN -1
-#define E0_MS1_PIN -1
-#define E0_MS2_PIN -1
-#define E1_MS1_PIN -1
-#define E1_MS2_PIN -1
-#define DIGIPOTSS_PIN -1
-#endif
-
-/****************************************************************************************
-* 5DPrint D8 Driver board
-* https://bitbucket.org/makible/5dprint-d8-controller-board
-****************************************************************************************/
-
-#if MB(5DPRINT)
-
-#define KNOWN_BOARD 1
-#define AT90USB 1286  // Disable MarlinSerial etc.
-
-#ifndef __AVR_AT90USB1286__
-#error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define LARGE_FLASH        true
-
-#define X_STEP_PIN          0
-#define X_DIR_PIN           1
-#define X_ENABLE_PIN       23
-#define X_STOP_PIN         37
-
-#define Y_STEP_PIN          2
-#define Y_DIR_PIN           3
-#define Y_ENABLE_PIN       19
-#define Y_STOP_PIN         36
-
-#define Z_STEP_PIN          4
-#define Z_DIR_PIN           5
-#define Z_ENABLE_PIN       18
-#define Z_STOP_PIN         39
-
-#define E0_STEP_PIN         6
-#define E0_DIR_PIN          7
-#define E0_ENABLE_PIN      17
-
-#define HEATER_0_PIN       21  // Extruder
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-#define HEATER_BED_PIN     20  // Bed
-// You may need to change FAN_PIN to 16 because Marlin isn't using fastio.h
-// for the fan and Teensyduino uses a different pin mapping.
-#define FAN_PIN            16  // Fan
-
-#define TEMP_0_PIN          1  // Extruder / Analog pin numbering
-#define TEMP_BED_PIN        0  // Bed / Analog pin numbering
-
-#define TEMP_1_PIN         -1
-#define TEMP_2_PIN         -1
-
-#define SDPOWER            -1
-#define LED_PIN            -1
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-#define ALARM_PIN          -1
-
-// The SDSS pin uses a different pin mapping from file Sd2PinMap.h
-#define SDSS               20
-
-#ifndef SDSUPPORT
-// these pins are defined in the SD library if building with SD support
-  #define SCK_PIN           9
-  #define MISO_PIN         11
-  #define MOSI_PIN         10
-#endif
-
-// Microstepping pins
-// Note that the pin mapping is not from fastio.h
-// See Sd2PinMap.h for the pin configurations
-#define X_MS1_PIN 25
-#define X_MS2_PIN 26
-#define Y_MS1_PIN 9
-#define Y_MS2_PIN 8
-#define Z_MS1_PIN 7
-#define Z_MS2_PIN 6
-#define E0_MS1_PIN 5
-#define E0_MS2_PIN 4
-
-#endif // 5DPRINT
-
-/****************************************************************************************
-* Leapfrog Driver board
-* 
-****************************************************************************************/
-#if MB(LEAPFROG)  // Leapfrog board
-#define KNOWN_BOARD 1
-
-#ifndef __AVR_ATmega1280__
- #ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
- #endif
-#endif
-
-#define X_STEP_PIN         28
-#define X_DIR_PIN          63
-#define X_ENABLE_PIN       29
-#define X_MIN_PIN          47
-#define X_MAX_PIN          -1   //2 //Max endstops default to disabled "-1", set to commented value to enable.
-
-#define Y_STEP_PIN         14 // A6
-#define Y_DIR_PIN          15 // A0
-#define Y_ENABLE_PIN       39
-#define Y_MIN_PIN          48
-#define Y_MAX_PIN          -1   //15
-
-#define Z_STEP_PIN         31 // A2
-#define Z_DIR_PIN          32 // A6
-#define Z_ENABLE_PIN       30 // A1
-#define Z_MIN_PIN          49
-#define Z_MAX_PIN          -1
-
-#define E0_STEP_PIN         34  //34
-#define E0_DIR_PIN          35 //35
-#define E0_ENABLE_PIN       33 //33
-
-#define E1_STEP_PIN         37 //37
-#define E1_DIR_PIN          40 //40
-#define E1_ENABLE_PIN       36 //36
-
-#define Y2_STEP_PIN         37
-#define Y2_DIR_PIN          40
-#define Y2_ENABLE_PIN       36
-
-#define Z2_STEP_PIN         37
-#define Z2_DIR_PIN          40
-#define Z2_ENABLE_PIN       36
-
-#define SDPOWER            -1
-#define SDSS               11
-#define SDCARDDETECT       -1 // 10 optional also used as mode pin
-#define LED_PIN            13
-#define FAN_PIN            7
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-#define SOL1_PIN   16
-#define SOL2_PIN    17
-
-#define HEATER_0_PIN       9
-#define HEATER_1_PIN       8 // 12
-#define HEATER_2_PIN       11 //-1 // 13
-#define TEMP_0_PIN         13 //D27   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-#define TEMP_1_PIN         15 // 1
-#define TEMP_2_PIN         -1 // 2
-#define HEATER_BED_PIN     10 // 14/15
-#define TEMP_BED_PIN       14 // 1,2 or I2C
-/*  Unused (1) (2) (3) 4 5 6 7 8 9 10 11 12 13 (14) (15) (16) 17 (18) (19) (20) (21) (22) (23) 24 (25) (26) (27) 28 (29) (30) (31)  */
-
-
-#endif // LEAPFROG
-
-/****************************************************************************************
-*
-*
-****************************************************************************************/
-
-#if MB(99)
-#define KNOWN_BOARD 1
-
-#define X_STEP_PIN          2
-#define X_DIR_PIN           3
-#define X_ENABLE_PIN        -1
-#define X_STOP_PIN          16
-
-#define Y_STEP_PIN          5
-#define Y_DIR_PIN           6
-#define Y_ENABLE_PIN       -1
-#define Y_STOP_PIN          67
-
-#define Z_STEP_PIN          62
-#define Z_DIR_PIN           63
-#define Z_ENABLE_PIN       -1
-#define Z_STOP_PIN          59
-
-#define E0_STEP_PIN         65
-#define E0_DIR_PIN          66
-#define E0_ENABLE_PIN      -1
-
-#define SDPOWER            -1
-#define SDSS               53
-#define LED_PIN            -1
-#define FAN_PIN            -1
-#define PS_ON_PIN           9
-#define KILL_PIN           -1
-
-#define HEATER_0_PIN        13
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-#define TEMP_0_PIN          6   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-#define TEMP_1_PIN         -1   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-#define TEMP_2_PIN         -1   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-#define HEATER_BED_PIN      4
-#define TEMP_BED_PIN       10
-
-#endif // 99
-
-/****************************************************************************************
-* Sethi 3D_1 pin assignment - www.sethi3d.com.br
-*
-****************************************************************************************/
-
-#if MB(SETHI)
-#define KNOWN_BOARD
-
-#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
-#error Oops! Make sure you have 'Sethi 3D' selected from the 'Tools -> Boards' menu.
-
-#endif
-
-#ifndef GEN7_VERSION
-#define GEN7_VERSION 12 // v1.x
-#endif
-
-//x axis pins
-#define X_STEP_PIN 19
-#define X_DIR_PIN 18
-#define X_ENABLE_PIN 24
-#define X_STOP_PIN 2
-
-//y axis pins
-#define Y_STEP_PIN 23
-#define Y_DIR_PIN 22
-#define Y_ENABLE_PIN 24
-#define Y_STOP_PIN 0
-
-//z axis pins
-#define Z_STEP_PIN 26
-#define Z_DIR_PIN 25
-#define Z_ENABLE_PIN 24
-#define Z_MIN_PIN 1
-#define Z_MAX_PIN 0
-
-//extruder pins
-#define E0_STEP_PIN 28
-#define E0_DIR_PIN 27
-#define E0_ENABLE_PIN 24
-
-#define TEMP_0_PIN 1
-#define TEMP_1_PIN -1
-#define TEMP_2_PIN -1
-#define TEMP_BED_PIN 2
-
-#define HEATER_0_PIN 4
-#define HEATER_1_PIN -1
-#define HEATER_2_PIN -1
-#define HEATER_BED_PIN 3
-
-#define KILL_PIN -1
-
-#define SDPOWER -1
-#define SDSS -1 // SCL pin of I2C header
-#define LED_PIN -1
-
-#if (GEN7_VERSION >= 13)
-// Gen7 v1.3 removed the fan pin
-#define FAN_PIN -1
-#else
-#define FAN_PIN 31
-#endif
-#define PS_ON_PIN 15
-
-//All these generations of Gen7 supply thermistor power
-//via PS_ON, so ignore bad thermistor readings
-#define BOGUS_TEMPERATURE_FAILSAFE_OVERRIDE
-
-//our pin for debugging.
-#define DEBUG_PIN 0
-
-//our RS485 pins
-#define TX_ENABLE_PIN 12
-#define RX_ENABLE_PIN 13
-
-#endif // SETHI
-
-/****************************************************************************************
-* Gen7 v1.1, v1.2, v1.3 pin assignment
-*
-****************************************************************************************/
-
-
-#if MB(GEN7_13)
-#define MOTHERBOARD BOARD_GEN7_12
-#define GEN7_VERSION 13 // v1.3
-#endif
-
-#if MB(GEN7_12)
-#define KNOWN_BOARD
-
-#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
-#error Oops! Make sure you have 'Gen7' selected from the 'Tools -> Boards' menu.
-
-#endif
-
-#ifndef GEN7_VERSION
-#define GEN7_VERSION 12 // v1.x
-#endif
-
-//x axis pins
-#define X_STEP_PIN 19
-#define X_DIR_PIN 18
-#define X_ENABLE_PIN 24
-#define X_STOP_PIN 7
-
-//y axis pins
-#define Y_STEP_PIN 23
-#define Y_DIR_PIN 22
-#define Y_ENABLE_PIN 24
-#define Y_STOP_PIN 5
-
-//z axis pins
-#define Z_STEP_PIN 26
-#define Z_DIR_PIN 25
-#define Z_ENABLE_PIN 24
-#define Z_MIN_PIN 1
-#define Z_MAX_PIN 0
-
-//extruder pins
-#define E0_STEP_PIN 28
-#define E0_DIR_PIN 27
-#define E0_ENABLE_PIN 24
-
-#define TEMP_0_PIN 1
-#define TEMP_1_PIN -1
-#define TEMP_2_PIN -1
-#define TEMP_BED_PIN 2
-
-#define HEATER_0_PIN 4
-#define HEATER_1_PIN -1
-#define HEATER_2_PIN -1
-#define HEATER_BED_PIN 3
-
-#define KILL_PIN -1
-
-#define SDPOWER -1
-#define SDSS -1 // SCL pin of I2C header
-#define LED_PIN -1
-
-#if (GEN7_VERSION >= 13)
-// Gen7 v1.3 removed the fan pin
-#define FAN_PIN -1
-#else
-#define FAN_PIN 31
-#endif
-#define PS_ON_PIN 15
-
-//All these generations of Gen7 supply thermistor power
-//via PS_ON, so ignore bad thermistor readings
-#define BOGUS_TEMPERATURE_FAILSAFE_OVERRIDE
-
-//our pin for debugging.
-#define DEBUG_PIN 0
-
-//our RS485 pins
-#define TX_ENABLE_PIN 12
-#define RX_ENABLE_PIN 13
-
-#endif
-
-/****************************************************************************************
-* Gen7 v1.4 pin assignment
-*
-****************************************************************************************/
-
-#if MB(GEN7_14)
-#define GEN7_VERSION 14 // v1.4
-#endif
-
-#if MB(GEN7_14)
-#define KNOWN_BOARD
-
-#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
-#error Oops! Make sure you have 'Gen7' selected from the 'Tools -> Boards' menu.
-
-#endif
-
-#ifndef GEN7_VERSION
-#define GEN7_VERSION 14 // v1.x
-#endif
-
-//x axis pins
-#define X_STEP_PIN 29
-#define X_DIR_PIN 28
-#define X_ENABLE_PIN 25
-#define X_STOP_PIN 0
-
-//y axis pins
-#define Y_STEP_PIN 27
-#define Y_DIR_PIN 26
-#define Y_ENABLE_PIN 25
-#define Y_STOP_PIN 1
-
-//z axis pins
-#define Z_STEP_PIN 23
-#define Z_DIR_PIN 22
-#define Z_ENABLE_PIN 25
-#define Z_STOP_PIN 2
-
-//extruder pins
-#define E0_STEP_PIN 19
-#define E0_DIR_PIN 18
-#define E0_ENABLE_PIN 25
-
-#define TEMP_0_PIN 1
-#define TEMP_1_PIN -1
-#define TEMP_2_PIN -1
-#define TEMP_BED_PIN 0
-
-#define HEATER_0_PIN 4
-#define HEATER_1_PIN -1
-#define HEATER_2_PIN -1
-#define HEATER_BED_PIN 3
-
-#define KILL_PIN -1
-
-#define SDPOWER -1
-#define SDSS -1 // SCL pin of I2C header
-#define LED_PIN -1
-
-#define FAN_PIN -1
-
-#define PS_ON_PIN 15
-
-//our pin for debugging.
-#define DEBUG_PIN 0
-
-//our RS485 pins
-#define TX_ENABLE_PIN 12
-#define RX_ENABLE_PIN 13
-
-#endif // GEN7
-
-/******************************************************************************
-* Gen7 Alfons3  pin assignment
-*
-******************************************************************************/
-/* These Pins are assigned for the modified GEN7 Board from Alfons3 Please review the pins and adjust it for your needs*/
-
-#if MB(GEN7_CUSTOM)
-#define KNOWN_BOARD
-
-#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
-    #error Oops!  Make sure you have 'Gen7' selected from the 'Tools -> Boards' menu.
-#endif
-
-//x axis pins
-    #define X_STEP_PIN      21                  // different from standard GEN7
-    #define X_DIR_PIN       20                  // different from standard GEN7
-    #define X_ENABLE_PIN    24
-    #define X_STOP_PIN      0
-
-    //y axis pins
-    #define Y_STEP_PIN      23
-    #define Y_DIR_PIN       22
-    #define Y_ENABLE_PIN    24
-    #define Y_STOP_PIN      1
-
-    //z axis pins
-    #define Z_STEP_PIN      26
-    #define Z_DIR_PIN       25
-    #define Z_ENABLE_PIN    24
-    #define Z_STOP_PIN      2
-
-    //extruder pins
-    #define E0_STEP_PIN      28
-    #define E0_DIR_PIN       27
-    #define E0_ENABLE_PIN    24
-
-    #define TEMP_0_PIN      2
-    #define TEMP_1_PIN      -1
-    #define TEMP_2_PIN      -1
-    #define TEMP_BED_PIN        1   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 34 bed)
-
-    #define HEATER_0_PIN    4
-    #define HEATER_1_PIN    -1
-    #define HEATER_2_PIN    -1
-    #define HEATER_BED_PIN      3  // (bed)
-
-    #define SDPOWER         -1
-    #define SDSS            31                  // SCL pin of I2C header || CS Pin for SD Card support
-    #define LED_PIN         -1
-
-    #define FAN_PIN         -1
-    #define PS_ON_PIN       19
-    //our pin for debugging.
-
-    #define DEBUG_PIN        -1
-
-    //our RS485 pins
-    //#define TX_ENABLE_PIN       12
-    //#define RX_ENABLE_PIN       13
-
-    #define BEEPER -1
-    #define SDCARDDETECT -1
-    #define SUICIDE_PIN -1    //has to be defined; otherwise Power_off doesn't work
-
-    #define KILL_PIN -1
-    //Pins for 4bit LCD Support
-    #define LCD_PINS_RS 18
-    #define LCD_PINS_ENABLE 17
-    #define LCD_PINS_D4 16
-    #define LCD_PINS_D5 15
-    #define LCD_PINS_D6 13
-    #define LCD_PINS_D7 14
-
-     //buttons are directly attached
-    #define BTN_EN1 11
-    #define BTN_EN2 10
-    #define BTN_ENC 12  //the click
-
-#endif // GEN7_CUSTOM
-
-/****************************************************************************************
-* Arduino Mega pin assignment
-*
-****************************************************************************************/
-#if IS_RAMPS || MB(3DRAG) || MB(K8200) || MB(AZTEEG_X3) || MB(AZTEEG_X3_PRO)
-#define KNOWN_BOARD 1
-
-//////////////////FIX THIS//////////////
-#ifndef __AVR_ATmega1280__
- #ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
- #endif
-#endif
-
-
-// uncomment one of the following lines for RAMPS v1.3 or v1.0, comment both for v1.2 or 1.1
-// #define RAMPS_V_1_3
-// #define RAMPS_V_1_0
-
-
-#if (IS_RAMPS && !MB(RAMPS_OLD)) || MB(3DRAG) || MB(K8200) || MB(AZTEEG_X3) || MB(AZTEEG_X3_PRO)
-
-  #define LARGE_FLASH true
-
-  #if MB(3DRAG) || MB(K8200)
-    #define X_STEP_PIN         54
-    #define X_DIR_PIN          55
-    #define X_ENABLE_PIN       38
-    #define X_MIN_PIN           3
-    #define X_MAX_PIN           -1   //2 //Max endstops default to disabled "-1", set to commented value to enable.
-
-    #define Y_STEP_PIN         60
-    #define Y_DIR_PIN          61
-    #define Y_ENABLE_PIN       56
-    #define Y_MIN_PIN          14
-    #define Y_MAX_PIN          -1   //15
-
-    #define Z_STEP_PIN         46
-    #define Z_DIR_PIN          48
-    #define Z_ENABLE_PIN       63
-    #define Z_MIN_PIN          18
-    #define Z_MAX_PIN          -1
-
-    #define Y2_STEP_PIN        36
-    #define Y2_DIR_PIN         34
-    #define Y2_ENABLE_PIN      30
-
-    #define Z2_STEP_PIN        36
-    #define Z2_DIR_PIN         34
-    #define Z2_ENABLE_PIN      30
-
-    #define E0_STEP_PIN        26
-    #define E0_DIR_PIN         28
-    #define E0_ENABLE_PIN      24
-
-    #define E1_STEP_PIN        36
-    #define E1_DIR_PIN         34
-    #define E1_ENABLE_PIN      30
-
-    #define SDPOWER            -1
-    #define SDSS               25//53
-    #define LED_PIN            13
-
-    #define BEEPER             33
-
-  #else
-
-    #define X_STEP_PIN         54
-    #define X_DIR_PIN          55
-    #define X_ENABLE_PIN       38
-    #define X_MIN_PIN           3
-    #define X_MAX_PIN           2
-
-    #define Y_STEP_PIN         60
-    #define Y_DIR_PIN          61
-    #define Y_ENABLE_PIN       56
-    #define Y_MIN_PIN          14
-    #define Y_MAX_PIN          15
-
-    #define Z_STEP_PIN         46
-    #define Z_DIR_PIN          48
-    #define Z_ENABLE_PIN       62
-    #define Z_MIN_PIN          18
-    #define Z_MAX_PIN          19
-
-    #define Y2_STEP_PIN        36
-    #define Y2_DIR_PIN         34
-    #define Y2_ENABLE_PIN      30
-
-    #define Z2_STEP_PIN        36
-    #define Z2_DIR_PIN         34
-    #define Z2_ENABLE_PIN      30
-
-    #define E0_STEP_PIN        26
-    #define E0_DIR_PIN         28
-    #define E0_ENABLE_PIN      24
-
-    #define E1_STEP_PIN        36
-    #define E1_DIR_PIN         34
-    #define E1_ENABLE_PIN      30
-
-#if MB(RAMPS_13_EEB)  //FMM added for Filament Extruder
-#ifdef FILAMENT_SENSOR
-    //define analog pin for the filament width sensor input
-    //Use the RAMPS 1.4 Analog input 5 on the AUX2 connector
-      #define FILWIDTH_PIN        5
-#endif
-#endif
-
-
-    #if MB(AZTEEG_X3_PRO)
-      #define E2_STEP_PIN        23
-      #define E2_DIR_PIN         25
-      #define E2_ENABLE_PIN      40
-
-      #define E3_STEP_PIN        27
-      #define E3_DIR_PIN         29
-      #define E3_ENABLE_PIN      41
-
-      #define E4_STEP_PIN        43
-      #define E4_DIR_PIN         37
-      #define E4_ENABLE_PIN      42
-    #endif
-
-    #define SDPOWER            -1
-    #define SDSS               53
-    #define LED_PIN            13
-  #endif
-
-  #if MB(RAMPS_13_EFB) || MB(RAMPS_13_EFF) || MB(AZTEEG_X3) || MB(AZTEEG_X3_PRO)
-    #define FAN_PIN            9 // (Sprinter config)
-  #else
-    #define FAN_PIN            4 // IO pin. Buffer needed
-  #endif
-
-  #if MB(3DRAG) || MB(K8200) || MB(RAMPS_13_EEF)
-    #define FAN_PIN            8
-  #endif
-
-  #if MB(RAMPS_13_EFF)
-    #define CONTROLLERFAN_PIN  -1 //Pin used for the fan to cool controller
-  #endif
-
-  #define PS_ON_PIN          12
-
-  #if defined(REPRAP_DISCOUNT_SMART_CONTROLLER) || defined(G3D_PANEL)
-    #define KILL_PIN           41
-  #else
-    #define KILL_PIN           -1
-  #endif
-
-  #if MB(RAMPS_13_EFF)
-    #define HEATER_0_PIN       8
-  #else
-    #define HEATER_0_PIN       10   // EXTRUDER 1
-  #endif
-
-  #if MB(RAMPS_13_EFB) || MB(AZTEEG_X3)
-    #define HEATER_1_PIN       -1
-  #else
-    #define HEATER_1_PIN       9    // EXTRUDER 2 (FAN On Sprinter)
-  #endif
-
-
-  #if MB(3DRAG) || MB(K8200)
-    #define HEATER_0_PIN       10
-    #define HEATER_1_PIN       12
-    #define HEATER_2_PIN       6
-  #elif MB(AZTEEG_X3_PRO)
-    #define HEATER_2_PIN       16
-    #define HEATER_3_PIN       17
-    #define HEATER_4_PIN       4
-    #define HEATER_5_PIN       5
-    #define HEATER_6_PIN       6
-    #define HEATER_7_PIN       11
-  #else
-    #define HEATER_2_PIN       -1
-  #endif
-
-  #define TEMP_0_PIN         13   // ANALOG NUMBERING
-  #define TEMP_1_PIN         15   // ANALOG NUMBERING
-  #if MB(AZTEEG_X3_PRO)
-    #define TEMP_2_PIN         12   // ANALOG NUMBERING
-    #define TEMP_3_PIN         11   // ANALOG NUMBERING
-    #define TEMP_4_PIN         10   // ANALOG NUMBERING
-    #define TC1                4    // ANALOG NUMBERING Thermo couple on Azteeg X3Pro
-    #define TC2                5    // ANALOG NUMBERING Thermo couple on Azteeg X3Pro
-  #else
-    #define TEMP_2_PIN         -1   // ANALOG NUMBERING
-  #endif
-
-  #if MB(RAMPS_13_EFF) || MB(RAMPS_13_EEF)
-    #define HEATER_BED_PIN     -1    // NO BED
-  #else
-    #if MB(3DRAG) || MB(K8200)
-      #define HEATER_BED_PIN     9    // BED
-    #else
-      #define HEATER_BED_PIN     8    // BED
-    #endif
-  #endif
-
-  #define TEMP_BED_PIN       14   // ANALOG NUMBERING
-
-  #ifdef NUM_SERVOS
-    #define SERVO0_PIN         11
-
-    #if NUM_SERVOS > 1
-      #define SERVO1_PIN         6
-    #endif
-
-    #if NUM_SERVOS > 2
-      #define SERVO2_PIN         5
-    #endif
-
-    #if NUM_SERVOS > 3
-      #define SERVO3_PIN         4
-    #endif
-  #endif
-
-  #if MB(AZTEEG_X3_PRO)
-    #define BEEPER 33
-  #endif
-
-  #ifdef TEMP_STAT_LEDS
-    #if MB(AZTEEG_X3)
-      #define STAT_LED_RED       6
-      #define STAT_LED_BLUE     11
-    #endif
-  #endif
-
-  #ifdef ULTRA_LCD
-
-    #ifdef NEWPANEL
-      #define LCD_PINS_RS 16
-      #define LCD_PINS_ENABLE 17
-      #define LCD_PINS_D4 23
-      #define LCD_PINS_D5 25
-      #define LCD_PINS_D6 27
-      #define LCD_PINS_D7 29
-
-      #ifdef REPRAP_DISCOUNT_SMART_CONTROLLER
-        #define BEEPER 37
-
-        #define BTN_EN1 31
-        #define BTN_EN2 33
-        #define BTN_ENC 35
-
-        #define SDCARDDETECT 49
-      #elif defined(LCD_I2C_PANELOLU2)
-        #define BTN_EN1 47  //reverse if the encoder turns the wrong way.
-        #define BTN_EN2 43
-        #define BTN_ENC 32
-        #define LCD_SDSS 53
-        #define SDCARDDETECT -1
-        #define KILL_PIN 41
-      #elif defined(LCD_I2C_VIKI)
-        #define BTN_EN1 22  //reverse if the encoder turns the wrong way.
-        #define BTN_EN2 7
-        #define BTN_ENC -1
-        #define LCD_SDSS 53
-        #define SDCARDDETECT 49
-      #else
-        //arduino pin which triggers an piezzo beeper
-        #define BEEPER 33  // Beeper on AUX-4
-
-        //buttons are directly attached using AUX-2
-        #ifdef REPRAPWORLD_KEYPAD
-          #define BTN_EN1 64 // encoder
-          #define BTN_EN2 59 // encoder
-          #define BTN_ENC 63 // enter button
-          #define SHIFT_OUT 40 // shift register
-          #define SHIFT_CLK 44 // shift register
-          #define SHIFT_LD 42 // shift register
-        #else
-          #define BTN_EN1 37
-          #define BTN_EN2 35
-          #define BTN_ENC 31  //the click
-        #endif
-
-        #ifdef G3D_PANEL
-          #define SDCARDDETECT 49
-        #else
-          #define SDCARDDETECT -1  // Ramps does not use this port
-        #endif
-
-      #endif
-
-      #if MB(3DRAG) || MB(K8200)
-        #define BEEPER -1
-
-        #define LCD_PINS_RS 27
-        #define LCD_PINS_ENABLE 29
-        #define LCD_PINS_D4 37
-        #define LCD_PINS_D5 35
-        #define LCD_PINS_D6 33
-        #define LCD_PINS_D7 31
-
-       //buttons
-       #define BTN_EN1 16
-       #define BTN_EN2 17
-       #define BTN_ENC 23 //the click
-
-    #endif
-    #else //old style panel with shift register
-      //arduino pin witch triggers an piezzo beeper
-      #define BEEPER 33   //No Beeper added
-
-      //buttons are attached to a shift register
-  // Not wired this yet
-      //#define SHIFT_CLK 38
-      //#define SHIFT_LD 42
-      //#define SHIFT_OUT 40
-      //#define SHIFT_EN 17
-
-      #define LCD_PINS_RS 16
-      #define LCD_PINS_ENABLE 17
-      #define LCD_PINS_D4 23
-      #define LCD_PINS_D5 25
-      #define LCD_PINS_D6 27
-      #define LCD_PINS_D7 29
-    #endif
-  #endif //ULTRA_LCD
-
-#else // RAMPS_V_1_1 or RAMPS_V_1_2 as default (BOARD_RAMPS_OLD)
-
-#define X_STEP_PIN         26
-#define X_DIR_PIN          28
-#define X_ENABLE_PIN       24
-#define X_MIN_PIN           3
-#define X_MAX_PIN          -1    //2
-
-#define Y_STEP_PIN         38
-#define Y_DIR_PIN          40
-#define Y_ENABLE_PIN       36
-#define Y_MIN_PIN          16
-#define Y_MAX_PIN          -1    //17
-
-#define Z_STEP_PIN         44
-#define Z_DIR_PIN          46
-#define Z_ENABLE_PIN       42
-#define Z_MIN_PIN          18
-#define Z_MAX_PIN          -1    //19
-
-#define E0_STEP_PIN         32
-#define E0_DIR_PIN          34
-#define E0_ENABLE_PIN       30
-
-#define SDPOWER            48
-#define SDSS               53
-#define LED_PIN            13
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-
-#ifdef RAMPS_V_1_0 // RAMPS_V_1_0
-  #define HEATER_0_PIN     12    // RAMPS 1.0
-  #define HEATER_BED_PIN   -1    // RAMPS 1.0
-  #define FAN_PIN          11    // RAMPS 1.0
-#else // RAMPS_V_1_1 or RAMPS_V_1_2
-  #define HEATER_0_PIN     10    // RAMPS 1.1
-  #define HEATER_BED_PIN    8    // RAMPS 1.1
-  #define FAN_PIN           9    // RAMPS 1.1
-#endif
-#define HEATER_1_PIN        -1
-#define HEATER_2_PIN        -1
-#define TEMP_0_PIN          2    // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-#define TEMP_1_PIN          -1
-#define TEMP_2_PIN          -1
-#define TEMP_BED_PIN        1    // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-
-#endif // RAMPS_13_EFB || RAMPS_13_EEB || RAMPS_13_EFF || 3DRAG || K8200
-
-// SPI for Max6675 Thermocouple
-
-#ifndef SDSUPPORT
-// these pins are defined in the SD library if building with SD support
-  #define SCK_PIN          52
-  #define MISO_PIN         50
-  #define MOSI_PIN         51
-  #define MAX6675_SS       66// Do not use pin 53 if there is even the remote possibility of using Display/SD card
-#else
-  #define MAX6675_SS       66// Do not use pin 49 as this is tied to the switch inside the SD card socket to detect if there is an SD card present
-#endif
-
-#endif // RAMPS_OLD || RAMPS_13_EFB || RAMPS_13_EEB || RAMPS_13_EFF || 3DRAG || K8200
-
-/****************************************************************************************
-* Duemilanove w/ ATMega328P pin assignment
-*
-****************************************************************************************/
-#if MB(DUEMILANOVE_328P)
-#define KNOWN_BOARD 1
-
-#ifndef __AVR_ATmega328P__
-#error Oops!  Make sure you have 'Arduino Duemilanove w/ ATMega328' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define X_STEP_PIN         19
-#define X_DIR_PIN          18
-#define X_ENABLE_PIN       -1
-#define X_STOP_PIN         17
-
-#define Y_STEP_PIN         10
-#define Y_DIR_PIN           7
-#define Y_ENABLE_PIN       -1
-#define Y_STOP_PIN          8
-
-#define Z_STEP_PIN         13
-#define Z_DIR_PIN           3
-#define Z_ENABLE_PIN        2
-#define Z_STOP_PIN          4
-
-#define E0_STEP_PIN         11
-#define E0_DIR_PIN          12
-#define E0_ENABLE_PIN       -1
-
-#define SDPOWER          -1
-#define SDSS          -1
-#define LED_PIN            -1
-#define FAN_PIN             5
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-
-#define HEATER_0_PIN        6
-#define HEATER_1_PIN        -1
-#define HEATER_2_PIN        -1
-#define TEMP_0_PIN          0    // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-#define TEMP_1_PIN          -1
-#define TEMP_2_PIN          -1
-#define HEATER_BED_PIN      -1
-#define TEMP_BED_PIN        -1
-
-#endif // DUEMILANOVE_328P
-
-/****************************************************************************************
-* Elefu RA Board Pin Assignments
-*
-****************************************************************************************/
-#if MB(ELEFU_3)
-#define KNOWN_BOARD 1
-
-#ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
-#endif
-
-
-#define X_STEP_PIN         49
-#define X_DIR_PIN          13
-#define X_ENABLE_PIN       48
-#define X_MIN_PIN          35
-#define X_MAX_PIN          -1 //34
-
-#define Y_STEP_PIN         11
-#define Y_DIR_PIN          9
-#define Y_ENABLE_PIN       12
-#define Y_MIN_PIN          33
-#define Y_MAX_PIN          -1 //32
-
-#define Z_STEP_PIN         7
-#define Z_DIR_PIN          6
-#define Z_ENABLE_PIN       8
-#define Z_MIN_PIN          31
-#define Z_MAX_PIN          -1 //30
-
-#define E2_STEP_PIN        43
-#define E2_DIR_PIN         47
-#define E2_ENABLE_PIN      42
-
-#define E1_STEP_PIN        18
-#define E1_DIR_PIN         19
-#define E1_ENABLE_PIN      38
-
-#define E0_STEP_PIN        40
-#define E0_DIR_PIN         41
-#define E0_ENABLE_PIN      37
-
-#define SDPOWER            -1
-#define LED_PIN            -1 //Use +12V Aux port for LED Ring
-
-#define FAN_PIN            16 //5V PWM
-
-#define PS_ON_PIN          10 //Set to -1 if using a manual switch on the PWRSW Connector
-#define SLEEP_WAKE_PIN     26 //This feature still needs work
-
-#define HEATER_0_PIN       45 //12V PWM1
-#define HEATER_1_PIN       46 //12V PWM2
-#define HEATER_2_PIN       17 //12V PWM3
-#define HEATER_BED_PIN     44 //DOUBLE 12V PWM
-#define TEMP_0_PIN         3  //ANALOG NUMBERING
-#define TEMP_1_PIN         2  //ANALOG NUMBERING
-#define TEMP_2_PIN         1  //ANALOG NUMBERING
-#define TEMP_BED_PIN       0  //ANALOG NUMBERING
-
-#define BEEPER             36
-
-#define KILL_PIN           -1
-
-// M240  Triggers a camera by emulating a Canon RC-1 Remote
-// Data from: http://www.doc-diy.net/photo/rc-1_hacked/
-#define PHOTOGRAPH_PIN     29
-
-#ifdef RA_CONTROL_PANEL
-
-  #define SDSS             53
-  #define SDCARDDETECT     28
-
-  #define BTN_EN1          14
-  #define BTN_EN2          39
-  #define BTN_ENC          15  //the click
-
-  #define BLEN_C           2
-  #define BLEN_B           1
-  #define BLEN_A           0
-
-  //encoder rotation values
-  #define encrot0          0
-  #define encrot1          2
-  #define encrot2          3
-  #define encrot3          1
-
-#endif //RA_CONTROL_PANEL
-
-#ifdef RA_DISCO
-  //variables for which pins the TLC5947 is using
-  #define TLC_CLOCK_PIN    25
-  #define TLC_BLANK_PIN    23
-  #define TLC_XLAT_PIN     22
-  #define TLC_DATA_PIN     24
-
-  //We also need to define pin to port number mapping for the 2560 to match the pins listed above. If you change the TLC pins, update this as well per the 2560 datasheet!
-  //This currently only works with the RA Board.
-  #define TLC_CLOCK_BIT 3 //bit 3 on port A
-  #define TLC_CLOCK_PORT &PORTA //bit 3 on port A
-
-  #define TLC_BLANK_BIT 1 //bit 1 on port A
-  #define TLC_BLANK_PORT &PORTA //bit 1 on port A
-
-  #define TLC_DATA_BIT 2 //bit 2 on port A
-  #define TLC_DATA_PORT &PORTA //bit 2 on port A
-
-  #define TLC_XLAT_BIT 0 //bit 0 on port A
-  #define TLC_XLAT_PORT &PORTA //bit 0 on port A
-
-  //change this to match your situation. Lots of TLCs takes up the arduino SRAM very quickly, so be careful
-  //Leave it at at least 1 if you have enabled RA_LIGHTING
-  //The number of TLC5947 boards chained together for use with the animation, additional ones will repeat the animation on them, but are not individually addressable and mimic those before them. You can leave the default at 2 even if you only have 1 TLC5947 module.
-  #define NUM_TLCS 2
-
-  //These TRANS_ARRAY values let you change the order the LEDs on the lighting modules will animate for chase functions.
-  //Modify them according to your specific situation.
-  //NOTE: the array should be 8 long for every TLC you have. These defaults assume (2) TLCs.
-  #define TRANS_ARRAY {0, 1, 2, 3, 4, 5, 6, 7, 15, 14, 13, 12, 11, 10, 9, 8} //forwards
-  //#define TRANS_ARRAY {7, 6, 5, 4, 3, 2, 1, 0, 8, 9, 10, 11, 12, 13, 14, 15} //backwards
-#endif //RA_LIGHTING
-
-
-#endif // ELEFU_3
-
-
-/****************************************************************************************
-* Gen6 pin assignment
-*
-****************************************************************************************/
-#if MB(GEN6) || MB(GEN6_DELUXE)
-#define KNOWN_BOARD 1
-
-#ifndef __AVR_ATmega644P__
-#ifndef __AVR_ATmega1284P__
-#error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
-#endif
-#endif
-
-//x axis pins
-    #define X_STEP_PIN      15
-    #define X_DIR_PIN       18
-    #define X_ENABLE_PIN    19
-    #define X_STOP_PIN      20
-
-    //y axis pins
-    #define Y_STEP_PIN      23
-    #define Y_DIR_PIN       22
-    #define Y_ENABLE_PIN    24
-    #define Y_STOP_PIN      25
-
-    //z axis pins
-    #define Z_STEP_PIN      27
-    #define Z_DIR_PIN       28
-    #define Z_ENABLE_PIN    29
-    #define Z_STOP_PIN      30
-
-    //extruder pins
-    #define E0_STEP_PIN      4    //Edited @ EJE Electronics 20100715
-    #define E0_DIR_PIN       2    //Edited @ EJE Electronics 20100715
-    #define E0_ENABLE_PIN    3    //Added @ EJE Electronics 20100715
-    #define TEMP_0_PIN      5     //changed @ rkoeppl 20110410
-    #define TEMP_1_PIN      -1    //changed @ rkoeppl 20110410
-
-
-    #define TEMP_2_PIN      -1    //changed @ rkoeppl 20110410
-    #define HEATER_0_PIN    14    //changed @ rkoeppl 20110410
-    #define HEATER_1_PIN    -1
-    #define HEATER_2_PIN    -1
-    #if MB(GEN6)
-    #define HEATER_BED_PIN  -1    //changed @ rkoeppl 20110410
-    #define TEMP_BED_PIN    -1    //changed @ rkoeppl 20110410
-    #else
-    #define HEATER_BED_PIN   1    //changed @ rkoeppl 20110410
-    #define TEMP_BED_PIN     0    //changed @ rkoeppl 20110410
-    #endif
-    #define SDPOWER          -1
-    #define SDSS          17
-    #define LED_PIN         -1    //changed @ rkoeppl 20110410
-    #define FAN_PIN         -1    //changed @ rkoeppl 20110410
-    #define PS_ON_PIN       -1    //changed @ rkoeppl 20110410
-    #define KILL_PIN        -1    //changed @ drakelive 20120830
-    //our pin for debugging.
-
-    #define DEBUG_PIN        0
-
-    //our RS485 pins
-    #define TX_ENABLE_PIN 12
-    #define RX_ENABLE_PIN 13
-
-#endif // GEN6 || GEN6_DELUXE
-
-/****************************************************************************************
-* Sanguinololu pin assignment
-*
-****************************************************************************************/
-#if MB(STB_11)
-#define STB
-#endif
-#if MB(MELZI) || MB(MELZI_1284)
-#define MELZI
-#endif
-#if MB(AZTEEG_X1)
-#define AZTEEG_X1
-#endif
-#if MB(SANGUINOLOLU_12) || MB(MELZI) || MB(STB_11) || MB(AZTEEG_X1) || MB(MELZI_1284)
-#undef MOTHERBOARD
-#define MOTHERBOARD BOARD_SANGUINOLOLU_11
-#define SANGUINOLOLU_V_1_2
-
-#if defined(__AVR_ATmega1284P__)
-  #define LARGE_FLASH true
-#endif
-#endif
-
-#if MB(SANGUINOLOLU_11)
-#define KNOWN_BOARD 1
-#ifndef __AVR_ATmega644P__
-#ifndef __AVR_ATmega1284P__
-#error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
-#endif
-#endif
-
-#define X_STEP_PIN         15
-#define X_DIR_PIN          21
-#define X_STOP_PIN         18
-
-#define Y_STEP_PIN         22
-#define Y_DIR_PIN          23
-#define Y_STOP_PIN         19
-
-#define Z_STEP_PIN         3
-#define Z_DIR_PIN          2
-#define Z_STOP_PIN         20
-
-#define E0_STEP_PIN         1
-#define E0_DIR_PIN          0
-
-#define LED_PIN            -1
-
-#define FAN_PIN            -1
- #if FAN_PIN == 12 || FAN_PIN ==13
-  #define FAN_SOFT_PWM
-#endif
-
-#ifdef MELZI
- #define LED_PIN            27 /* On some broken versions of the Sanguino libraries the pin definitions are wrong, which then needs LED_PIN as pin 28. But you better upgrade your Sanguino libraries! See #368. */
- #define FAN_PIN            4 // Works for Panelolu2 too
-#endif
-
-#ifdef STB
- #define FAN_PIN            4
-  //  Uncomment this if you have the first generation (V1.10) of STBs board
- #define LCD_PIN_BL         17 // LCD backlight LED
-#endif
-
-#ifdef AZTEEG_X1
- #define FAN_PIN            4
-#endif
-
-#ifdef NUM_SERVOS
-  #define SERVO0_PIN          -1
-
-  #if NUM_SERVOS > 1
-    #define SERVO1_PIN        -1
-  #endif
-
-  #if NUM_SERVOS > 2
-    #define SERVO2_PIN        -1
-  #endif
-
-  #if NUM_SERVOS > 3
-    #define SERVO3_PIN        -1
-  #endif
-#endif
-
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-
-#define HEATER_0_PIN       13 // (extruder)
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-
-#ifdef SANGUINOLOLU_V_1_2
-
- #define HEATER_BED_PIN     12 // (bed)
- #define X_ENABLE_PIN       14
- #define Y_ENABLE_PIN       14
- #define Z_ENABLE_PIN       26
- #define E0_ENABLE_PIN      14
-
- #ifdef LCD_I2C_PANELOLU2
-   #define FAN_PIN          4 // Uses Transistor1 (PWM) on Panelolu2's Sanguino Adapter Board to drive the fan
- #endif
-
-#else
-
-#define HEATER_BED_PIN      14  // (bed)
-#define X_ENABLE_PIN       -1
-#define Y_ENABLE_PIN       -1
-#define Z_ENABLE_PIN       -1
-#define E0_ENABLE_PIN      -1
-
-#endif
-
-#define TEMP_0_PIN          7   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 33 extruder)
-#define TEMP_1_PIN         -1
-#define TEMP_2_PIN         -1
-#define TEMP_BED_PIN        6   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 34 bed)
-#define SDPOWER            -1
-#define SDSS               31
-
-/* On some broken versions of the Sanguino libraries the pin definitions are wrong, which then needs SDSS as pin 24. But you better upgrade your Sanguino libraries! See #368. */
-//#define SDSS               24
-
- #ifdef ULTRA_LCD
-   #ifdef NEWPANEL
-     //we have no buzzer installed
-     #define BEEPER -1
-     //LCD Pins
-     #ifdef DOGLCD
-	   #ifdef U8GLIB_ST7920 //SPI GLCD 12864 ST7920 ( like [www.digole.com] ) For Melzi V2.0
-	  	 #define LCD_PINS_RS 30 //CS chip select /SS chip slave select
-	  	 #define LCD_PINS_ENABLE 29 //SID (MOSI)
-	  	 #define LCD_PINS_D4 17 //SCK (CLK) clock
-	  	 #define BEEPER 27 // Pin 27 is take by LED_Pin, but Melzi LED do nothing with Marlin and I take this pin for BEEPER.... See here > [github.com] , If you want use this pin with Gcode M42 instead BEEPER
-	   #else
-	  	 // Pins for DOGM SPI LCD Support
-	  	 #define DOGLCD_A0 30
-	  	 #define DOGLCD_CS 29
-	  	 #define LCD_CONTRAST 1
-	   #endif
-       // Uncomment screen orientation
-       #define LCD_SCREEN_ROT_0
-         // #define LCD_SCREEN_ROT_90
-         // #define LCD_SCREEN_ROT_180
-         // #define LCD_SCREEN_ROT_270
-       #else // standard Hitachi LCD controller
-       #define LCD_PINS_RS        4
-       #define LCD_PINS_ENABLE    17
-       #define LCD_PINS_D4        30
-       #define LCD_PINS_D5        29
-       #define LCD_PINS_D6        28
-       #define LCD_PINS_D7        27
-     #endif
-     //The encoder and click button
-     #define BTN_EN1 11
-     #define BTN_EN2 10
-     #ifdef LCD_I2C_PANELOLU2
-       #ifdef MELZI
-         #define BTN_ENC 29 //the click switch
-         #define LCD_SDSS 30 //to use the SD card reader on the Panelolu2 rather than the melzi board
-       #else
-         #define BTN_ENC 30 //the click switch
-       #endif
-     #else
-       #define BTN_ENC 16  //the click switch
-       #define LCD_SDSS 28 //to use the SD card reader on the smart controller rather than the melzi board
-     #endif //Panelolu2
-     //not connected to a pin
-     #define SDCARDDETECT -1
-
-   #endif //Newpanel
- #endif //Ultipanel
-
- #ifdef MAKRPANEL
-     #define BEEPER 29
-     // Pins for DOGM SPI LCD Support
-     #define DOGLCD_A0  30
-     #define DOGLCD_CS  17
-     #define LCD_PIN_BL 28  // backlight LED on PA3
-     // GLCD features
-     #define LCD_CONTRAST 1
-     // Uncomment screen orientation
-     #define LCD_SCREEN_ROT_0
-       // #define LCD_SCREEN_ROT_90
-       // #define LCD_SCREEN_ROT_180
-       // #define LCD_SCREEN_ROT_270
-     //The encoder and click button
-     #define BTN_EN1 11
-     #define BTN_EN2 10
-     #define BTN_ENC 16  //the click switch
-     //not connected to a pin
-     #define SDCARDDETECT -1
- #endif //Makrpanel
-
-#endif // SANGUINOLOLU_11
-
-
-/*****************************************************************
-* Ultimaker pin assignment
-******************************************************************/
-
-#if MB(ULTIMAKER)
-#define KNOWN_BOARD
-
-#ifndef __AVR_ATmega1280__
- #ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
- #endif
-#endif
-
-#define LARGE_FLASH true
-
-#define X_STEP_PIN 25
-#define X_DIR_PIN 23
-#define X_MIN_PIN 22
-#define X_MAX_PIN 24
-#define X_ENABLE_PIN 27
-
-#define Y_STEP_PIN 31
-#define Y_DIR_PIN 33
-#define Y_MIN_PIN 26
-#define Y_MAX_PIN 28
-#define Y_ENABLE_PIN 29
-
-#define Z_STEP_PIN 37
-#define Z_DIR_PIN 39
-#define Z_MIN_PIN 30
-#define Z_MAX_PIN 32
-#define Z_ENABLE_PIN 35
-
-#define HEATER_BED_PIN 4
-#define TEMP_BED_PIN 10
-
-#define HEATER_0_PIN  2
-#define TEMP_0_PIN 8
-
-#define HEATER_1_PIN 3
-#define TEMP_1_PIN 9
-
-#define HEATER_2_PIN -1
-#define TEMP_2_PIN -1
-
-#define E0_STEP_PIN         43
-#define E0_DIR_PIN          45
-#define E0_ENABLE_PIN       41
-
-#define E1_STEP_PIN         49
-#define E1_DIR_PIN          47
-#define E1_ENABLE_PIN       48
-
-#define SDPOWER            -1
-#define SDSS               53
-#define LED_PIN            13
-#define FAN_PIN            7
-#define PS_ON_PIN          12
-#define KILL_PIN           -1
-#define SUICIDE_PIN        54  //PIN that has to be turned on right after start, to keep power flowing.
-#define SERVO0_PIN         13  // untested
-
-#ifdef ULTRA_LCD
-
-  #ifdef NEWPANEL
-  //arduino pin witch triggers an piezzo beeper
-    #define BEEPER 18
-
-    #define LCD_PINS_RS 20
-    #define LCD_PINS_ENABLE 17
-    #define LCD_PINS_D4 16
-    #define LCD_PINS_D5 21
-    #define LCD_PINS_D6 5
-    #define LCD_PINS_D7 6
-
-    //buttons are directly attached
-    #define BTN_EN1 40
-    #define BTN_EN2 42
-    #define BTN_ENC 19  //the click
-
-    #define SDCARDDETECT 38
-
-  #else //old style panel with shift register
-    //arduino pin witch triggers an piezzo beeper
-    #define BEEPER 18
-
-    //buttons are attached to a shift register
-    #define SHIFT_CLK 38
-    #define SHIFT_LD 42
-    #define SHIFT_OUT 40
-    #define SHIFT_EN 17
-
-    #define LCD_PINS_RS 16
-    #define LCD_PINS_ENABLE 5
-    #define LCD_PINS_D4 6
-    #define LCD_PINS_D5 21
-    #define LCD_PINS_D6 20
-    #define LCD_PINS_D7 19
-
-    #define SDCARDDETECT -1
-  #endif
-#endif //ULTRA_LCD
-
-#endif // ULTIMAKER
-
-#if MB(ULTIMAKER_OLD)
-#define KNOWN_BOARD
-/*****************************************************************
-* Ultimaker pin assignment (Old electronics)
-******************************************************************/
-
-#ifndef __AVR_ATmega1280__
- #ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
- #endif
-#endif
-
-#define LARGE_FLASH true
-
-#define X_STEP_PIN 25
-#define X_DIR_PIN 23
-#define X_MIN_PIN 15
-#define X_MAX_PIN 14
-#define X_ENABLE_PIN 27
-
-#define Y_STEP_PIN 31
-#define Y_DIR_PIN 33
-#define Y_MIN_PIN 17
-#define Y_MAX_PIN 16
-#define Y_ENABLE_PIN 29
-
-#define Z_STEP_PIN 37
-#define Z_DIR_PIN 39
-#define Z_MIN_PIN 19
-#define Z_MAX_PIN 18
-#define Z_ENABLE_PIN 35
-
-#define HEATER_BED_PIN -1
-#define TEMP_BED_PIN -1
-
-#define HEATER_0_PIN  2
-#define TEMP_0_PIN 8
-
-#define HEATER_1_PIN 1
-#define TEMP_1_PIN 1
-
-#define HEATER_2_PIN -1
-#define TEMP_2_PIN -1
-
-#define E0_STEP_PIN         43
-#define E0_DIR_PIN          45
-#define E0_ENABLE_PIN       41
-
-#define E1_STEP_PIN         -1
-#define E1_DIR_PIN          -1
-#define E1_ENABLE_PIN       -1
-
-#define SDPOWER            -1
-#define SDSS               -1
-#define LED_PIN            -1
-#define FAN_PIN            -1
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-#define SUICIDE_PIN        -1  //PIN that has to be turned on right after start, to keep power flowing.
-
-#define LCD_PINS_RS 24
-#define LCD_PINS_ENABLE 22
-#define LCD_PINS_D4 36
-#define LCD_PINS_D5 34
-#define LCD_PINS_D6 32
-#define LCD_PINS_D7 30
-
-#endif // ULTIMAKER_OLD
-
-#if MB(ULTIMAIN_2)
-#define KNOWN_BOARD
-/*****************************************************************
-* Ultiboard v2.0 pin assignment
-******************************************************************/
-
-#ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega 2560' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define X_STEP_PIN 25
-#define X_DIR_PIN 23
-#define X_STOP_PIN 22
-#define X_ENABLE_PIN 27
-
-#define Y_STEP_PIN 32
-#define Y_DIR_PIN 33
-#define Y_STOP_PIN 26
-#define Y_ENABLE_PIN 31
-
-#define Z_STEP_PIN 35
-#define Z_DIR_PIN 36
-#define Z_STOP_PIN 29
-#define Z_ENABLE_PIN 34
-
-#define HEATER_BED_PIN 4
-#define TEMP_BED_PIN 10
-
-#define HEATER_0_PIN  2
-#define TEMP_0_PIN 8
-
-#define HEATER_1_PIN 3
-#define TEMP_1_PIN 9
-
-#define HEATER_2_PIN -1
-#define TEMP_2_PIN -1
-
-#define E0_STEP_PIN         42
-#define E0_DIR_PIN          43
-#define E0_ENABLE_PIN       37
-
-#define E1_STEP_PIN         49
-#define E1_DIR_PIN          47
-#define E1_ENABLE_PIN       48
-
-#define SDPOWER            -1
-#define SDSS               53
-#define LED_PIN            8
-#define FAN_PIN            7
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-#define SUICIDE_PIN        -1  //PIN that has to be turned on right after start, to keep power flowing.
-#define SAFETY_TRIGGERED_PIN     28 //PIN to detect the safety circuit has triggered
-#define MAIN_VOLTAGE_MEASURE_PIN 14 //Analogue PIN to measure the main voltage, with a 100k - 4k7 resitor divider.
-
-#define MOTOR_CURRENT_PWM_XY_PIN 44
-#define MOTOR_CURRENT_PWM_Z_PIN 45
-#define MOTOR_CURRENT_PWM_E_PIN 46
-//Motor current PWM conversion, PWM value = MotorCurrentSetting * 255 / range
-#define MOTOR_CURRENT_PWM_RANGE 2000
-#define DEFAULT_PWM_MOTOR_CURRENT  {1300, 1300, 1250}
-
-//arduino pin witch triggers an piezzo beeper
-#define BEEPER 18
-
-#define LCD_PINS_RS 20
-#define LCD_PINS_ENABLE 15
-#define LCD_PINS_D4 14
-#define LCD_PINS_D5 21
-#define LCD_PINS_D6 5
-#define LCD_PINS_D7 6
-
-//buttons are directly attached
-#define BTN_EN1 40
-#define BTN_EN2 41
-#define BTN_ENC 19  //the click
-
-#define BLEN_C 2
-#define BLEN_B 1
-#define BLEN_A 0
-
-#define SDCARDDETECT 39
-
-#endif // ULTIMAIN_2
-
-/****************************************************************************************
-* RUMBA pin assignment
-*
-****************************************************************************************/
-#if MB(RUMBA)
-#define KNOWN_BOARD 1
-
-#ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define X_STEP_PIN         17
-#define X_DIR_PIN          16
-#define X_ENABLE_PIN       48
-#define X_MIN_PIN          37
-#define X_MAX_PIN          36
-
-#define Y_STEP_PIN         54
-#define Y_DIR_PIN          47
-#define Y_ENABLE_PIN       55
-#define Y_MIN_PIN          35
-#define Y_MAX_PIN          34
-
-#define Z_STEP_PIN         57
-#define Z_DIR_PIN          56
-#define Z_ENABLE_PIN       62
-#define Z_MIN_PIN          33
-#define Z_MAX_PIN          32
-
-#define E0_STEP_PIN        23
-#define E0_DIR_PIN         22
-#define E0_ENABLE_PIN      24
-
-#define E1_STEP_PIN        26
-#define E1_DIR_PIN         25
-#define E1_ENABLE_PIN      27
-
-#define E2_STEP_PIN        29
-#define E2_DIR_PIN         28
-#define E2_ENABLE_PIN      39
-
-#define LED_PIN            13
-
-#define FAN_PIN            7
-//additional FAN1 PIN (e.g. useful for electronics fan or light on/off) on PIN 8
-
-#define PS_ON_PIN          45
-#define KILL_PIN           46
-
-#if (TEMP_SENSOR_0==0)
- #define TEMP_0_PIN         -1
- #define HEATER_0_PIN       -1
-#else
- #define HEATER_0_PIN        2    // EXTRUDER 1
- #if (TEMP_SENSOR_0==-1)
-  #define TEMP_0_PIN         6    // ANALOG NUMBERING - connector *K1* on RUMBA thermocouple ADD ON is used
- #else
-  #define TEMP_0_PIN         15   // ANALOG NUMBERING - default connector for thermistor *T0* on rumba board is used
- #endif
-#endif
-
-#if (TEMP_SENSOR_1==0)
- #define TEMP_1_PIN         -1
- #define HEATER_1_PIN       -1
-#else
- #define HEATER_1_PIN        3    // EXTRUDER 2
- #if (TEMP_SENSOR_1==-1)
-  #define TEMP_1_PIN         5    // ANALOG NUMBERING - connector *K2* on RUMBA thermocouple ADD ON is used
- #else
-  #define TEMP_1_PIN         14   // ANALOG NUMBERING - default connector for thermistor *T1* on rumba board is used
- #endif
-#endif
-
-#if (TEMP_SENSOR_2==0)
- #define TEMP_2_PIN         -1
- #define HEATER_2_PIN       -1
-#else
- #define HEATER_2_PIN        6    // EXTRUDER 3
- #if (TEMP_SENSOR_2==-1)
-  #define TEMP_2_PIN         7    // ANALOG NUMBERING - connector *K3* on RUMBA thermocouple ADD ON is used <-- this can not be used when TEMP_SENSOR_BED is defined as thermocouple
- #else
-  #define TEMP_2_PIN         13   // ANALOG NUMBERING - default connector for thermistor *T2* on rumba board is used
- #endif
-#endif
-
-//optional for extruder 4 or chamber: #define TEMP_X_PIN         12   // ANALOG NUMBERING - default connector for thermistor *T3* on rumba board is used
-//optional FAN1 can be used as 4th heater output: #define HEATER_3_PIN       8    // EXTRUDER 4
-
-#if (TEMP_SENSOR_BED==0)
- #define TEMP_BED_PIN       -1
- #define HEATER_BED_PIN     -1
-#else
- #define HEATER_BED_PIN      9    // BED
- #if (TEMP_SENSOR_BED==-1)
-  #define TEMP_BED_PIN       7    // ANALOG NUMBERING - connector *K3* on RUMBA thermocouple ADD ON is used <-- this can not be used when TEMP_SENSOR_2 is defined as thermocouple
- #else
-  #define TEMP_BED_PIN       11   // ANALOG NUMBERING - default connector for thermistor *THB* on rumba board is used
- #endif
-#endif
-
-#define SDPOWER            -1
-#define SDSS               53
-#define SDCARDDETECT       49
-#define BEEPER             44
-#define LCD_PINS_RS        19
-#define LCD_PINS_ENABLE    42
-#define LCD_PINS_D4        18
-#define LCD_PINS_D5        38
-#define LCD_PINS_D6        41
-#define LCD_PINS_D7        40
-#define BTN_EN1            11
-#define BTN_EN2            12
-#define BTN_ENC            43
-
-#endif // RUMBA
-
-
-/****************************************************************************************
-* Teensylu 0.7 / Printrboard pin assignments (AT90USB1286)
-* Requires the Teensyduino software with Teensy++ 2.0 selected in Arduino IDE!
-  http://www.pjrc.com/teensy/teensyduino.html
-* See http://reprap.org/wiki/Printrboard for more info
-****************************************************************************************/
-#if MB(TEENSYLU) || MB(PRINTRBOARD)
-#define KNOWN_BOARD 1
-#define AT90USB 1286  // Disable MarlinSerial etc.
-
-#ifndef __AVR_AT90USB1286__
-#error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
-#endif
-
-#ifdef AT90USBxx_TEENSYPP_ASSIGNMENTS  // use Teensyduino Teensy++2.0 pin assignments instead of Marlin traditional.
-#error These Teensylu/Printrboard assignments depend on traditional Marlin assignments, not AT90USBxx_TEENSYPP_ASSIGNMENTS in fastio.h
-#endif
-
-#define LARGE_FLASH        true
-
-#define X_STEP_PIN          0
-#define X_DIR_PIN           1
-#define X_ENABLE_PIN       39
-
-#define Y_STEP_PIN          2
-#define Y_DIR_PIN           3
-#define Y_ENABLE_PIN       38
-
-#define Z_STEP_PIN          4
-#define Z_DIR_PIN           5
-#define Z_ENABLE_PIN       23
-
-#define E0_STEP_PIN         6
-#define E0_DIR_PIN          7
-#define E0_ENABLE_PIN      19
-
-#define HEATER_0_PIN       21  // Extruder
-#define HEATER_1_PIN       46
-#define HEATER_2_PIN       47
-#define HEATER_BED_PIN     20  // Bed
-// If soft or fast PWM is off then use Teensyduino pin numbering, Marlin
-// fastio pin numbering otherwise
-#ifdef FAN_SOFT_PWM || FAST_PWM_FAN
-        #define FAN_PIN        22  // Fan
-#else
-        #define FAN_PIN        16  // Fan
-#endif
-
-#if MB(TEENSYLU)  // Teensylu
-  #define X_STOP_PIN         13
-  #define Y_STOP_PIN         14
-  #define Z_STOP_PIN         15
-  #define TEMP_0_PIN          7  // Extruder / Analog pin numbering
-  #define TEMP_BED_PIN        6  // Bed / Analog pin numbering
-#else  // Printrboard
-  #define X_STOP_PIN         35
-  #define Y_STOP_PIN          8
-  #define Z_STOP_PIN         36
-  #define TEMP_0_PIN          1  // Extruder / Analog pin numbering
-  #define TEMP_BED_PIN        0  // Bed / Analog pin numbering
-  #ifdef FILAMENT_SENSOR
-   #define FILWIDTH_PIN        2
-  #endif //FILAMENT_SENSOR
-#endif
-
-#define TEMP_1_PIN         -1
-#define TEMP_2_PIN         -1
-
-#define SDPOWER            -1
-#define SDSS                8
-#define LED_PIN            -1
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-#define ALARM_PIN          -1
-
-#ifndef SDSUPPORT
-// these pins are defined in the SD library if building with SD support
-  #define SCK_PIN           9
-  #define MISO_PIN         11
-  #define MOSI_PIN         10
-#endif
-
-#if defined(ULTRA_LCD) && defined(NEWPANEL)
-  //we have no buzzer installed
-  #define BEEPER -1
-  //LCD Pins
-  #ifdef LCD_I2C_PANELOLU2
-    #define BTN_EN1 27  //RX1 - fastio.h pin mapping 27
-    #define BTN_EN2 26  //TX1 - fastio.h pin mapping 26
-    #define BTN_ENC 43 //A3 - fastio.h pin mapping 43
-    #define SDSS   40 //use SD card on Panelolu2 (Teensyduino pin mapping)
-  #endif //LCD_I2C_PANELOLU2
-  //not connected to a pin
-  #define SDCARDDETECT -1    
-#endif //Ultipanel && Newpanel
-
-#endif // TEENSYLU || PRINTRBOARD
-
-/****************************************************************************************
- * Brainwave 1.0 pin assignments (AT90USB646)
- * Requires hardware bundle for Arduino:
-   https://github.com/unrepentantgeek/brainwave-arduino
- ****************************************************************************************/
-#if MB(BRAINWAVE)
-#define KNOWN_BOARD 1
-#define AT90USB 646  // Disable MarlinSerial etc.
-
-#ifndef __AVR_AT90USB646__
-#error Oops!  Make sure you have 'Brainwave' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define X_STEP_PIN         27
-#define X_DIR_PIN          29
-#define X_ENABLE_PIN       28
-#define X_STOP_PIN          7
-#define X_ATT_PIN          26
-
-#define Y_STEP_PIN         31
-#define Y_DIR_PIN          33
-#define Y_ENABLE_PIN       32
-#define Y_STOP_PIN          6
-#define Y_ATT_PIN          30
-
-#define Z_STEP_PIN         17
-#define Z_DIR_PIN          19
-#define Z_ENABLE_PIN       18
-#define Z_STOP_PIN          5
-#define Z_ATT_PIN          16
-
-#define E0_STEP_PIN        21
-#define E0_DIR_PIN         23
-#define E0_ENABLE_PIN      22
-#define E0_ATT_PIN         20
-
-#define HEATER_0_PIN        4  // Extruder
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-#define HEATER_BED_PIN     38  // Bed
-#define FAN_PIN             3  // Fan
-
-#define TEMP_0_PIN          7  // Extruder / Analog pin numbering
-#define TEMP_1_PIN         -1
-#define TEMP_2_PIN         -1
-#define TEMP_BED_PIN        6  // Bed / Analog pin numbering
-
-#define SDPOWER            -1
-#define SDSS               -1
-#define LED_PIN            39
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-#define ALARM_PIN          -1
-
-#ifndef SDSUPPORT
-// these pins are defined in the SD library if building with SD support
-  #define SCK_PIN           9
-  #define MISO_PIN         11
-  #define MOSI_PIN         10
-#endif
-
-#endif // BRAINWAVE
-
-//
-// SAV Mk-I
-// -----------------------------------------------------------------------------------
-/****************************************************************************************
-* SAV MkI pin assignments (AT90USB1286)
-* Requires the Teensyduino software with Teensy++ 2.0 selected in Arduino IDE!
-  http://www.pjrc.com/teensy/teensyduino.html
-   RepRap Clone Wars project board.
-****************************************************************************************/
-#if MB(SAV_MKI)  // SAV Mk-I
-#define KNOWN_BOARD 1
-#define AT90USB 1286  // Disable MarlinSerial etc.
-
-#ifndef __AVR_AT90USB1286__
-#error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define LARGE_FLASH        true
-
-
-#define X_STEP_PIN         0
-#define X_DIR_PIN          1
-#define X_ENABLE_PIN       39
-
-#define Y_STEP_PIN         2
-#define Y_DIR_PIN          3
-#define Y_ENABLE_PIN       38
-
-#define Z_STEP_PIN         4
-#define Z_DIR_PIN          5
-#define Z_ENABLE_PIN       23
-
-#define E0_STEP_PIN         6
-#define E0_DIR_PIN          7
-#define E0_ENABLE_PIN       19
-
-#define HEATER_0_PIN       21  // Extruder
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-#define HEATER_BED_PIN     20  // Bed
-#define FAN_PIN            16  // Fan   -- from Teensyduino environment.
-                               // For the fan and Teensyduino uses a different pin mapping.
-
-  #define X_STOP_PIN         13
-  #define Y_STOP_PIN         14
-  #define Z_STOP_PIN         15
-//  #define Z_STOP_PIN         36  // For inductive sensor.
-
-  #define TEMP_0_PIN          7  // Extruder / Analog pin numbering
-  #define TEMP_BED_PIN        6  // Bed / Analog pin numbering
-
-#define TEMP_1_PIN         -1
-#define TEMP_2_PIN         -1
-
-#define SDPOWER            -1
-#define SDSS               20  // PB0 - 8 in marlin env.
-#define LED_PIN            -1
-#define PS_ON_PIN          -1
-#define ALARM_PIN          -1
-#define SDCARDDETECT       -1
-
-
-#ifndef SDSUPPORT
-   // these pins are defined in the SD library if building with SD support
-  #define SCK_PIN          9
-  #define MISO_PIN         11
-  #define MOSI_PIN         10
-#endif
-
-#define BEEPER             -1
-#define LCD_PINS_RS        -1
-#define LCD_PINS_ENABLE    -1
-#define LCD_PINS_D4        -1
-#define LCD_PINS_D5        -1
-#define LCD_PINS_D6        -1
-#define LCD_PINS_D7        -1
-
-#ifdef SAV_3DLCD
-// For LCD SHIFT register LCD
-#define SR_DATA_PIN         1
-#define SR_CLK_PIN          0
-
-#define BTN_EN1            41
-#define BTN_EN2            40
-#define BTN_ENC            12
-
-#define KILL_PIN           42 // A2 = 42 - teensy = 40
-#define HOME_PIN          -1 // A4 = marlin 44 - teensy = 42
-
-#ifdef NUM_SERVOS
-  #define SERVO0_PIN       41 // In teensy's pin definition for pinMode (in Servo.cpp)
-#endif
-
-#endif
-
-#endif // SAV_MKI
-
-/****************************************************************************************
-* Teensy++ 2.0 Breadboard pin assignments (AT90USB1286)
-* Requires the Teensyduino software with Teensy++ 2.0 selected in Arduino IDE!
-  http://www.pjrc.com/teensy/teensyduino.html
-* See http://reprap.org/wiki/Printrboard for more info
-* CLI build: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
-* 
-****************************************************************************************/
-#if MB(TEENSY2)
-#define KNOWN_BOARD 1
-#define AT90USB 1286  // Disable MarlinSerial etc.
-
-#ifndef __AVR_AT90USB1286__
-#error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define LARGE_FLASH        true
-
-/* 
-DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a TeensyBreadboard:
-
-                               USB
-           GND       GND |-----#####-----| +5V              ATX +5SB
-     ATX PS_ON    PWM 27 |b7   #####   b6| 26    PWM*       Stepper Enable 
-                  PWM  0 |d0           b5| 25    PWM*        
-                  PWM  1 |d1           b4| 24    PWM        
-         X_MIN         2 |d2           b3| 23               MISO_PIN
-         Y_MIN         3 |d3           b2| 22               MOSI_PIN
-         Z_MIN         4 |d4  * *      b1| 21               SCK_PIN       
-                       5 |d5  e e      b0| 20               SDSS              
-                LED    6 |d6  5 4      e7| 19               
-                       7 |d7           e6| 18               
-       LCD  RS         8 |e0             | GND              
-       LCD  EN         9 |e1   a4 a0    R| AREF             
-       LCD  D4        10 |c0   a5 a1   f0| 38 A0            ENC_1           
-       LCD  D5        11 |c1   a6 a2   f1| 39 A1            ENC_2
-       LCD  D6        12 |c2   a7 a3   f2| 40 A2            ENC_CLK
-       LCD  D6        13 |c3           f3| 41 A3            
-      Bed Heat    PWM 14 |c4   V G R   f4| 42 A4            
- Extruder Heat    PWM 15 |c5   c n S   f5| 43 A5            
-           Fan    PWM 16 |c6   c d T   f6| 44 A6            Bed TC
-                      17 |c7   * * *   f7| 45 A7            Extruder TC * 4.7k * +5        
-                         -----------------                  
-
-      Interior E4: 36, INT4
-      Interior E5: 37, INT5
-      Interior PA0-7: 28-35  -- Printrboard and Teensylu use these pins for step & direction:
-             T++ PA Signal  Marlin
-    
-       Z STEP  32 a4  a0 28 X STEP
-       Z DIR   33 a5  a1 29 X DIR
-       E STEP  34 a6  a2 30 Y STEP
-       E DIR   35 a7  a3 31 Y DIR
-
-*/
-
-#ifndef AT90USBxx_TEENSYPP_ASSIGNMENTS  // use Teensyduino Teensy++2.0 pin assignments instead of Marlin alphabetical.
-  #error  Uncomment #define AT90USBxx_TEENSYPP_ASSIGNMENTS in fastio.h for this config
-  // or build from command line with:  DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
-#endif
-
-#define X_STEP_PIN         28 //  0 Marlin
-#define X_DIR_PIN          29 //  1 Marlin
-#define X_ENABLE_PIN       26 
-
-#define Y_STEP_PIN         30 //  2 Marlin
-#define Y_DIR_PIN          31 //  3
-#define Y_ENABLE_PIN       26     // Shared w/x
-
-#define Z_STEP_PIN         32 //  4
-#define Z_DIR_PIN          33 //  5
-#define Z_ENABLE_PIN       26 // Shared w/x
-
-#define E0_STEP_PIN        34 //  6
-#define E0_DIR_PIN         35 //  7
-#define E0_ENABLE_PIN      26 // Shared w/x
-
-#define HEATER_0_PIN       15 //  21  // Extruder
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-#define HEATER_BED_PIN     14 // 20  // Bed
-#define FAN_PIN            16 // 22  // Fan
-
-#define X_STOP_PIN          2
-#define Y_STOP_PIN          3
-#define Z_STOP_PIN          4
-
-#define TEMP_0_PIN          7 // Extruder / Analog pin numbering
-#define TEMP_BED_PIN        6 // Bed / Analog pin numbering
-#define TEMP_1_PIN         -1
-#define TEMP_2_PIN         -1
-
-#define SDPOWER            -1
-#define SDCARDDETECT       -1   
-#define SDSS               20 // 8
-#define LED_PIN             6
-#define PS_ON_PIN          27
-#define KILL_PIN           -1
-#define ALARM_PIN          -1
-
-#ifndef SDSUPPORT
-// these pins are defined in the SD library if building with SD support
-  #define SCK_PIN         21 // 9
-  #define MISO_PIN        23 // 11
-  #define MOSI_PIN        22 // 10
-#endif
-
-#ifdef ULTIPANEL
-#define LCD_PINS_RS         8
-#define LCD_PINS_ENABLE     9
-#define LCD_PINS_D4        10
-#define LCD_PINS_D5        11
-#define LCD_PINS_D6        12
-#define LCD_PINS_D7        13
-#define BTN_EN1            38
-#define BTN_EN2            39
-#define BTN_ENC            40
-#endif
-
-#endif // TEENSY2
-
-
-/****************************************************************************************
-* Gen3+ pin assignment
-*
-****************************************************************************************/
-#if MB(GEN3_PLUS)
-#define MOTHERBOARD BOARD_SANGUINOLOLU_11   /*TODO: Figure out, Why is this done?*/
-#define KNOWN_BOARD 1
-#ifndef __AVR_ATmega644P__
-#ifndef __AVR_ATmega1284P__
-#error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
-#endif
-#endif
-
-#define X_STEP_PIN         15
-#define X_DIR_PIN          18
-#define X_STOP_PIN         20
-
-#define Y_STEP_PIN         23
-#define Y_DIR_PIN          22
-#define Y_STOP_PIN         25
-
-#define Z_STEP_PIN         27
-#define Z_DIR_PIN          28
-#define Z_STOP_PIN         30
-
-#define E0_STEP_PIN        17
-#define E0_DIR_PIN         21
-
-#define LED_PIN            -1
-
-#define FAN_PIN            -1
-
-#define PS_ON_PIN         14
-#define KILL_PIN           -1
-
-#define HEATER_0_PIN       12 // (extruder)
-
-#define HEATER_BED_PIN     16 // (bed)
-#define X_ENABLE_PIN       19
-#define Y_ENABLE_PIN       24
-#define Z_ENABLE_PIN       29
-#define E0_ENABLE_PIN      13
-
-#define TEMP_0_PIN          0   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 33 extruder)
-#define TEMP_1_PIN         -1   
-#define TEMP_2_PIN         -1
-#define TEMP_BED_PIN        5   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 34 bed)  
-#define SDPOWER            -1
-#define SDSS               4
-#define HEATER_2_PIN       -1
-
-#endif // GEN3_PLUS
-
-/****************************************************************************************
-* Gen3  Monolithic Electronics
-*
-****************************************************************************************/
-#if MB(GEN3_MONOLITHIC)
-#define KNOWN_BOARD 1
-
-#ifndef __AVR_ATmega644P__
-    #error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define DEBUG_PIN 0
-
-// x axis
-#define X_STEP_PIN 15
-#define X_DIR_PIN 18
-#define X_MIN_PIN 20
-//Alex Checar #define X_STOP_PIN         20
-#define X_ENABLE_PIN 24 //actually uses Y_enable_pin
-#define X_MAX_PIN -1
-
-// y axes
-#define Y_STEP_PIN 23
-#define Y_DIR_PIN 22
-#define Y_MIN_PIN 25
-//Alex Checar #define Y_STOP_PIN         25
-#define Y_ENABLE_PIN 24 //shared with X_enable_pin
-#define Y_MAX_PIN -1
-
-// z axes
-#define Z_STEP_PIN 27
-#define Z_DIR_PIN 28
-#define Z_MIN_PIN 30
-//Alex Checar #define Z_STOP_PIN         30
-#define Z_ENABLE_PIN 29
-#define Z_MAX_PIN -1
-
-//extruder pins
-#define E0_STEP_PIN         12
-#define E0_DIR_PIN          17
-#define E0_ENABLE_PIN       3
-
-#define HEATER_0_PIN 16
-#define TEMP_0_PIN 0
-
-#define FAN_PIN -1
-
-//bed pins
-#define HEATER_BED_PIN -1
-#define TEMP_BED_PIN -1
-
-
-#define SDSS     -1
-#define SDPOWER          -1
-#define LED_PIN          -1
-
-//pin for controlling the PSU.
-#define PS_ON_PIN       14  //Alex, Do this work on the card?
-
-//Alex extras from Gen3+
-#define KILL_PIN           -1
-#define TEMP_1_PIN         -1
-#define TEMP_2_PIN         -1
-#define HEATER_2_PIN       -1
-
-#endif // GEN3_MONOLITHIC
-
-/****************************************************************************************
-* Open Motion controller with enable based extruders
-*
-*                        ATMega644
-*
-*                        +---\/---+
-*            (D 0) PB0  1|        |40  PA0 (AI 0 / D31)
-*            (D 1) PB1  2|        |39  PA1 (AI 1 / D30)
-*       INT2 (D 2) PB2  3|        |38  PA2 (AI 2 / D29)
-*        PWM (D 3) PB3  4|        |37  PA3 (AI 3 / D28)
-*        PWM (D 4) PB4  5|        |36  PA4 (AI 4 / D27)
-*       MOSI (D 5) PB5  6|        |35  PA5 (AI 5 / D26)
-*       MISO (D 6) PB6  7|        |34  PA6 (AI 6 / D25)
-*        SCK (D 7) PB7  8|        |33  PA7 (AI 7 / D24)
-*                  RST  9|        |32  AREF
-*                  VCC 10|        |31  GND
-*                  GND 11|        |30  AVCC
-*                XTAL2 12|        |29  PC7 (D 23)
-*                XTAL1 13|        |28  PC6 (D 22)
-*       RX0 (D 8)  PD0 14|        |27  PC5 (D 21) TDI
-*       TX0 (D 9)  PD1 15|        |26  PC4 (D 20) TDO
-*  INT0 RX1 (D 10) PD2 16|        |25  PC3 (D 19) TMS
-*  INT1 TX1 (D 11) PD3 17|        |24  PC2 (D 18) TCK
-*       PWM (D 12) PD4 18|        |23  PC1 (D 17) SDA
-*       PWM (D 13) PD5 19|        |22  PC0 (D 16) SCL
-*       PWM (D 14) PD6 20|        |21  PD7 (D 15) PWM
-*                        +--------+
-*
-****************************************************************************************/
-#if MB(OMCA_A) //Alpha OMCA board
-#define KNOWN_BOARD 1
-
-#ifndef __AVR_ATmega644__
-#error Oops!  Make sure you have 'SanguinoA' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define X_STEP_PIN         21
-#define X_DIR_PIN          20
-#define X_ENABLE_PIN       24
-#define X_STOP_PIN         0
-
-#define Y_STEP_PIN         23
-#define Y_DIR_PIN          22
-#define Y_ENABLE_PIN       24
-#define Y_STOP_PIN         1
-
-#define Z_STEP_PIN         26
-#define Z_DIR_PIN          25
-#define Z_ENABLE_PIN       24
-#define Z_STOP_PIN         2
-
-#define E0_STEP_PIN         28
-#define E0_DIR_PIN          27
-#define E0_ENABLE_PIN       24
-
-#define E1_STEP_PIN         -1 // 19
-#define E1_DIR_PIN          -1 // 18
-#define E1_ENABLE_PIN       24
-
-#define E2_STEP_PIN         -1 // 17
-#define E2_DIR_PIN          -1 // 16
-#define E2_ENABLE_PIN       24
-
-#define SDPOWER            -1
-#define SDSS               11
-#define SDCARDDETECT       -1 // 10 optional also used as mode pin
-#define LED_PIN            -1
-#define FAN_PIN            3
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-
-#define HEATER_0_PIN       4
-#define HEATER_1_PIN       -1 // 12
-#define HEATER_2_PIN       -1 // 13
-#define TEMP_0_PIN          0 //D27   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
-#define TEMP_1_PIN         -1 // 1
-#define TEMP_2_PIN         -1 // 2
-#define HEATER_BED_PIN     -1 // 14/15
-#define TEMP_BED_PIN       -1 // 1,2 or I2C
-/*  Unused (1) (2) (3) 4 5 6 7 8 9 10 11 12 13 (14) (15) (16) 17 (18) (19) (20) (21) (22) (23) 24 (25) (26) (27) 28 (29) (30) (31)  */
-
-#endif // OMCA_A
-
-#if MB(OMCA)  // Final OMCA board -- REF http://sanguino.cc/hardware
-#define KNOWN_BOARD 1
-
-#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__)
-#error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu. (Final OMCA board)
-#endif
-
-#define X_STEP_PIN         26
-#define X_DIR_PIN          25
-#define X_ENABLE_PIN       10
-#define X_STOP_PIN         0
-
-#define Y_STEP_PIN         28
-#define Y_DIR_PIN          27
-#define Y_ENABLE_PIN       10
-#define Y_STOP_PIN         1
-
-#define Z_STEP_PIN         23
-#define Z_DIR_PIN          22
-#define Z_ENABLE_PIN       10
-#define Z_STOP_PIN         2
-
-#define E0_STEP_PIN         24
-#define E0_DIR_PIN          21
-#define E0_ENABLE_PIN       10
-
-/* future proofing */
-#define __FS  20
-#define __FD  19
-#define __GS  18
-#define __GD  13
-
-#define UNUSED_PWM           14 /* PWM on LEFT connector */
-
-#define E1_STEP_PIN         -1 // 21
-#define E1_DIR_PIN          -1 // 20
-#define E1_ENABLE_PIN       -1 // 19
-
-#define E2_STEP_PIN         -1 // 21
-#define E2_DIR_PIN          -1 // 20
-#define E2_ENABLE_PIN       -1 // 18
-
-#define SDPOWER            -1
-#define SDSS               11
-#define SDCARDDETECT       -1 // 10 optional also used as mode pin
-#define LED_PIN            -1
-#define FAN_PIN            14 /* PWM on MIDDLE connector */
-#define PS_ON_PIN          -1
-#define KILL_PIN           -1
-
-#define HEATER_0_PIN        3 /*DONE PWM on RIGHT connector */
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-#define HEATER_1_PIN       -1
-#define HEATER_2_PIN       -1
-#define TEMP_0_PIN          0 // ANALOG INPUT NUMBERING
-#define TEMP_1_PIN          1 // ANALOG
-#define TEMP_2_PIN         -1 // 2
-#define HEATER_BED_PIN      4
-#define TEMP_BED_PIN        2 // 1,2 or I2C
-
-#define I2C_SCL       16
-#define I2C_SDA       17
-
-#endif // OMCA
-
-/*****************************************************************
-* Rambo Pin Assignments
-******************************************************************/
-#if MB(RAMBO)
-#define KNOWN_BOARD
-#ifndef __AVR_ATmega2560__
-#error Oops!  Make sure you have 'Arduino Mega 2560' selected from the 'Tools -> Boards' menu.
-#endif
-
-#define LARGE_FLASH true
-
-// servo support
-#ifdef NUM_SERVOS
- #define SERVO0_PIN 22 //motor header MX1
- #if NUM_SERVOS > 1
- #define SERVO1_PIN 23 //Motor header MX2
- #endif
- #if NUM_SERVOS > 2
- #define SERVO2_PIN 24 //Motor header MX3
- #endif
- #if NUM_SERVOS > 3
- #define SERVO2_PIN 5 //pwm header pin 5
- #endif
-#endif
-
-#define X_STEP_PIN 37
-#define X_DIR_PIN 48
-#define X_MIN_PIN 12
-#define X_MAX_PIN 24
-#define X_ENABLE_PIN 29
-#define X_MS1_PIN 40
-#define X_MS2_PIN 41
-
-#define Y_STEP_PIN 36
-#define Y_DIR_PIN 49
-#define Y_MIN_PIN 11
-#define Y_MAX_PIN 23
-#define Y_ENABLE_PIN 28
-#define Y_MS1_PIN 69
-#define Y_MS2_PIN 39
-
-#define Z_STEP_PIN 35
-#define Z_DIR_PIN 47
-#define Z_MIN_PIN 10
-#define Z_MAX_PIN 30
-#define Z_ENABLE_PIN 27
-#define Z_MS1_PIN 68
-#define Z_MS2_PIN 67
-
-#define HEATER_BED_PIN 3
-#define TEMP_BED_PIN 2
-
-#define HEATER_0_PIN  9
-#define TEMP_0_PIN 0
-
-#define HEATER_1_PIN 7
-#define TEMP_1_PIN 1
-
-#ifdef BARICUDA
-#define HEATER_2_PIN 6
-#else
-#define HEATER_2_PIN -1
-#endif
-#define TEMP_2_PIN -1
-
-#define E0_STEP_PIN         34
-#define E0_DIR_PIN          43
-#define E0_ENABLE_PIN       26
-#define E0_MS1_PIN 65
-#define E0_MS2_PIN 66
-
-#define E1_STEP_PIN         33
-#define E1_DIR_PIN          42
-#define E1_ENABLE_PIN       25
-#define E1_MS1_PIN 63
-#define E1_MS2_PIN 64
-
-#define DIGIPOTSS_PIN 38
-#define DIGIPOT_CHANNELS {4,5,3,0,1} // X Y Z E0 E1 digipot channels to stepper driver mapping
-
-#define SDPOWER            -1
-#define SDSS               53
-#define LED_PIN            13
-#define FAN_PIN            8  
-/**********************************************************
-Fan Pins
-Fan_0 8
-Fan_1 6
-Fan_2 2
-***********************************************************/
-#define PS_ON_PIN          4
-#define KILL_PIN           -1 //80 with Smart Controller LCD
-#define SUICIDE_PIN        -1  //PIN that has to be turned on right after start, to keep power flowing.
-
-#ifdef ULTRA_LCD
-  #define KILL_PIN 80
-  #ifdef NEWPANEL
-   //arduino pin which triggers an piezzo beeper
-    #define BEEPER 79      // Beeper on AUX-4
-    #define LCD_PINS_RS 70
-    #define LCD_PINS_ENABLE 71
-    #define LCD_PINS_D4 72
-    #define LCD_PINS_D5 73
-    #define LCD_PINS_D6 74
-    #define LCD_PINS_D7 75
-
-    //buttons are directly attached using AUX-2
-    #define BTN_EN1 76
-    #define BTN_EN2 77
-    #define BTN_ENC 78  //the click
-
-    #define BLEN_C 2
-    #define BLEN_B 1
-    #define BLEN_A 0
-
-    #define SDCARDDETECT 81    // Ramps does not use this port
-
-    //encoder rotation values
-    #define encrot0 0
-    #define encrot1 2
-    #define encrot2 3
-    #define encrot3 1
-  #else //old style panel with shift register
-    //arduino pin witch triggers an piezzo beeper
-    #define BEEPER 33    No Beeper added
-    //buttons are attached to a shift register
-    // Not wired this yet
-    // #define SHIFT_CLK 38
-    // #define SHIFT_LD 42
-    // #define SHIFT_OUT 40
-    // #define SHIFT_EN 17
-
-    #define LCD_PINS_RS 75
-    #define LCD_PINS_ENABLE 17
-    #define LCD_PINS_D4 23
-    #define LCD_PINS_D5 25
-    #define LCD_PINS_D6 27
-    #define LCD_PINS_D7 29
-
-    //encoder rotation values
-    #define encrot0 0
-    #define encrot1 2
-    #define encrot2 3
-    #define encrot3 1
-
-    //bits in the shift register that carry the buttons for:
-    // left up center down right red
-    #define BL_LE 7
-    #define BL_UP 6
-    #define BL_MI 5
-    #define BL_DW 4
-    #define BL_RI 3
-    #define BL_ST 2
-    #define BLEN_B 1
-    #define BLEN_A 0
-  #endif
-#endif //ULTRA_LCD
-
-#ifdef FILAMENT_SENSOR
-  //Filip added pin for Filament sensor analog input 
-  #define FILWIDTH_PIN        3
-#endif //FILAMENT_SENSOR
-
-#endif // RAMBO
-
-/****************************************************************************************
-* MegaTronics
-*
-****************************************************************************************/
-#if MB(MEGATRONICS)
-#define KNOWN_BOARD 1
-
-
- #ifndef __AVR_ATmega2560__
- #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
- #endif
-
-
-#define LARGE_FLASH        true
-
-#define X_STEP_PIN         26
-#define X_DIR_PIN          28
-#define X_ENABLE_PIN       24
-#define X_MIN_PIN          41
-#define X_MAX_PIN          37
-
-#define Y_STEP_PIN         60 // A6
-#define Y_DIR_PIN          61 // A7
-#define Y_ENABLE_PIN       22
-#define Y_MIN_PIN          14
-#define Y_MAX_PIN          15
-
-#define Z_STEP_PIN         54 // A0
-#define Z_DIR_PIN          55 // A1
-#define Z_ENABLE_PIN       56 // A2
-#define Z_MIN_PIN          18
-#define Z_MAX_PIN          19
-
-#define E0_STEP_PIN        31
-#define E0_DIR_PIN         32
-#define E0_ENABLE_PIN      38
-
-#define E1_STEP_PIN        34
-#define E1_DIR_PIN         36
-#define E1_ENABLE_PIN      30
-
-#define SDPOWER            -1
-#define SDSS               53
-#define LED_PIN            13
+/**
+ * pins.h
+ */
 
+#ifndef PINS_H
+#define PINS_H
 
-#define FAN_PIN            7 // IO pin. Buffer needed
-#define PS_ON_PIN          12
-#define KILL_PIN           -1
+#include "boards.h"
 
-#define HEATER_0_PIN       9    // EXTRUDER 1
-#define HEATER_1_PIN       8    // EXTRUDER 2 (FAN On Sprinter)
-#define HEATER_2_PIN       -1
+// Preset optional pins
+#define X_MS1_PIN -1
+#define X_MS2_PIN -1
+#define Y_MS1_PIN -1
+#define Y_MS2_PIN -1
+#define Z_MS1_PIN -1
+#define Z_MS2_PIN -1
+#define E0_MS1_PIN -1
+#define E0_MS2_PIN -1
+#define E1_MS1_PIN -1
+#define E1_MS2_PIN -1
+#define DIGIPOTSS_PIN -1
+#define HEATER_3_PIN -1
+#define TEMP_3_PIN -1
 
-#if TEMP_SENSOR_0 == -1
-#define TEMP_0_PIN         8   // ANALOG NUMBERING
+#if MB(GEN7_CUSTOM)
+  #include "pins_GEN7_CUSTOM.h"
+#elif MB(GEN7_12)
+  #include "pins_GEN7_12.h"
+#elif MB(GEN7_13)
+  #include "pins_GEN7_13.h"
+#elif MB(GEN7_14)
+  #include "pins_GEN7_14.h"
+#elif MB(CHEAPTRONIC)
+  #include "pins_CHEAPTRONIC.h"
+#elif MB(SETHI)
+  #include "pins_SETHI.h"
+#elif MB(RAMPS_OLD)
+  #include "pins_RAMPS_OLD.h"
+#elif IS_RAMPS
+  #include "pins_RAMPS_13.h"
+#elif MB(DUEMILANOVE_328P)
+  #include "pins_DUEMILANOVE_328P.h"
+#elif MB(GEN6)
+  #include "pins_GEN6.h"
+#elif MB(GEN6_DELUXE)
+  #include "pins_GEN6_DELUXE.h"
+#elif MB(SANGUINOLOLU_11)
+  #include "pins_SANGUINOLOLU_11.h"
+#elif MB(SANGUINOLOLU_12)
+  #include "pins_SANGUINOLOLU_12.h"
+#elif MB(MELZI)
+  #include "pins_MELZI.h"
+#elif MB(STB_11)
+  #include "pins_STB_11.h"
+#elif MB(AZTEEG_X1)
+  #include "pins_AZTEEG_X1.h"
+#elif MB(MELZI_1284)
+  #include "pins_MELZI_1284.h"
+#elif MB(AZTEEG_X3)
+  #include "pins_AZTEEG_X3.h"
+#elif MB(AZTEEG_X3_PRO)
+  #include "pins_AZTEEG_X3_PRO.h"
+#elif MB(ULTIMAKER)
+  #include "pins_ULTIMAKER.h"
+#elif MB(ULTIMAKER_OLD)
+  #include "pins_ULTIMAKER_OLD.h"
+#elif MB(ULTIMAIN_2)
+  #include "pins_ULTIMAIN_2.h"
+#elif MB(3DRAG)
+  #include "pins_3DRAG.h"
+#elif MB(K8200)
+  #include "pins_K8200.h"
+#elif MB(TEENSYLU)
+  #include "pins_TEENSYLU.h"
+#elif MB(RUMBA)
+  #include "pins_RUMBA.h"
+#elif MB(PRINTRBOARD)
+  #include "pins_PRINTRBOARD.h"
+#elif MB(BRAINWAVE)
+  #include "pins_BRAINWAVE.h"
+#elif MB(SAV_MKI)
+  #include "pins_SAV_MKI.h"
+#elif MB(TEENSY2)
+  #include "pins_TEENSY2.h"
+#elif MB(GEN3_PLUS)
+  #include "pins_GEN3_PLUS.h"
+#elif MB(GEN3_MONOLITHIC)
+  #include "pins_GEN3_MONOLITHIC.h"
+#elif MB(MEGATRONICS)
+  #include "pins_MEGATRONICS.h"
+#elif MB(MEGATRONICS_1)
+  #include "pins_MEGATRONICS_1.h"
+#elif MB(MEGATRONICS_2)
+  #include "pins_MEGATRONICS_2.h"
+#elif MB(MEGATRONICS_3)
+  #include "pins_MEGATRONICS_3.h"
+#elif MB(OMCA_A)
+  #include "pins_OMCA_A.h"
+#elif MB(OMCA)
+  #include "pins_OMCA.h"
+#elif MB(RAMBO)
+  #include "pins_RAMBO.h"
+#elif MB(ELEFU_3)
+  #include "pins_ELEFU_3.h"
+#elif MB(5DPRINT)
+  #include "pins_5DPRINT.h"
+#elif MB(LEAPFROG)
+  #include "pins_LEAPFROG.h"
+#elif MB(99)
+  #include "pins_99.h"
 #else
-#define TEMP_0_PIN         13   // ANALOG NUMBERING
-
-#endif
-
-#define TEMP_1_PIN         15   // ANALOG NUMBERING
-#define TEMP_2_PIN         -1   // ANALOG NUMBERING
-#define HEATER_BED_PIN     10   // BED
-#define TEMP_BED_PIN       14   // ANALOG NUMBERING
-
-#define BEEPER 33     // Beeper on AUX-4
-
-
-#ifdef ULTRA_LCD
-
-  #ifdef NEWPANEL
-  //arduino pin which triggers an piezzo beeper
-
-    #define LCD_PINS_RS 16
-    #define LCD_PINS_ENABLE 17
-    #define LCD_PINS_D4 23
-    #define LCD_PINS_D5 25
-    #define LCD_PINS_D6 27
-    #define LCD_PINS_D7 29
-
-    //buttons are directly attached using AUX-2
-    #define BTN_EN1 59
-    #define BTN_EN2 64
-    #define BTN_ENC 43  //the click
-
-    #define BLEN_C 2
-    #define BLEN_B 1
-    #define BLEN_A 0
-
-    #define SDCARDDETECT -1   // Ramps does not use this port
-
-      //encoder rotation values
-    #define encrot0 0
-    #define encrot1 2
-    #define encrot2 3
-    #define encrot3 1
-#endif
-#endif //ULTRA_LCD
-
-#endif // MEGATRONICS
-
-/****************************************************************************************
-* MegaTronics v2.0
-*
-****************************************************************************************/
-#if MB(MEGATRONICS_2)
- #define KNOWN_BOARD 1
-
-
- #ifndef __AVR_ATmega2560__
- #error Oops! Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
- #endif
-
- #define LARGE_FLASH        true
-
- #define X_STEP_PIN 26
- #define X_DIR_PIN 27
- #define X_ENABLE_PIN 25
- #define X_MIN_PIN 37
- #define X_MAX_PIN 40 //2 //Max endstops default to disabled "-1", set to commented value to enable.
-
- #define Y_STEP_PIN 4 // A6
- #define Y_DIR_PIN 54 // A0
- #define Y_ENABLE_PIN 5
- #define Y_MIN_PIN 41
- #define Y_MAX_PIN 38 //15
-
- #define Z_STEP_PIN 56 // A2
- #define Z_DIR_PIN 60 // A6
- #define Z_ENABLE_PIN 55 // A1
- #define Z_MIN_PIN 18
- #define Z_MAX_PIN 19
-
- #define E0_STEP_PIN 35
- #define E0_DIR_PIN 36
- #define E0_ENABLE_PIN 34
-
- #define E1_STEP_PIN 29
- #define E1_DIR_PIN 39
- #define E1_ENABLE_PIN 28
-
- #define E2_STEP_PIN 23
- #define E2_DIR_PIN 24
- #define E2_ENABLE_PIN 22
-
- #define SDPOWER -1
- #define SDSS 53
- #define LED_PIN 13
-
- #define FAN_PIN 7
- #define FAN2_PIN 6
- #define PS_ON_PIN 12
- #define KILL_PIN -1
-
- #define HEATER_0_PIN 9 // EXTRUDER 1
- #define HEATER_1_PIN 8 // EXTRUDER 2
- #define HEATER_2_PIN -1
-
- #if TEMP_SENSOR_0 == -1
-   #define TEMP_0_PIN 4 // ANALOG NUMBERING
- #else
-   #define TEMP_0_PIN 13 // ANALOG NUMBERING
- #endif
-
-
- #if TEMP_SENSOR_1 == -1
-   #define TEMP_1_PIN 8 // ANALOG NUMBERING
- #else
-   #define TEMP_1_PIN 15 // ANALOG NUMBERING
- #endif
-
- #define TEMP_2_PIN -1 // ANALOG NUMBERING
-
- #define HEATER_BED_PIN 10 // BED
-
- #if TEMP_SENSOR_BED == -1
-   #define TEMP_BED_PIN 8 // ANALOG NUMBERING
- #else
-   #define TEMP_BED_PIN 14 // ANALOG NUMBERING
- #endif
-
- #define BEEPER 64
-
-
- #define LCD_PINS_RS 14
- #define LCD_PINS_ENABLE 15
- #define LCD_PINS_D4 30
- #define LCD_PINS_D5 31
- #define LCD_PINS_D6 32
- #define LCD_PINS_D7 33
-
-
- //buttons are directly attached using keypad
- #define BTN_EN1 61
- #define BTN_EN2 59
- #define BTN_ENC 43 //the click
-
- #define BLEN_C 2
- #define BLEN_B 1
- #define BLEN_A 0
-
- #define SDCARDDETECT -1  // Megatronics does not use this port
-
-   //encoder rotation values
- #define encrot0 0
- #define encrot1 2
- #define encrot2 3
- #define encrot3 1
-
-#endif // MEGATRONICS_2
-
-
-/****************************************************************************************
-* Minitronics v1.0
-*
-****************************************************************************************/
-#if MB(MEGATRONICS_1)
- #define KNOWN_BOARD 1
-
-
- #ifndef __AVR_ATmega1281__
- #error Oops! Make sure you have 'Minitronics ' selected from the 'Tools -> Boards' menu.
- #endif
-
- #define LARGE_FLASH        true
-
- #define X_STEP_PIN 48
- #define X_DIR_PIN 47
- #define X_ENABLE_PIN 49
- #define X_MIN_PIN 5
- #define X_MAX_PIN -1 //2 //Max endstops default to disabled "-1", set to commented value to enable.
-
- #define Y_STEP_PIN 39 // A6
- #define Y_DIR_PIN 40 // A0
- #define Y_ENABLE_PIN 38
- #define Y_MIN_PIN 2
- #define Y_MAX_PIN -1 //15
-
- #define Z_STEP_PIN 42 // A2
- #define Z_DIR_PIN 43 // A6
- #define Z_ENABLE_PIN 41 // A1
- #define Z_MIN_PIN 6
- #define Z_MAX_PIN -1
-
- #define E0_STEP_PIN 45
- #define E0_DIR_PIN 44
- #define E0_ENABLE_PIN 27
-
- #define E1_STEP_PIN 36
- #define E1_DIR_PIN 35
- #define E1_ENABLE_PIN 37
-
- #define E2_STEP_PIN -1
- #define E2_DIR_PIN -1
- #define E2_ENABLE_PIN -1
-
- #define SDPOWER -1
- #define SDSS 16
- #define LED_PIN 46
-
- #define FAN_PIN 9
- #define FAN2_PIN -1
- #define PS_ON_PIN -1
- #define KILL_PIN -1
-
- #define HEATER_0_PIN 7 // EXTRUDER 1
- #define HEATER_1_PIN 8 // EXTRUDER 2
- #define HEATER_2_PIN -1
-
-
- #define TEMP_0_PIN 7 // ANALOG NUMBERING
- #define TEMP_1_PIN 6 // ANALOG NUMBERING
- #define TEMP_2_PIN -1 // ANALOG NUMBERING
-
- #define HEATER_BED_PIN 3 // BED
- #define TEMP_BED_PIN 6 // ANALOG NUMBERING
-
- #define BEEPER -1
-
-
- #define LCD_PINS_RS -1
- #define LCD_PINS_ENABLE -1
- #define LCD_PINS_D4 -1
- #define LCD_PINS_D5 -1
- #define LCD_PINS_D6 -1
- #define LCD_PINS_D7 -1
-
-
- //buttons are directly attached using keypad
- #define BTN_EN1 -1
- #define BTN_EN2 -1
- #define BTN_ENC -1 //the click
-
- #define BLEN_C 2
- #define BLEN_B 1
- #define BLEN_A 0
-
- #define SDCARDDETECT -1  // Megatronics does not use this port
-
-   //encoder rotation values
- #define encrot0 0
- #define encrot1 2
- #define encrot2 3
- #define encrot3 1
-
-#endif // MEGATRONICS_1
-
-/****************************************************************************************
-* Cheaptronic v1.0
-*
-****************************************************************************************/
-#if MB(CHEAPTRONIC)
- #define KNOWN_BOARD 1
-
- #ifndef __AVR_ATmega2560__
- #error Oops! Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
- #endif
-
- #define LARGE_FLASH        true
-
- //X motor stepper
- #define X_STEP_PIN 14
- #define X_DIR_PIN 15
- #define X_ENABLE_PIN 24
-
- //X endstop
- #define X_MIN_PIN 3
- #define X_MAX_PIN -1
-
- //Y motor stepper
- #define Y_STEP_PIN 35
- #define Y_DIR_PIN 36
- #define Y_ENABLE_PIN 31
-
- //Y endstop
- #define Y_MIN_PIN 2
- #define Y_MAX_PIN -1
-
- //Z motor stepper
- #define Z_STEP_PIN 40
- #define Z_DIR_PIN 41
- #define Z_ENABLE_PIN 37
-
- //Z endstop
- #define Z_MIN_PIN 5
- #define Z_MAX_PIN -1
-
- //Extruder 0 stepper
- #define E0_STEP_PIN 26
- #define E0_DIR_PIN 28
- #define E0_ENABLE_PIN 25
-
- //Extruder 1 stepper
- #define E1_STEP_PIN 33
- #define E1_DIR_PIN 34
- #define E1_ENABLE_PIN 30
-
- #define SDPOWER -1
- #define SDSS -1
- #define LED_PIN -1
-
- //FAN
- #define FAN_PIN -1
-
- #define PS_ON_PIN -1
- #define KILL_PIN -1
-
- #define HEATER_0_PIN 19 // EXTRUDER 1
- #define HEATER_1_PIN 23 // EXTRUDER 2
- //HeatedBad
- #define HEATER_BED_PIN 22
- //Cheaptronic v1.0 hasent EXTRUDER 3
- #define HEATER_2_PIN -1
-
- //Temperature sensors
- #define TEMP_0_PIN 15
- #define TEMP_1_PIN 14
- #define TEMP_2_PIN -1
- #define TEMP_BED_PIN 13
-
- //Cheaptronic v1.0 dont support LCD
- #define LCD_PINS_RS -1
- #define LCD_PINS_ENABLE -1
- #define LCD_PINS_D4 -1
- #define LCD_PINS_D5 -1
- #define LCD_PINS_D6 -1
- #define LCD_PINS_D7 -1
-
- //Cheaptronic v1.0 dont support keypad
- #define BTN_EN1 -1
- #define BTN_EN2 -1
- #define BTN_ENC -1
-
- #define BLEN_C 2
- #define BLEN_B 1
- #define BLEN_A 0
-
- //Cheaptronic v1.0 does not use this port
- #define SDCARDDETECT -1
-
- //encoder rotation values
- #define encrot0 0
- #define encrot1 2
- #define encrot2 3
- #define encrot3 1
-
-#endif // CHEAPTRONIC
-
-
-#ifndef HEATER_3_PIN
-  #define HEATER_3_PIN -1
-#endif
-#ifndef TEMP_3_PIN
-  #define TEMP_3_PIN -1
+  #error Unknown MOTHERBOARD value set in Configuration.h
 #endif
 
-#ifndef KNOWN_BOARD
-#error Unknown MOTHERBOARD value in configuration.h
-#endif
+// List of pins which to ignore when asked to change by gcode, 0 and 1 are RX and TX, do not mess with those!
+#define _E0_PINS E0_STEP_PIN, E0_DIR_PIN, E0_ENABLE_PIN, HEATER_0_PIN, analogInputToDigitalPin(TEMP_0_PIN),
+#define _E1_PINS
+#define _E2_PINS
+#define _E3_PINS
 
-//List of pins which to ignore when asked to change by gcode, 0 and 1 are RX and TX, do not mess with those!
-#define _E0_PINS E0_STEP_PIN, E0_DIR_PIN, E0_ENABLE_PIN, HEATER_0_PIN,
 #if EXTRUDERS > 1
-  #define _E1_PINS E1_STEP_PIN, E1_DIR_PIN, E1_ENABLE_PIN, HEATER_1_PIN,
-#else
-  #define _E1_PINS
-#endif
-#if EXTRUDERS > 2
-  #define _E2_PINS E2_STEP_PIN, E2_DIR_PIN, E2_ENABLE_PIN, HEATER_2_PIN,
-#else
-  #define _E2_PINS
-#endif
-#if EXTRUDERS > 3
-  #define _E3_PINS E3_STEP_PIN, E3_DIR_PIN, E3_ENABLE_PIN, HEATER_3_PIN,
-#else
-  #define _E3_PINS
+  #define _E1_PINS E1_STEP_PIN, E1_DIR_PIN, E1_ENABLE_PIN, HEATER_1_PIN, analogInputToDigitalPin(TEMP_1_PIN),
+  #if EXTRUDERS > 2
+    #define _E2_PINS E2_STEP_PIN, E2_DIR_PIN, E2_ENABLE_PIN, HEATER_2_PIN, analogInputToDigitalPin(TEMP_2_PIN),
+    #if EXTRUDERS > 3
+      #define _E3_PINS E3_STEP_PIN, E3_DIR_PIN, E3_ENABLE_PIN, HEATER_3_PIN, analogInputToDigitalPin(TEMP_3_PIN),
+    #endif
+  #endif
 #endif
 
 #ifdef X_STOP_PIN
@@ -3007,19 +159,21 @@ Fan_2 2
 #endif
 
 #ifdef DISABLE_MAX_ENDSTOPS
-#define X_MAX_PIN          -1
-#define Y_MAX_PIN          -1
-#define Z_MAX_PIN          -1
+  #define X_MAX_PIN          -1
+  #define Y_MAX_PIN          -1
+  #define Z_MAX_PIN          -1
 #endif
 
 #ifdef DISABLE_MIN_ENDSTOPS
-#define X_MIN_PIN          -1
-#define Y_MIN_PIN          -1
-#define Z_MIN_PIN          -1
+  #define X_MIN_PIN          -1
+  #define Y_MIN_PIN          -1
+  #define Z_MIN_PIN          -1
 #endif
 
-#define SENSITIVE_PINS {0, 1, X_STEP_PIN, X_DIR_PIN, X_ENABLE_PIN, X_MIN_PIN, X_MAX_PIN, Y_STEP_PIN, Y_DIR_PIN, Y_ENABLE_PIN, Y_MIN_PIN, Y_MAX_PIN, Z_STEP_PIN, Z_DIR_PIN, Z_ENABLE_PIN, Z_MIN_PIN, Z_MAX_PIN, PS_ON_PIN, \
-                        HEATER_BED_PIN, FAN_PIN,                  \
-                        _E0_PINS _E1_PINS _E2_PINS _E3_PINS           \
-                        analogInputToDigitalPin(TEMP_0_PIN), analogInputToDigitalPin(TEMP_1_PIN), analogInputToDigitalPin(TEMP_2_PIN), analogInputToDigitalPin(TEMP_3_PIN), analogInputToDigitalPin(TEMP_BED_PIN) }
+#define SENSITIVE_PINS { 0, 1, X_STEP_PIN, X_DIR_PIN, X_ENABLE_PIN, X_MIN_PIN, X_MAX_PIN, Y_STEP_PIN, Y_DIR_PIN, Y_ENABLE_PIN, Y_MIN_PIN, Y_MAX_PIN, Z_STEP_PIN, Z_DIR_PIN, Z_ENABLE_PIN, Z_MIN_PIN, Z_MAX_PIN, PS_ON_PIN, \
+                        HEATER_BED_PIN, FAN_PIN, \
+                        _E0_PINS _E1_PINS _E2_PINS _E3_PINS \
+                        analogInputToDigitalPin(TEMP_BED_PIN) \
+                       }
+
 #endif //__PINS_H
diff --git a/Marlin/pins_3DRAG.h b/Marlin/pins_3DRAG.h
new file mode 100644
index 0000000..4191dbc
--- /dev/null
+++ b/Marlin/pins_3DRAG.h
@@ -0,0 +1,37 @@
+/**
+ * 3DRAG (and K8200) Arduino Mega with RAMPS v1.3 pin assignments
+ */
+
+#include "pins_RAMPS_13.h"
+
+#define X_MAX_PIN          2
+#define Y_MAX_PIN          15
+#define Z_MAX_PIN          -1
+
+#define SDSS               25//53
+
+#define BEEPER             33
+
+#define FAN_PIN            8
+
+#define HEATER_0_PIN       10
+#define HEATER_1_PIN       12
+#define HEATER_2_PIN       6
+
+#define HEATER_BED_PIN     9    // BED
+
+#if defined(ULTRA_LCD) && defined(NEWPANEL)
+  #define BEEPER -1
+
+  #define LCD_PINS_RS 27
+  #define LCD_PINS_ENABLE 29
+  #define LCD_PINS_D4 37
+  #define LCD_PINS_D5 35
+  #define LCD_PINS_D6 33
+  #define LCD_PINS_D7 31
+
+  // Buttons
+  #define BTN_EN1 16
+  #define BTN_EN2 17
+  #define BTN_ENC 23 //the click
+#endif // ULTRA_LCD && NEWPANEL
diff --git a/Marlin/pins_5DPRINT.h b/Marlin/pins_5DPRINT.h
new file mode 100644
index 0000000..20e69ef
--- /dev/null
+++ b/Marlin/pins_5DPRINT.h
@@ -0,0 +1,75 @@
+/**
+ * 5DPrint D8 Driver board pin assignments
+ *
+ * https://bitbucket.org/makible/5dprint-d8-controller-board
+ */
+
+#ifndef __AVR_AT90USB1286__
+  #error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define AT90USB 1286  // Disable MarlinSerial etc.
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN          0
+#define X_DIR_PIN           1
+#define X_ENABLE_PIN       23
+#define X_STOP_PIN         37
+
+#define Y_STEP_PIN          2
+#define Y_DIR_PIN           3
+#define Y_ENABLE_PIN       19
+#define Y_STOP_PIN         36
+
+#define Z_STEP_PIN          4
+#define Z_DIR_PIN           5
+#define Z_ENABLE_PIN       18
+#define Z_STOP_PIN         39
+
+#define E0_STEP_PIN         6
+#define E0_DIR_PIN          7
+#define E0_ENABLE_PIN      17
+
+#define HEATER_0_PIN       21  // Extruder
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+#define HEATER_BED_PIN     20  // Bed
+// You may need to change FAN_PIN to 16 because Marlin isn't using fastio.h
+// for the fan and Teensyduino uses a different pin mapping.
+#define FAN_PIN            16  // Fan
+
+#define TEMP_0_PIN          1  // Extruder / Analog pin numbering
+#define TEMP_BED_PIN        0  // Bed / Analog pin numbering
+
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+
+#define SDPOWER            -1
+#define LED_PIN            -1
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+#define ALARM_PIN          -1
+
+// The SDSS pin uses a different pin mapping from file Sd2PinMap.h
+#define SDSS               20
+
+#ifndef SDSUPPORT
+// these pins are defined in the SD library if building with SD support
+  #define SCK_PIN           9
+  #define MISO_PIN         11
+  #define MOSI_PIN         10
+#endif
+
+// Microstepping pins
+// Note that the pin mapping is not from fastio.h
+// See Sd2PinMap.h for the pin configurations
+#define X_MS1_PIN 25
+#define X_MS2_PIN 26
+#define Y_MS1_PIN 9
+#define Y_MS2_PIN 8
+#define Z_MS1_PIN 7
+#define Z_MS2_PIN 6
+#define E0_MS1_PIN 5
+#define E0_MS2_PIN 4
+
diff --git a/Marlin/pins_99.h b/Marlin/pins_99.h
new file mode 100644
index 0000000..54197f0
--- /dev/null
+++ b/Marlin/pins_99.h
@@ -0,0 +1,38 @@
+/**
+ * Board 99 pin assignments
+ */
+
+#define X_STEP_PIN          2
+#define X_DIR_PIN           3
+#define X_ENABLE_PIN        -1
+#define X_STOP_PIN          16
+
+#define Y_STEP_PIN          5
+#define Y_DIR_PIN           6
+#define Y_ENABLE_PIN       -1
+#define Y_STOP_PIN          67
+
+#define Z_STEP_PIN          62
+#define Z_DIR_PIN           63
+#define Z_ENABLE_PIN       -1
+#define Z_STOP_PIN          59
+
+#define E0_STEP_PIN         65
+#define E0_DIR_PIN          66
+#define E0_ENABLE_PIN      -1
+
+#define SDPOWER            -1
+#define SDSS               53
+#define LED_PIN            -1
+#define FAN_PIN            -1
+#define PS_ON_PIN           9
+#define KILL_PIN           -1
+
+#define HEATER_0_PIN        13
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+#define TEMP_0_PIN          6   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+#define TEMP_1_PIN         -1   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+#define TEMP_2_PIN         -1   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+#define HEATER_BED_PIN      4
+#define TEMP_BED_PIN       10
diff --git a/Marlin/pins_AZTEEG_X1.h b/Marlin/pins_AZTEEG_X1.h
new file mode 100644
index 0000000..97a8c3e
--- /dev/null
+++ b/Marlin/pins_AZTEEG_X1.h
@@ -0,0 +1,7 @@
+/**
+ * Azteeg X1 pin assignments
+ */
+
+#define SANGUINOLOLU_V_1_2
+
+#include "pins_SANGUINOLOLU_11.h"
diff --git a/Marlin/pins_AZTEEG_X3.h b/Marlin/pins_AZTEEG_X3.h
new file mode 100644
index 0000000..7eb8eae
--- /dev/null
+++ b/Marlin/pins_AZTEEG_X3.h
@@ -0,0 +1,5 @@
+/**
+ * AZTEEG_X3 Arduino Mega with RAMPS v1.3 pin assignments
+ */
+
+#include "pins_RAMPS_13.h"
diff --git a/Marlin/pins_AZTEEG_X3_PRO.h b/Marlin/pins_AZTEEG_X3_PRO.h
new file mode 100644
index 0000000..ddb055a
--- /dev/null
+++ b/Marlin/pins_AZTEEG_X3_PRO.h
@@ -0,0 +1,30 @@
+/**
+ * AZTEEG_X3_PRO (Arduino Mega) pin assignments
+ */
+
+#include "pins_RAMPS_13.h"
+
+#define E2_STEP_PIN        23
+#define E2_DIR_PIN         25
+#define E2_ENABLE_PIN      40
+
+#define E3_STEP_PIN        27
+#define E3_DIR_PIN         29
+#define E3_ENABLE_PIN      41
+
+#define E4_STEP_PIN        43
+#define E4_DIR_PIN         37
+#define E4_ENABLE_PIN      42
+
+#define HEATER_2_PIN       16
+#define HEATER_3_PIN       17
+#define HEATER_4_PIN       4
+#define HEATER_5_PIN       5
+#define HEATER_6_PIN       6
+#define HEATER_7_PIN       11
+
+#define TEMP_2_PIN         12   // ANALOG NUMBERING
+#define TEMP_3_PIN         11   // ANALOG NUMBERING
+#define TEMP_4_PIN         10   // ANALOG NUMBERING
+#define TC1                4    // ANALOG NUMBERING Thermo couple on Azteeg X3Pro
+#define TC2                5    // ANALOG NUMBERING Thermo couple on Azteeg X3Pro
diff --git a/Marlin/pins_BRAINWAVE.h b/Marlin/pins_BRAINWAVE.h
new file mode 100644
index 0000000..3e2b1cf
--- /dev/null
+++ b/Marlin/pins_BRAINWAVE.h
@@ -0,0 +1,61 @@
+/**
+ * Brainwave 1.0 pin assignments (AT90USB646)
+ *
+ * Requires hardware bundle for Arduino:
+ * https://github.com/unrepentantgeek/brainwave-arduino
+ */
+
+#ifndef __AVR_AT90USB646__
+  #error Oops!  Make sure you have 'Brainwave' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define AT90USB 646  // Disable MarlinSerial etc.
+
+#define X_STEP_PIN         27
+#define X_DIR_PIN          29
+#define X_ENABLE_PIN       28
+#define X_STOP_PIN          7
+#define X_ATT_PIN          26
+
+#define Y_STEP_PIN         31
+#define Y_DIR_PIN          33
+#define Y_ENABLE_PIN       32
+#define Y_STOP_PIN          6
+#define Y_ATT_PIN          30
+
+#define Z_STEP_PIN         17
+#define Z_DIR_PIN          19
+#define Z_ENABLE_PIN       18
+#define Z_STOP_PIN          5
+#define Z_ATT_PIN          16
+
+#define E0_STEP_PIN        21
+#define E0_DIR_PIN         23
+#define E0_ENABLE_PIN      22
+#define E0_ATT_PIN         20
+
+#define HEATER_0_PIN        4  // Extruder
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+#define HEATER_BED_PIN     38  // Bed
+#define FAN_PIN             3  // Fan
+
+#define TEMP_0_PIN          7  // Extruder / Analog pin numbering
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+#define TEMP_BED_PIN        6  // Bed / Analog pin numbering
+
+#define SDPOWER            -1
+#define SDSS               -1
+#define LED_PIN            39
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+#define ALARM_PIN          -1
+
+#ifndef SDSUPPORT
+  // these pins are defined in the SD library if building with SD support
+  #define SCK_PIN           9
+  #define MISO_PIN         11
+  #define MOSI_PIN         10
+#endif
+
diff --git a/Marlin/pins_CHEAPTRONIC.h b/Marlin/pins_CHEAPTRONIC.h
new file mode 100644
index 0000000..83d67e5
--- /dev/null
+++ b/Marlin/pins_CHEAPTRONIC.h
@@ -0,0 +1,95 @@
+/**
+ * Cheaptronic v1.0 pin assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH        true
+
+// X motor stepper
+#define X_STEP_PIN 14
+#define X_DIR_PIN 15
+#define X_ENABLE_PIN 24
+
+// X endstop
+#define X_MIN_PIN 3
+#define X_MAX_PIN -1
+
+// Y motor stepper
+#define Y_STEP_PIN 35
+#define Y_DIR_PIN 36
+#define Y_ENABLE_PIN 31
+
+// Y endstop
+#define Y_MIN_PIN 2
+#define Y_MAX_PIN -1
+
+// Z motor stepper
+#define Z_STEP_PIN 40
+#define Z_DIR_PIN 41
+#define Z_ENABLE_PIN 37
+
+// Z endstop
+#define Z_MIN_PIN 5
+#define Z_MAX_PIN -1
+
+// Extruder 0 stepper
+#define E0_STEP_PIN 26
+#define E0_DIR_PIN 28
+#define E0_ENABLE_PIN 25
+
+// Extruder 1 stepper
+#define E1_STEP_PIN 33
+#define E1_DIR_PIN 34
+#define E1_ENABLE_PIN 30
+
+#define SDPOWER -1
+#define SDSS -1
+#define LED_PIN -1
+
+// FAN
+#define FAN_PIN -1
+
+#define PS_ON_PIN -1
+#define KILL_PIN -1
+
+#define HEATER_0_PIN 19 // EXTRUDER 1
+#define HEATER_1_PIN 23 // EXTRUDER 2
+// HeatedBad
+#define HEATER_BED_PIN 22
+// Cheaptronic v1.0 hasent EXTRUDER 3
+#define HEATER_2_PIN -1
+
+// Temperature sensors
+#define TEMP_0_PIN 15
+#define TEMP_1_PIN 14
+#define TEMP_2_PIN -1
+#define TEMP_BED_PIN 13
+
+// Cheaptronic v1.0 doesn't support LCD
+#define LCD_PINS_RS -1
+#define LCD_PINS_ENABLE -1
+#define LCD_PINS_D4 -1
+#define LCD_PINS_D5 -1
+#define LCD_PINS_D6 -1
+#define LCD_PINS_D7 -1
+
+// Cheaptronic v1.0 doesn't support keypad
+#define BTN_EN1 -1
+#define BTN_EN2 -1
+#define BTN_ENC -1
+
+#define BLEN_C 2
+#define BLEN_B 1
+#define BLEN_A 0
+
+// Cheaptronic v1.0 does not use this port
+#define SDCARDDETECT -1
+
+// Encoder rotation values
+#define encrot0 0
+#define encrot1 2
+#define encrot2 3
+#define encrot3 1
diff --git a/Marlin/pins_DUEMILANOVE_328P.h b/Marlin/pins_DUEMILANOVE_328P.h
new file mode 100644
index 0000000..9e47055
--- /dev/null
+++ b/Marlin/pins_DUEMILANOVE_328P.h
@@ -0,0 +1,43 @@
+/**
+ * Duemilanove w/ ATMega328P pin assignments
+ */
+
+#ifndef __AVR_ATmega328P__
+  #error Oops!  Make sure you have 'Arduino Duemilanove w/ ATMega328' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN         19
+#define X_DIR_PIN          18
+#define X_ENABLE_PIN       -1
+#define X_STOP_PIN         17
+
+#define Y_STEP_PIN         10
+#define Y_DIR_PIN           7
+#define Y_ENABLE_PIN       -1
+#define Y_STOP_PIN          8
+
+#define Z_STEP_PIN         13
+#define Z_DIR_PIN           3
+#define Z_ENABLE_PIN        2
+#define Z_STOP_PIN          4
+
+#define E0_STEP_PIN         11
+#define E0_DIR_PIN          12
+#define E0_ENABLE_PIN       -1
+
+#define SDPOWER          -1
+#define SDSS          -1
+#define LED_PIN            -1
+#define FAN_PIN             5
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+
+#define HEATER_0_PIN        6
+#define HEATER_1_PIN        -1
+#define HEATER_2_PIN        -1
+#define TEMP_0_PIN          0    // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+#define TEMP_1_PIN          -1
+#define TEMP_2_PIN          -1
+#define HEATER_BED_PIN      -1
+#define TEMP_BED_PIN        -1
+
diff --git a/Marlin/pins_ELEFU_3.h b/Marlin/pins_ELEFU_3.h
new file mode 100644
index 0000000..4c9663a
--- /dev/null
+++ b/Marlin/pins_ELEFU_3.h
@@ -0,0 +1,116 @@
+/**
+ * Elefu RA Board Pin Assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN         49
+#define X_DIR_PIN          13
+#define X_ENABLE_PIN       48
+#define X_MIN_PIN          35
+#define X_MAX_PIN          34
+
+#define Y_STEP_PIN         11
+#define Y_DIR_PIN          9
+#define Y_ENABLE_PIN       12
+#define Y_MIN_PIN          33
+#define Y_MAX_PIN          32
+
+#define Z_STEP_PIN         7
+#define Z_DIR_PIN          6
+#define Z_ENABLE_PIN       8
+#define Z_MIN_PIN          31
+#define Z_MAX_PIN          30
+
+#define E2_STEP_PIN        43
+#define E2_DIR_PIN         47
+#define E2_ENABLE_PIN      42
+
+#define E1_STEP_PIN        18
+#define E1_DIR_PIN         19
+#define E1_ENABLE_PIN      38
+
+#define E0_STEP_PIN        40
+#define E0_DIR_PIN         41
+#define E0_ENABLE_PIN      37
+
+#define SDPOWER            -1
+#define LED_PIN            -1 //Use +12V Aux port for LED Ring
+
+#define FAN_PIN            16 //5V PWM
+
+#define PS_ON_PIN          10 //Set to -1 if using a manual switch on the PWRSW Connector
+#define SLEEP_WAKE_PIN     26 //This feature still needs work
+
+#define HEATER_0_PIN       45 //12V PWM1
+#define HEATER_1_PIN       46 //12V PWM2
+#define HEATER_2_PIN       17 //12V PWM3
+#define HEATER_BED_PIN     44 //DOUBLE 12V PWM
+#define TEMP_0_PIN         3  //ANALOG NUMBERING
+#define TEMP_1_PIN         2  //ANALOG NUMBERING
+#define TEMP_2_PIN         1  //ANALOG NUMBERING
+#define TEMP_BED_PIN       0  //ANALOG NUMBERING
+
+#define BEEPER             36
+
+#define KILL_PIN           -1
+
+// M240  Triggers a camera by emulating a Canon RC-1 Remote
+// Data from: http://www.doc-diy.net/photo/rc-1_hacked/
+#define PHOTOGRAPH_PIN     29
+
+#ifdef RA_CONTROL_PANEL
+
+  #define SDSS             53
+  #define SDCARDDETECT     28
+
+  #define BTN_EN1          14
+  #define BTN_EN2          39
+  #define BTN_ENC          15  //the click
+
+  #define BLEN_C           2
+  #define BLEN_B           1
+  #define BLEN_A           0
+
+  //encoder rotation values
+  #define encrot0          0
+  #define encrot1          2
+  #define encrot2          3
+  #define encrot3          1
+
+#endif // RA_CONTROL_PANEL
+
+#ifdef RA_DISCO
+  //variables for which pins the TLC5947 is using
+  #define TLC_CLOCK_PIN    25
+  #define TLC_BLANK_PIN    23
+  #define TLC_XLAT_PIN     22
+  #define TLC_DATA_PIN     24
+
+  //We also need to define pin to port number mapping for the 2560 to match the pins listed above. If you change the TLC pins, update this as well per the 2560 datasheet!
+  //This currently only works with the RA Board.
+  #define TLC_CLOCK_BIT 3 //bit 3 on port A
+  #define TLC_CLOCK_PORT &PORTA //bit 3 on port A
+
+  #define TLC_BLANK_BIT 1 //bit 1 on port A
+  #define TLC_BLANK_PORT &PORTA //bit 1 on port A
+
+  #define TLC_DATA_BIT 2 //bit 2 on port A
+  #define TLC_DATA_PORT &PORTA //bit 2 on port A
+
+  #define TLC_XLAT_BIT 0 //bit 0 on port A
+  #define TLC_XLAT_PORT &PORTA //bit 0 on port A
+
+  //change this to match your situation. Lots of TLCs takes up the arduino SRAM very quickly, so be careful
+  //Leave it at at least 1 if you have enabled RA_LIGHTING
+  //The number of TLC5947 boards chained together for use with the animation, additional ones will repeat the animation on them, but are not individually addressable and mimic those before them. You can leave the default at 2 even if you only have 1 TLC5947 module.
+  #define NUM_TLCS 2
+
+  //These TRANS_ARRAY values let you change the order the LEDs on the lighting modules will animate for chase functions.
+  //Modify them according to your specific situation.
+  //NOTE: the array should be 8 long for every TLC you have. These defaults assume (2) TLCs.
+  #define TRANS_ARRAY {0, 1, 2, 3, 4, 5, 6, 7, 15, 14, 13, 12, 11, 10, 9, 8} //forwards
+  //#define TRANS_ARRAY {7, 6, 5, 4, 3, 2, 1, 0, 8, 9, 10, 11, 12, 13, 14, 15} //backwards
+#endif // RA_DISCO
diff --git a/Marlin/pins_GEN3_MONOLITHIC.h b/Marlin/pins_GEN3_MONOLITHIC.h
new file mode 100644
index 0000000..17a7688
--- /dev/null
+++ b/Marlin/pins_GEN3_MONOLITHIC.h
@@ -0,0 +1,61 @@
+/**
+ * Gen3 Monolithic Electronics pin assignments
+ */
+
+#ifndef __AVR_ATmega644P__
+  #error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define DEBUG_PIN 0
+
+// x axis
+#define X_STEP_PIN 15
+#define X_DIR_PIN 18
+#define X_MIN_PIN 20
+// Alex Checar #define X_STOP_PIN         20
+#define X_ENABLE_PIN 24 // actually uses Y_enable_pin
+#define X_MAX_PIN -1
+
+// y axis
+#define Y_STEP_PIN 23
+#define Y_DIR_PIN 22
+#define Y_MIN_PIN 25
+// Alex Checar #define Y_STOP_PIN         25
+#define Y_ENABLE_PIN 24 // shared with X_enable_pin
+#define Y_MAX_PIN -1
+
+// z axis
+#define Z_STEP_PIN 27
+#define Z_DIR_PIN 28
+#define Z_MIN_PIN 30
+// Alex Checar #define Z_STOP_PIN         30
+#define Z_ENABLE_PIN 29
+#define Z_MAX_PIN -1
+
+// extruder pins
+#define E0_STEP_PIN         12
+#define E0_DIR_PIN          17
+#define E0_ENABLE_PIN       3
+
+#define HEATER_0_PIN 16
+#define TEMP_0_PIN 0
+
+#define FAN_PIN -1
+
+// bed pins
+#define HEATER_BED_PIN -1
+#define TEMP_BED_PIN -1
+
+
+#define SDSS     -1
+#define SDPOWER          -1
+#define LED_PIN          -1
+
+// pin for controlling the PSU.
+#define PS_ON_PIN       14  // Alex, Do this work on the card?
+
+// Alex extras from Gen3+
+#define KILL_PIN           -1
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+#define HEATER_2_PIN       -1
diff --git a/Marlin/pins_GEN3_PLUS.h b/Marlin/pins_GEN3_PLUS.h
new file mode 100644
index 0000000..4d216bb
--- /dev/null
+++ b/Marlin/pins_GEN3_PLUS.h
@@ -0,0 +1,45 @@
+/**
+ * Gen3+ pin assignments
+ */
+
+#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega1284P__)
+  #error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN         15
+#define X_DIR_PIN          18
+#define X_STOP_PIN         20
+
+#define Y_STEP_PIN         23
+#define Y_DIR_PIN          22
+#define Y_STOP_PIN         25
+
+#define Z_STEP_PIN         27
+#define Z_DIR_PIN          28
+#define Z_STOP_PIN         30
+
+#define E0_STEP_PIN        17
+#define E0_DIR_PIN         21
+
+#define LED_PIN            -1
+
+#define FAN_PIN            -1
+
+#define PS_ON_PIN         14
+#define KILL_PIN           -1
+
+#define HEATER_0_PIN       12 // (extruder)
+
+#define HEATER_BED_PIN     16 // (bed)
+#define X_ENABLE_PIN       19
+#define Y_ENABLE_PIN       24
+#define Z_ENABLE_PIN       29
+#define E0_ENABLE_PIN      13
+
+#define TEMP_0_PIN          0   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 33 extruder)
+#define TEMP_1_PIN         -1   
+#define TEMP_2_PIN         -1
+#define TEMP_BED_PIN        5   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 34 bed)  
+#define SDPOWER            -1
+#define SDSS               4
+#define HEATER_2_PIN       -1
diff --git a/Marlin/pins_GEN6.h b/Marlin/pins_GEN6.h
new file mode 100644
index 0000000..ebbf323
--- /dev/null
+++ b/Marlin/pins_GEN6.h
@@ -0,0 +1,62 @@
+/**
+ * Gen6 pin assignments
+ */
+
+#ifndef __AVR_ATmega644P__
+  #ifndef __AVR_ATmega1284P__
+    #error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
+  #endif
+#endif
+
+//x axis pins
+#define X_STEP_PIN      15
+#define X_DIR_PIN       18
+#define X_ENABLE_PIN    19
+#define X_STOP_PIN      20
+
+//y axis pins
+#define Y_STEP_PIN      23
+#define Y_DIR_PIN       22
+#define Y_ENABLE_PIN    24
+#define Y_STOP_PIN      25
+
+//z axis pins
+#define Z_STEP_PIN      27
+#define Z_DIR_PIN       28
+#define Z_ENABLE_PIN    29
+#define Z_STOP_PIN      30
+
+//extruder pins
+#define E0_STEP_PIN      4    //Edited @ EJE Electronics 20100715
+#define E0_DIR_PIN       2    //Edited @ EJE Electronics 20100715
+#define E0_ENABLE_PIN    3    //Added @ EJE Electronics 20100715
+#define TEMP_0_PIN      5     //changed @ rkoeppl 20110410
+#define TEMP_1_PIN      -1    //changed @ rkoeppl 20110410
+
+
+#define TEMP_2_PIN      -1    //changed @ rkoeppl 20110410
+#define HEATER_0_PIN    14    //changed @ rkoeppl 20110410
+#define HEATER_1_PIN    -1
+#define HEATER_2_PIN    -1
+
+#if MB(GEN6)
+  #define HEATER_BED_PIN  -1    //changed @ rkoeppl 20110410
+  #define TEMP_BED_PIN    -1    //changed @ rkoeppl 20110410
+#else
+  #define HEATER_BED_PIN   1    //changed @ rkoeppl 20110410
+  #define TEMP_BED_PIN     0    //changed @ rkoeppl 20110410
+#endif
+
+#define SDPOWER          -1
+#define SDSS          17
+#define LED_PIN         -1    //changed @ rkoeppl 20110410
+#define FAN_PIN         -1    //changed @ rkoeppl 20110410
+#define PS_ON_PIN       -1    //changed @ rkoeppl 20110410
+#define KILL_PIN        -1    //changed @ drakelive 20120830
+//our pin for debugging.
+
+#define DEBUG_PIN        0
+
+//our RS485 pins
+#define TX_ENABLE_PIN 12
+#define RX_ENABLE_PIN 13
diff --git a/Marlin/pins_GEN6_DELUXE.h b/Marlin/pins_GEN6_DELUXE.h
new file mode 100644
index 0000000..c1ffc38
--- /dev/null
+++ b/Marlin/pins_GEN6_DELUXE.h
@@ -0,0 +1,5 @@
+/**
+ * Gen6 Deluxe pin assignments
+ */
+
+#include "pins_GEN6.h"
diff --git a/Marlin/pins_GEN7_12.h b/Marlin/pins_GEN7_12.h
new file mode 100644
index 0000000..b2e9c79
--- /dev/null
+++ b/Marlin/pins_GEN7_12.h
@@ -0,0 +1,72 @@
+/**
+ * Gen7 v1.1, v1.2, v1.3 pin assignments
+ */
+
+#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
+  #error Oops!  Make sure you have 'Gen7' selected from the 'Tools -> Boards' menu.
+#endif
+
+#ifndef GEN7_VERSION
+  #define GEN7_VERSION 12 // v1.x
+#endif
+
+//x axis pins
+#define X_STEP_PIN 19
+#define X_DIR_PIN 18
+#define X_ENABLE_PIN 24
+#define X_STOP_PIN 7
+
+//y axis pins
+#define Y_STEP_PIN 23
+#define Y_DIR_PIN 22
+#define Y_ENABLE_PIN 24
+#define Y_STOP_PIN 5
+
+//z axis pins
+#define Z_STEP_PIN 26
+#define Z_DIR_PIN 25
+#define Z_ENABLE_PIN 24
+#define Z_MIN_PIN 1
+#define Z_MAX_PIN 0
+
+//extruder pins
+#define E0_STEP_PIN 28
+#define E0_DIR_PIN 27
+#define E0_ENABLE_PIN 24
+
+#define TEMP_0_PIN 1
+#define TEMP_1_PIN -1
+#define TEMP_2_PIN -1
+#define TEMP_BED_PIN 2
+
+#define HEATER_0_PIN 4
+#define HEATER_1_PIN -1
+#define HEATER_2_PIN -1
+#define HEATER_BED_PIN 3
+
+#define KILL_PIN -1
+
+#define SDPOWER -1
+#define SDSS -1 // SCL pin of I2C header
+#define LED_PIN -1
+
+#if (GEN7_VERSION >= 13)
+  // Gen7 v1.3 removed the fan pin
+  #define FAN_PIN -1
+#else
+  #define FAN_PIN 31
+#endif
+
+#define PS_ON_PIN 15
+
+//All these generations of Gen7 supply thermistor power
+//via PS_ON, so ignore bad thermistor readings
+#define BOGUS_TEMPERATURE_FAILSAFE_OVERRIDE
+
+//our pin for debugging.
+#define DEBUG_PIN 0
+
+//our RS485 pins
+#define TX_ENABLE_PIN 12
+#define RX_ENABLE_PIN 13
+
diff --git a/Marlin/pins_GEN7_13.h b/Marlin/pins_GEN7_13.h
new file mode 100644
index 0000000..4acca75
--- /dev/null
+++ b/Marlin/pins_GEN7_13.h
@@ -0,0 +1,8 @@
+/**
+ * Gen7 v1.3 pin assignments
+ */
+
+#define MOTHERBOARD BOARD_GEN7_12
+#define GEN7_VERSION 13 // v1.3
+
+#include "pins_GEN7_12.h"
diff --git a/Marlin/pins_GEN7_14.h b/Marlin/pins_GEN7_14.h
new file mode 100644
index 0000000..41e1ac7
--- /dev/null
+++ b/Marlin/pins_GEN7_14.h
@@ -0,0 +1,60 @@
+/**
+ * Gen7 v1.4 pin assignments
+ */
+
+#define GEN7_VERSION 14 // v1.4
+
+#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
+  #error Oops!  Make sure you have 'Gen7' selected from the 'Tools -> Boards' menu.
+#endif
+
+//x axis pins
+#define X_STEP_PIN 29
+#define X_DIR_PIN 28
+#define X_ENABLE_PIN 25
+#define X_STOP_PIN 0
+
+//y axis pins
+#define Y_STEP_PIN 27
+#define Y_DIR_PIN 26
+#define Y_ENABLE_PIN 25
+#define Y_STOP_PIN 1
+
+//z axis pins
+#define Z_STEP_PIN 23
+#define Z_DIR_PIN 22
+#define Z_ENABLE_PIN 25
+#define Z_STOP_PIN 2
+
+//extruder pins
+#define E0_STEP_PIN 19
+#define E0_DIR_PIN 18
+#define E0_ENABLE_PIN 25
+
+#define TEMP_0_PIN 1
+#define TEMP_1_PIN -1
+#define TEMP_2_PIN -1
+#define TEMP_BED_PIN 0
+
+#define HEATER_0_PIN 4
+#define HEATER_1_PIN -1
+#define HEATER_2_PIN -1
+#define HEATER_BED_PIN 3
+
+#define KILL_PIN -1
+
+#define SDPOWER -1
+#define SDSS -1 // SCL pin of I2C header
+#define LED_PIN -1
+
+#define FAN_PIN -1
+
+#define PS_ON_PIN 15
+
+//our pin for debugging.
+#define DEBUG_PIN 0
+
+//our RS485 pins
+#define TX_ENABLE_PIN 12
+#define RX_ENABLE_PIN 13
+
diff --git a/Marlin/pins_GEN7_CUSTOM.h b/Marlin/pins_GEN7_CUSTOM.h
new file mode 100644
index 0000000..a8626ec
--- /dev/null
+++ b/Marlin/pins_GEN7_CUSTOM.h
@@ -0,0 +1,76 @@
+/**
+ * Gen7 Alfons3 board pin assignments
+ *
+ * These Pins are assigned for the modified GEN7 Board from Alfons3.
+ * Please review the pins and adjust them for your needs.
+ */ 
+
+#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
+  #error Oops!  Make sure you have 'Gen7' selected from the 'Tools -> Boards' menu.
+#endif
+
+//x axis pins
+#define X_STEP_PIN      21                  // different from standard GEN7
+#define X_DIR_PIN       20                  // different from standard GEN7
+#define X_ENABLE_PIN    24
+#define X_STOP_PIN      0
+
+//y axis pins
+#define Y_STEP_PIN      23
+#define Y_DIR_PIN       22
+#define Y_ENABLE_PIN    24
+#define Y_STOP_PIN      1
+
+//z axis pins
+#define Z_STEP_PIN      26
+#define Z_DIR_PIN       25
+#define Z_ENABLE_PIN    24
+#define Z_STOP_PIN      2
+
+//extruder pins
+#define E0_STEP_PIN     28
+#define E0_DIR_PIN      27
+#define E0_ENABLE_PIN   24
+
+#define TEMP_0_PIN      2
+#define TEMP_1_PIN      -1
+#define TEMP_2_PIN      -1
+#define TEMP_BED_PIN    1   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 34 bed)
+
+#define HEATER_0_PIN    4
+#define HEATER_1_PIN    -1
+#define HEATER_2_PIN    -1
+#define HEATER_BED_PIN  3  // (bed)
+
+#define SDPOWER         -1
+#define SDSS            31                  // SCL pin of I2C header || CS Pin for SD Card support
+#define LED_PIN         -1
+
+#define FAN_PIN         -1
+#define PS_ON_PIN       19
+//our pin for debugging.
+
+#define DEBUG_PIN       -1
+
+//our RS485 pins
+//#define TX_ENABLE_PIN       12
+//#define RX_ENABLE_PIN       13
+
+#define BEEPER -1
+#define SDCARDDETECT -1
+#define SUICIDE_PIN -1    //has to be defined; otherwise Power_off doesn't work
+
+#define KILL_PIN -1
+//Pins for 4bit LCD Support
+#define LCD_PINS_RS 18
+#define LCD_PINS_ENABLE 17
+#define LCD_PINS_D4 16
+#define LCD_PINS_D5 15
+#define LCD_PINS_D6 13
+#define LCD_PINS_D7 14
+
+//buttons are directly attached
+#define BTN_EN1 11
+#define BTN_EN2 10
+#define BTN_ENC 12  //the click
+
diff --git a/Marlin/pins_K8200.h b/Marlin/pins_K8200.h
new file mode 100644
index 0000000..1d34547
--- /dev/null
+++ b/Marlin/pins_K8200.h
@@ -0,0 +1,6 @@
+/**
+ * K8200 Arduino Mega with RAMPS v1.3 pin assignments
+ * Identical to 3DRAG
+ */
+
+#include "pins_3DRAG.h"
diff --git a/Marlin/pins_LEAPFROG.h b/Marlin/pins_LEAPFROG.h
new file mode 100644
index 0000000..52ca619
--- /dev/null
+++ b/Marlin/pins_LEAPFROG.h
@@ -0,0 +1,62 @@
+/**
+ * Leapfrog Driver board pin assignments
+ */
+
+#if !defined(__AVR_ATmega1280__) && !defined(__AVR_ATmega2560__)
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN         28
+#define X_DIR_PIN          63
+#define X_ENABLE_PIN       29
+#define X_MIN_PIN          47
+#define X_MAX_PIN          2 //Max endstops default to disabled "-1", set to commented value to enable.
+
+#define Y_STEP_PIN         14 // A6
+#define Y_DIR_PIN          15 // A0
+#define Y_ENABLE_PIN       39
+#define Y_MIN_PIN          48
+#define Y_MAX_PIN          15
+
+#define Z_STEP_PIN         31 // A2
+#define Z_DIR_PIN          32 // A6
+#define Z_ENABLE_PIN       30 // A1
+#define Z_MIN_PIN          49
+#define Z_MAX_PIN          -1
+
+#define E0_STEP_PIN         34  //34
+#define E0_DIR_PIN          35 //35
+#define E0_ENABLE_PIN       33 //33
+
+#define E1_STEP_PIN         37 //37
+#define E1_DIR_PIN          40 //40
+#define E1_ENABLE_PIN       36 //36
+
+#define Y2_STEP_PIN         37
+#define Y2_DIR_PIN          40
+#define Y2_ENABLE_PIN       36
+
+#define Z2_STEP_PIN         37
+#define Z2_DIR_PIN          40
+#define Z2_ENABLE_PIN       36
+
+#define SDPOWER            -1
+#define SDSS               11
+#define SDCARDDETECT       -1 // 10 optional also used as mode pin
+#define LED_PIN            13
+#define FAN_PIN            7
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+#define SOL1_PIN   16
+#define SOL2_PIN    17
+
+#define HEATER_0_PIN       9
+#define HEATER_1_PIN       8 // 12
+#define HEATER_2_PIN       11 //-1 // 13
+#define TEMP_0_PIN         13 //D27   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+#define TEMP_1_PIN         15 // 1
+#define TEMP_2_PIN         -1 // 2
+#define HEATER_BED_PIN     10 // 14/15
+#define TEMP_BED_PIN       14 // 1,2 or I2C
+/*  Unused (1) (2) (3) 4 5 6 7 8 9 10 11 12 13 (14) (15) (16) 17 (18) (19) (20) (21) (22) (23) 24 (25) (26) (27) 28 (29) (30) (31)  */
+
diff --git a/Marlin/pins_MEGATRONICS.h b/Marlin/pins_MEGATRONICS.h
new file mode 100644
index 0000000..2bd0e33
--- /dev/null
+++ b/Marlin/pins_MEGATRONICS.h
@@ -0,0 +1,92 @@
+/**
+ * MegaTronics pin assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN         26
+#define X_DIR_PIN          28
+#define X_ENABLE_PIN       24
+#define X_MIN_PIN          41
+#define X_MAX_PIN          37
+
+#define Y_STEP_PIN         60 // A6
+#define Y_DIR_PIN          61 // A7
+#define Y_ENABLE_PIN       22
+#define Y_MIN_PIN          14
+#define Y_MAX_PIN          15
+
+#define Z_STEP_PIN         54 // A0
+#define Z_DIR_PIN          55 // A1
+#define Z_ENABLE_PIN       56 // A2
+#define Z_MIN_PIN          18
+#define Z_MAX_PIN          19
+
+#define E0_STEP_PIN        31
+#define E0_DIR_PIN         32
+#define E0_ENABLE_PIN      38
+
+#define E1_STEP_PIN        34
+#define E1_DIR_PIN         36
+#define E1_ENABLE_PIN      30
+
+#define SDPOWER            -1
+#define SDSS               53
+#define LED_PIN            13
+
+
+#define FAN_PIN            7 // IO pin. Buffer needed
+#define PS_ON_PIN          12
+#define KILL_PIN           -1
+
+#define HEATER_0_PIN       9    // EXTRUDER 1
+#define HEATER_1_PIN       8    // EXTRUDER 2 (FAN On Sprinter)
+#define HEATER_2_PIN       -1
+
+#if TEMP_SENSOR_0 == -1
+#define TEMP_0_PIN         8   // ANALOG NUMBERING
+#else
+#define TEMP_0_PIN         13   // ANALOG NUMBERING
+
+#endif
+
+#define TEMP_1_PIN         15   // ANALOG NUMBERING
+#define TEMP_2_PIN         -1   // ANALOG NUMBERING
+#define HEATER_BED_PIN     10   // BED
+#define TEMP_BED_PIN       14   // ANALOG NUMBERING
+
+#define BEEPER 33     // Beeper on AUX-4
+
+
+#if defined(ULTRA_LCD) && defined(NEWPANEL)
+  //arduino pin which triggers an piezzo beeper
+
+  #define LCD_PINS_RS 16
+  #define LCD_PINS_ENABLE 17
+  #define LCD_PINS_D4 23
+  #define LCD_PINS_D5 25
+  #define LCD_PINS_D6 27
+  #define LCD_PINS_D7 29
+
+  //buttons are directly attached using AUX-2
+  #define BTN_EN1 59
+  #define BTN_EN2 64
+  #define BTN_ENC 43  //the click
+
+  #define BLEN_C 2
+  #define BLEN_B 1
+  #define BLEN_A 0
+
+  #define SDCARDDETECT -1   // Ramps does not use this port
+
+    //encoder rotation values
+  #define encrot0 0
+  #define encrot1 2
+  #define encrot2 3
+  #define encrot3 1
+
+#endif // ULTRA_LCD && NEWPANEL
diff --git a/Marlin/pins_MEGATRONICS_1.h b/Marlin/pins_MEGATRONICS_1.h
new file mode 100644
index 0000000..f321941
--- /dev/null
+++ b/Marlin/pins_MEGATRONICS_1.h
@@ -0,0 +1,88 @@
+/**
+ * Minitronics v1.0 pin assignments
+ */
+
+#ifndef __AVR_ATmega1281__
+  #error Oops!  Make sure you have 'Minitronics' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN 48
+#define X_DIR_PIN 47
+#define X_ENABLE_PIN 49
+#define X_MIN_PIN 5
+#define X_MAX_PIN 2
+
+#define Y_STEP_PIN 39 // A6
+#define Y_DIR_PIN 40 // A0
+#define Y_ENABLE_PIN 38
+#define Y_MIN_PIN 2
+#define Y_MAX_PIN 15
+
+#define Z_STEP_PIN 42 // A2
+#define Z_DIR_PIN 43 // A6
+#define Z_ENABLE_PIN 41 // A1
+#define Z_MIN_PIN 6
+#define Z_MAX_PIN -1
+
+#define E0_STEP_PIN 45
+#define E0_DIR_PIN 44
+#define E0_ENABLE_PIN 27
+
+#define E1_STEP_PIN 36
+#define E1_DIR_PIN 35
+#define E1_ENABLE_PIN 37
+
+#define E2_STEP_PIN -1
+#define E2_DIR_PIN -1
+#define E2_ENABLE_PIN -1
+
+#define SDPOWER -1
+#define SDSS 16
+#define LED_PIN 46
+
+#define FAN_PIN 9
+#define FAN2_PIN -1
+#define PS_ON_PIN -1
+#define KILL_PIN -1
+
+#define HEATER_0_PIN 7 // EXTRUDER 1
+#define HEATER_1_PIN 8 // EXTRUDER 2
+#define HEATER_2_PIN -1
+
+
+#define TEMP_0_PIN 7 // ANALOG NUMBERING
+#define TEMP_1_PIN 6 // ANALOG NUMBERING
+#define TEMP_2_PIN -1 // ANALOG NUMBERING
+
+#define HEATER_BED_PIN 3 // BED
+#define TEMP_BED_PIN 6 // ANALOG NUMBERING
+
+#define BEEPER -1
+
+
+#define LCD_PINS_RS -1
+#define LCD_PINS_ENABLE -1
+#define LCD_PINS_D4 -1
+#define LCD_PINS_D5 -1
+#define LCD_PINS_D6 -1
+#define LCD_PINS_D7 -1
+
+
+// Buttons are directly attached using keypad
+#define BTN_EN1 -1
+#define BTN_EN2 -1
+#define BTN_ENC -1 // the click
+
+#define BLEN_C 2
+#define BLEN_B 1
+#define BLEN_A 0
+
+#define SDCARDDETECT -1  // Megatronics does not use this port
+
+// Encoder rotation values
+#define encrot0 0
+#define encrot1 2
+#define encrot2 3
+#define encrot3 1
diff --git a/Marlin/pins_MEGATRONICS_2.h b/Marlin/pins_MEGATRONICS_2.h
new file mode 100644
index 0000000..064431b
--- /dev/null
+++ b/Marlin/pins_MEGATRONICS_2.h
@@ -0,0 +1,103 @@
+/**
+ * MegaTronics v2.0 pin assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN 26
+#define X_DIR_PIN 27
+#define X_ENABLE_PIN 25
+#define X_MIN_PIN 37
+#define X_MAX_PIN 40
+
+#define Y_STEP_PIN 4 // A6
+#define Y_DIR_PIN 54 // A0
+#define Y_ENABLE_PIN 5
+#define Y_MIN_PIN 41
+#define Y_MAX_PIN 38
+
+#define Z_STEP_PIN 56 // A2
+#define Z_DIR_PIN 60 // A6
+#define Z_ENABLE_PIN 55 // A1
+#define Z_MIN_PIN 18
+#define Z_MAX_PIN 19
+
+#define E0_STEP_PIN 35
+#define E0_DIR_PIN 36
+#define E0_ENABLE_PIN 34
+
+#define E1_STEP_PIN 29
+#define E1_DIR_PIN 39
+#define E1_ENABLE_PIN 28
+
+#define E2_STEP_PIN 23
+#define E2_DIR_PIN 24
+#define E2_ENABLE_PIN 22
+
+#define SDPOWER -1
+#define SDSS 53
+#define LED_PIN 13
+
+#define FAN_PIN 7
+#define FAN2_PIN 6
+#define PS_ON_PIN 12
+#define KILL_PIN -1
+
+#define HEATER_0_PIN 9 // EXTRUDER 1
+#define HEATER_1_PIN 8 // EXTRUDER 2
+#define HEATER_2_PIN -1
+
+#if TEMP_SENSOR_0 == -1
+  #define TEMP_0_PIN 4 // ANALOG NUMBERING
+#else
+  #define TEMP_0_PIN 13 // ANALOG NUMBERING
+#endif
+
+
+#if TEMP_SENSOR_1 == -1
+  #define TEMP_1_PIN 8 // ANALOG NUMBERING
+#else
+  #define TEMP_1_PIN 15 // ANALOG NUMBERING
+#endif
+
+#define TEMP_2_PIN -1 // ANALOG NUMBERING
+
+#define HEATER_BED_PIN 10 // BED
+
+#if TEMP_SENSOR_BED == -1
+  #define TEMP_BED_PIN 8 // ANALOG NUMBERING
+#else
+  #define TEMP_BED_PIN 14 // ANALOG NUMBERING
+#endif
+
+#define BEEPER 64
+
+
+#define LCD_PINS_RS 14
+#define LCD_PINS_ENABLE 15
+#define LCD_PINS_D4 30
+#define LCD_PINS_D5 31
+#define LCD_PINS_D6 32
+#define LCD_PINS_D7 33
+
+
+// Buttons are directly attached using keypad
+#define BTN_EN1 61
+#define BTN_EN2 59
+#define BTN_ENC 43 //the click
+
+#define BLEN_C 2
+#define BLEN_B 1
+#define BLEN_A 0
+
+#define SDCARDDETECT -1  // Megatronics does not use this port
+
+// Encoder rotation values
+#define encrot0 0
+#define encrot1 2
+#define encrot2 3
+#define encrot3 1
diff --git a/Marlin/pins_MEGATRONICS_3.h b/Marlin/pins_MEGATRONICS_3.h
new file mode 100644
index 0000000..1ceb89a
--- /dev/null
+++ b/Marlin/pins_MEGATRONICS_3.h
@@ -0,0 +1,89 @@
+/**
+ * MegaTronics v3.0 pin assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN         58
+#define X_DIR_PIN          57
+#define X_ENABLE_PIN       59
+#define X_MIN_PIN          37
+#define X_MAX_PIN          40   // 2 // Max endstops default to disabled "-1", set to commented value to enable.
+
+#define Y_STEP_PIN         5 // A6
+#define Y_DIR_PIN          17 // A0
+#define Y_ENABLE_PIN       4
+#define Y_MIN_PIN          41
+#define Y_MAX_PIN          38   // 15
+
+#define Z_STEP_PIN         16 // A2
+#define Z_DIR_PIN          11 // A6
+#define Z_ENABLE_PIN       3 // A1
+#define Z_MIN_PIN          18
+#define Z_MAX_PIN          19
+
+#define E0_STEP_PIN        28
+#define E0_DIR_PIN         27
+#define E0_ENABLE_PIN      29
+
+#define E1_STEP_PIN        25
+#define E1_DIR_PIN         24
+#define E1_ENABLE_PIN      26
+
+#define E2_STEP_PIN        22
+#define E2_DIR_PIN         60
+#define E2_ENABLE_PIN      23
+
+#define SDPOWER -1
+#define SDSS 53
+#define LED_PIN 13
+
+#define PS_ON_PIN 12
+#define KILL_PIN -1
+
+#define HEATER_0_PIN 2
+#define HEATER_1_PIN 8
+#define HEATER_2_PIN 9
+#define HEATER_BED_PIN 10
+#define FAN_PIN 6
+#define FAN2_PIN 7
+
+#define TEMP_0_PIN   (TEMP_SENSOR_0 == -1 ?  11 : 15) // ANALOG NUMBERING
+#define TEMP_1_PIN   (TEMP_SENSOR_1 == -1 ?  10 : 13) // ANALOG NUMBERING
+#define TEMP_2_PIN   (TEMP_SENSOR_2 == -1 ?   9 : 12) // ANALOG NUMBERING
+#define TEMP_BED_PIN (TEMP_SENSOR_BED == -1 ? 8 : 14) // ANALOG NUMBERING
+
+#define BEEPER 61
+
+#define LCD_PINS_RS 32
+#define LCD_PINS_ENABLE 31
+#define LCD_PINS_D4 14
+#define LCD_PINS_D5 30
+#define LCD_PINS_D6 39
+#define LCD_PINS_D7 15
+
+#define SHIFT_CLK 43
+#define SHIFT_LD 35
+#define SHIFT_OUT 34
+#define SHIFT_EN 44
+
+// Buttons are directly attached using keypad
+#define BTN_EN1 44
+#define BTN_EN2 45
+#define BTN_ENC 33 // the click
+
+#define BLEN_C 2
+#define BLEN_B 1
+#define BLEN_A 0
+
+#define SDCARDDETECT -1	// Megatronics does not use this port
+
+// Encoder rotation values
+#define encrot0 0
+#define encrot1 2
+#define encrot2 3
+#define encrot3 1
diff --git a/Marlin/pins_MELZI.h b/Marlin/pins_MELZI.h
new file mode 100644
index 0000000..71c9fa9
--- /dev/null
+++ b/Marlin/pins_MELZI.h
@@ -0,0 +1,11 @@
+/**
+ * Melzi pin assignments
+ */
+
+#define SANGUINOLOLU_V_1_2
+
+#if defined(__AVR_ATmega1284P__)
+  #define LARGE_FLASH true
+#endif
+
+#include "pins_SANGUINOLOLU_11.h"
diff --git a/Marlin/pins_MELZI_1284.h b/Marlin/pins_MELZI_1284.h
new file mode 100644
index 0000000..2c18666
--- /dev/null
+++ b/Marlin/pins_MELZI_1284.h
@@ -0,0 +1,15 @@
+/**
+ * Melzi with ATmega1284 (MaKr3d version) pin assignments
+ */
+
+#define MELZI
+
+#undef MOTHERBOARD
+#define MOTHERBOARD BOARD_SANGUINOLOLU_11
+#define SANGUINOLOLU_V_1_2
+
+#if defined(__AVR_ATmega1284P__)
+  #define LARGE_FLASH true
+#endif
+
+#include "pins_SANGUINOLOLU_11.h"
diff --git a/Marlin/pins_OMCA.h b/Marlin/pins_OMCA.h
new file mode 100644
index 0000000..26a7973
--- /dev/null
+++ b/Marlin/pins_OMCA.h
@@ -0,0 +1,91 @@
+/**
+ * Open Motion controller with enable based extruders (Final!)
+ *
+ *                        ATMega644
+ *
+ *                        +---\/---+
+ *            (D 0) PB0  1|        |40  PA0 (AI 0 / D31)
+ *            (D 1) PB1  2|        |39  PA1 (AI 1 / D30)
+ *       INT2 (D 2) PB2  3|        |38  PA2 (AI 2 / D29)
+ *        PWM (D 3) PB3  4|        |37  PA3 (AI 3 / D28)
+ *        PWM (D 4) PB4  5|        |36  PA4 (AI 4 / D27)
+ *       MOSI (D 5) PB5  6|        |35  PA5 (AI 5 / D26)
+ *       MISO (D 6) PB6  7|        |34  PA6 (AI 6 / D25)
+ *        SCK (D 7) PB7  8|        |33  PA7 (AI 7 / D24)
+ *                  RST  9|        |32  AREF
+ *                  VCC 10|        |31  GND
+ *                  GND 11|        |30  AVCC
+ *                XTAL2 12|        |29  PC7 (D 23)
+ *                XTAL1 13|        |28  PC6 (D 22)
+ *       RX0 (D 8)  PD0 14|        |27  PC5 (D 21) TDI
+ *       TX0 (D 9)  PD1 15|        |26  PC4 (D 20) TDO
+ *  INT0 RX1 (D 10) PD2 16|        |25  PC3 (D 19) TMS
+ *  INT1 TX1 (D 11) PD3 17|        |24  PC2 (D 18) TCK
+ *       PWM (D 12) PD4 18|        |23  PC1 (D 17) SDA
+ *       PWM (D 13) PD5 19|        |22  PC0 (D 16) SCL
+ *       PWM (D 14) PD6 20|        |21  PD7 (D 15) PWM
+ *                        +--------+
+ *
+ * REF http://sanguino.cc/hardware
+ */
+
+#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__)
+  #error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu. (Final OMCA board)
+#endif
+
+#define X_STEP_PIN         26
+#define X_DIR_PIN          25
+#define X_ENABLE_PIN       10
+#define X_STOP_PIN         0
+
+#define Y_STEP_PIN         28
+#define Y_DIR_PIN          27
+#define Y_ENABLE_PIN       10
+#define Y_STOP_PIN         1
+
+#define Z_STEP_PIN         23
+#define Z_DIR_PIN          22
+#define Z_ENABLE_PIN       10
+#define Z_STOP_PIN         2
+
+#define E0_STEP_PIN         24
+#define E0_DIR_PIN          21
+#define E0_ENABLE_PIN       10
+
+// future proofing
+#define __FS  20
+#define __FD  19
+#define __GS  18
+#define __GD  13
+
+#define UNUSED_PWM           14 // PWM on LEFT connector
+
+#define E1_STEP_PIN         -1 // 21
+#define E1_DIR_PIN          -1 // 20
+#define E1_ENABLE_PIN       -1 // 19
+
+#define E2_STEP_PIN         -1 // 21
+#define E2_DIR_PIN          -1 // 20
+#define E2_ENABLE_PIN       -1 // 18
+
+#define SDPOWER            -1
+#define SDSS               11
+#define SDCARDDETECT       -1 // 10 optional also used as mode pin
+#define LED_PIN            -1
+#define FAN_PIN            14 // PWM on MIDDLE connector
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+
+#define HEATER_0_PIN        3 // DONE PWM on RIGHT connector
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+#define TEMP_0_PIN          0 // ANALOG INPUT NUMBERING
+#define TEMP_1_PIN          1 // ANALOG
+#define TEMP_2_PIN         -1 // 2
+#define HEATER_BED_PIN      4
+#define TEMP_BED_PIN        2 // 1,2 or I2C
+
+#define I2C_SCL       16
+#define I2C_SDA       17
diff --git a/Marlin/pins_OMCA_A.h b/Marlin/pins_OMCA_A.h
new file mode 100644
index 0000000..857ff77
--- /dev/null
+++ b/Marlin/pins_OMCA_A.h
@@ -0,0 +1,78 @@
+/**
+ * Open Motion controller with enable based extruders (Alpha!)
+ *
+ *                        ATMega644
+ *
+ *                        +---\/---+
+ *            (D 0) PB0  1|        |40  PA0 (AI 0 / D31)
+ *            (D 1) PB1  2|        |39  PA1 (AI 1 / D30)
+ *       INT2 (D 2) PB2  3|        |38  PA2 (AI 2 / D29)
+ *        PWM (D 3) PB3  4|        |37  PA3 (AI 3 / D28)
+ *        PWM (D 4) PB4  5|        |36  PA4 (AI 4 / D27)
+ *       MOSI (D 5) PB5  6|        |35  PA5 (AI 5 / D26)
+ *       MISO (D 6) PB6  7|        |34  PA6 (AI 6 / D25)
+ *        SCK (D 7) PB7  8|        |33  PA7 (AI 7 / D24)
+ *                  RST  9|        |32  AREF
+ *                  VCC 10|        |31  GND
+ *                  GND 11|        |30  AVCC
+ *                XTAL2 12|        |29  PC7 (D 23)
+ *                XTAL1 13|        |28  PC6 (D 22)
+ *       RX0 (D 8)  PD0 14|        |27  PC5 (D 21) TDI
+ *       TX0 (D 9)  PD1 15|        |26  PC4 (D 20) TDO
+ *  INT0 RX1 (D 10) PD2 16|        |25  PC3 (D 19) TMS
+ *  INT1 TX1 (D 11) PD3 17|        |24  PC2 (D 18) TCK
+ *       PWM (D 12) PD4 18|        |23  PC1 (D 17) SDA
+ *       PWM (D 13) PD5 19|        |22  PC0 (D 16) SCL
+ *       PWM (D 14) PD6 20|        |21  PD7 (D 15) PWM
+ *                        +--------+
+ *
+ */
+
+#ifndef __AVR_ATmega644__
+  #error Oops!  Make sure you have 'SanguinoA' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN         21
+#define X_DIR_PIN          20
+#define X_ENABLE_PIN       24
+#define X_STOP_PIN         0
+
+#define Y_STEP_PIN         23
+#define Y_DIR_PIN          22
+#define Y_ENABLE_PIN       24
+#define Y_STOP_PIN         1
+
+#define Z_STEP_PIN         26
+#define Z_DIR_PIN          25
+#define Z_ENABLE_PIN       24
+#define Z_STOP_PIN         2
+
+#define E0_STEP_PIN         28
+#define E0_DIR_PIN          27
+#define E0_ENABLE_PIN       24
+
+#define E1_STEP_PIN         -1 // 19
+#define E1_DIR_PIN          -1 // 18
+#define E1_ENABLE_PIN       24
+
+#define E2_STEP_PIN         -1 // 17
+#define E2_DIR_PIN          -1 // 16
+#define E2_ENABLE_PIN       24
+
+#define SDPOWER            -1
+#define SDSS               11
+#define SDCARDDETECT       -1 // 10 optional also used as mode pin
+#define LED_PIN            -1
+#define FAN_PIN            3
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+
+#define HEATER_0_PIN       4
+#define HEATER_1_PIN       -1 // 12
+#define HEATER_2_PIN       -1 // 13
+#define TEMP_0_PIN          0 //D27   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+#define TEMP_1_PIN         -1 // 1
+#define TEMP_2_PIN         -1 // 2
+#define HEATER_BED_PIN     -1 // 14/15
+#define TEMP_BED_PIN       -1 // 1,2 or I2C
+/*  Unused (1) (2) (3) 4 5 6 7 8 9 10 11 12 13 (14) (15) (16) 17 (18) (19) (20) (21) (22) (23) 24 (25) (26) (27) 28 (29) (30) (31)  */
diff --git a/Marlin/pins_PRINTRBOARD.h b/Marlin/pins_PRINTRBOARD.h
new file mode 100644
index 0000000..2bf6efd
--- /dev/null
+++ b/Marlin/pins_PRINTRBOARD.h
@@ -0,0 +1,88 @@
+/**
+ * Printrboard pin assignments (AT90USB1286)
+ * Requires the Teensyduino software with Teensy++ 2.0 selected in Arduino IDE!
+ * http://www.pjrc.com/teensy/teensyduino.html
+ * See http://reprap.org/wiki/Printrboard for more info
+ */
+
+#ifndef __AVR_AT90USB1286__
+  #error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
+#endif
+
+#ifdef AT90USBxx_TEENSYPP_ASSIGNMENTS  // use Teensyduino Teensy++2.0 pin assignments instead of Marlin traditional.
+  #error These Printrboard assignments depend on traditional Marlin assignments, not AT90USBxx_TEENSYPP_ASSIGNMENTS in fastio.h
+#endif
+
+#define AT90USB 1286  // Disable MarlinSerial etc.
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN          0
+#define X_DIR_PIN           1
+#define X_ENABLE_PIN       39
+
+#define Y_STEP_PIN          2
+#define Y_DIR_PIN           3
+#define Y_ENABLE_PIN       38
+
+#define Z_STEP_PIN          4
+#define Z_DIR_PIN           5
+#define Z_ENABLE_PIN       23
+
+#define E0_STEP_PIN         6
+#define E0_DIR_PIN          7
+#define E0_ENABLE_PIN      19
+
+#define HEATER_0_PIN       21  // Extruder
+#define HEATER_1_PIN       46
+#define HEATER_2_PIN       47
+#define HEATER_BED_PIN     20
+
+// If soft or fast PWM is off then use Teensyduino pin numbering, Marlin
+// fastio pin numbering otherwise
+#ifdef FAN_SOFT_PWM || FAST_PWM_FAN
+  #define FAN_PIN          22
+#else
+  #define FAN_PIN          16
+#endif
+
+#define X_STOP_PIN         35
+#define Y_STOP_PIN          8
+#define Z_STOP_PIN         36
+#define TEMP_0_PIN          1  // Extruder / Analog pin numbering
+#define TEMP_BED_PIN        0  // Bed / Analog pin numbering
+
+#ifdef FILAMENT_SENSOR
+  #define FILWIDTH_PIN      2
+#endif
+
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+
+#define SDPOWER            -1
+#define SDSS                8
+#define LED_PIN            -1
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+#define ALARM_PIN          -1
+
+#ifndef SDSUPPORT
+// these pins are defined in the SD library if building with SD support
+  #define SCK_PIN           9
+  #define MISO_PIN         11
+  #define MOSI_PIN         10
+#endif
+
+#if defined(ULTRA_LCD) && defined(NEWPANEL)
+  //we have no buzzer installed
+  #define BEEPER -1
+  //LCD Pins
+  #ifdef LCD_I2C_PANELOLU2
+    #define BTN_EN1 27  //RX1 - fastio.h pin mapping 27
+    #define BTN_EN2 26  //TX1 - fastio.h pin mapping 26
+    #define BTN_ENC 43 //A3 - fastio.h pin mapping 43
+    #define SDSS   40 //use SD card on Panelolu2 (Teensyduino pin mapping)
+  #endif // LCD_I2C_PANELOLU2
+  //not connected to a pin
+  #define SDCARDDETECT -1    
+#endif // ULTRA_LCD && NEWPANEL
diff --git a/Marlin/pins_RAMBO.h b/Marlin/pins_RAMBO.h
new file mode 100644
index 0000000..b2ccdc4
--- /dev/null
+++ b/Marlin/pins_RAMBO.h
@@ -0,0 +1,165 @@
+/**
+ * Rambo pin assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega 2560' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH true
+
+// Servo support
+#ifdef NUM_SERVOS
+  #define SERVO0_PIN       22 //motor header MX1
+  #if NUM_SERVOS > 1
+    #define SERVO1_PIN     23 //Motor header MX2
+    #if NUM_SERVOS > 2
+      #define SERVO2_PIN   24 //Motor header MX3
+      #if NUM_SERVOS > 3
+        #define SERVO2_PIN  5 //pwm header pin 5
+      #endif
+    #endif
+  #endif
+#endif
+
+#define X_STEP_PIN 37
+#define X_DIR_PIN 48
+#define X_MIN_PIN 12
+#define X_MAX_PIN 24
+#define X_ENABLE_PIN 29
+#define X_MS1_PIN 40
+#define X_MS2_PIN 41
+
+#define Y_STEP_PIN 36
+#define Y_DIR_PIN 49
+#define Y_MIN_PIN 11
+#define Y_MAX_PIN 23
+#define Y_ENABLE_PIN 28
+#define Y_MS1_PIN 69
+#define Y_MS2_PIN 39
+
+#define Z_STEP_PIN 35
+#define Z_DIR_PIN 47
+#define Z_MIN_PIN 10
+#define Z_MAX_PIN 30
+#define Z_ENABLE_PIN 27
+#define Z_MS1_PIN 68
+#define Z_MS2_PIN 67
+
+#define HEATER_BED_PIN 3
+#define TEMP_BED_PIN 2
+
+#define HEATER_0_PIN  9
+#define TEMP_0_PIN 0
+
+#define HEATER_1_PIN 7
+#define TEMP_1_PIN 1
+
+#ifdef BARICUDA
+  #define HEATER_2_PIN 6
+#else
+  #define HEATER_2_PIN -1
+#endif
+
+#define TEMP_2_PIN -1
+
+#define E0_STEP_PIN         34
+#define E0_DIR_PIN          43
+#define E0_ENABLE_PIN       26
+#define E0_MS1_PIN 65
+#define E0_MS2_PIN 66
+
+#define E1_STEP_PIN         33
+#define E1_DIR_PIN          42
+#define E1_ENABLE_PIN       25
+#define E1_MS1_PIN 63
+#define E1_MS2_PIN 64
+
+#define DIGIPOTSS_PIN 38
+#define DIGIPOT_CHANNELS {4,5,3,0,1} // X Y Z E0 E1 digipot channels to stepper driver mapping
+
+#define SDPOWER            -1
+#define SDSS               53
+#define LED_PIN            13
+#define FAN_PIN            8  
+
+/**********************************************************
+  Fan Pins
+  Fan_0 8
+  Fan_1 6
+  Fan_2 2
+***********************************************************/
+#define PS_ON_PIN          4
+#define KILL_PIN           -1 //80 with Smart Controller LCD
+#define SUICIDE_PIN        -1  //PIN that has to be turned on right after start, to keep power flowing.
+
+#ifdef ULTRA_LCD
+  #define KILL_PIN 80
+  #ifdef NEWPANEL
+   //arduino pin which triggers an piezzo beeper
+    #define BEEPER 79      // Beeper on AUX-4
+    #define LCD_PINS_RS 70
+    #define LCD_PINS_ENABLE 71
+    #define LCD_PINS_D4 72
+    #define LCD_PINS_D5 73
+    #define LCD_PINS_D6 74
+    #define LCD_PINS_D7 75
+
+    //buttons are directly attached using AUX-2
+    #define BTN_EN1 76
+    #define BTN_EN2 77
+    #define BTN_ENC 78  //the click
+
+    #define BLEN_C 2
+    #define BLEN_B 1
+    #define BLEN_A 0
+
+    #define SDCARDDETECT 81    // Ramps does not use this port
+
+    //encoder rotation values
+    #define encrot0 0
+    #define encrot1 2
+    #define encrot2 3
+    #define encrot3 1
+  #else //!NEWPANEL - old style panel with shift register
+    //arduino pin witch triggers an piezzo beeper
+    #define BEEPER 33    No Beeper added
+    //buttons are attached to a shift register
+    // Not wired this yet
+    // #define SHIFT_CLK 38
+    // #define SHIFT_LD 42
+    // #define SHIFT_OUT 40
+    // #define SHIFT_EN 17
+
+    #define LCD_PINS_RS 75
+    #define LCD_PINS_ENABLE 17
+    #define LCD_PINS_D4 23
+    #define LCD_PINS_D5 25
+    #define LCD_PINS_D6 27
+    #define LCD_PINS_D7 29
+
+    //encoder rotation values
+    #define encrot0 0
+    #define encrot1 2
+    #define encrot2 3
+    #define encrot3 1
+
+    //bits in the shift register that carry the buttons for:
+    // left up center down right red
+    #define BL_LE 7
+    #define BL_UP 6
+    #define BL_MI 5
+    #define BL_DW 4
+    #define BL_RI 3
+    #define BL_ST 2
+    #define BLEN_B 1
+    #define BLEN_A 0
+
+  #endif // !NEWPANEL
+
+#endif // ULTRA_LCD
+
+#ifdef FILAMENT_SENSOR
+  //Filip added pin for Filament sensor analog input 
+  #define FILWIDTH_PIN        3
+#endif
diff --git a/Marlin/pins_RAMPS_13.h b/Marlin/pins_RAMPS_13.h
new file mode 100644
index 0000000..f0d4c33
--- /dev/null
+++ b/Marlin/pins_RAMPS_13.h
@@ -0,0 +1,227 @@
+/**
+ * Arduino Mega with RAMPS v1.3 pin assignments
+ *
+ * Applies to the following boards:
+ *
+ *  RAMPS_13_EFB (Extruder, Fan, Bed)
+ *  RAMPS_13_EEB (Extruder, Extruder, Bed)
+ *  RAMPS_13_EFF (Extruder, Fan, Fan)
+ *  RAMPS_13_EEF (Extruder, Extruder, Fan)
+ *  3DRAG
+ *  K8200
+ *  AZTEEG_X3
+ *  AZTEEG_X3_PRO
+ */
+
+#if !defined(__AVR_ATmega1280__) && !defined(__AVR_ATmega2560__)
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH true
+
+#define X_STEP_PIN         54
+#define X_DIR_PIN          55
+#define X_ENABLE_PIN       38
+#define X_MIN_PIN           3
+#define X_MAX_PIN           2
+
+#define Y_STEP_PIN         60
+#define Y_DIR_PIN          61
+#define Y_ENABLE_PIN       56
+#define Y_MIN_PIN          14
+#define Y_MAX_PIN          15
+
+#define Z_STEP_PIN         46
+#define Z_DIR_PIN          48
+#define Z_ENABLE_PIN       62
+#define Z_MIN_PIN          18
+#define Z_MAX_PIN          19
+
+#define Y2_STEP_PIN        36
+#define Y2_DIR_PIN         34
+#define Y2_ENABLE_PIN      30
+
+#define Z2_STEP_PIN        36
+#define Z2_DIR_PIN         34
+#define Z2_ENABLE_PIN      30
+
+#define E0_STEP_PIN        26
+#define E0_DIR_PIN         28
+#define E0_ENABLE_PIN      24
+
+#define E1_STEP_PIN        36
+#define E1_DIR_PIN         34
+#define E1_ENABLE_PIN      30
+
+#define SDPOWER            -1
+#define SDSS               53
+#define LED_PIN            13
+
+#if MB(RAMPS_13_EEB) && defined(FILAMENT_SENSOR)  // FMM added for Filament Extruder
+  // define analog pin for the filament width sensor input
+  // Use the RAMPS 1.4 Analog input 5 on the AUX2 connector
+  #define FILWIDTH_PIN        5
+#endif
+
+#if MB(RAMPS_13_EFB) || MB(RAMPS_13_EFF) || MB(AZTEEG_X3) || MB(AZTEEG_X3_PRO)
+  #define FAN_PIN            9 // (Sprinter config)
+  #if MB(RAMPS_13_EFF)
+    #define CONTROLLERFAN_PIN  -1 // Pin used for the fan to cool controller
+  #endif
+#elif MB(RAMPS_13_EEF)
+  #define FAN_PIN            8
+#else
+  #define FAN_PIN            4 // IO pin. Buffer needed
+#endif
+
+#define PS_ON_PIN          12
+
+#if defined(REPRAP_DISCOUNT_SMART_CONTROLLER) || defined(G3D_PANEL)
+  #define KILL_PIN           41
+#else
+  #define KILL_PIN           -1
+#endif
+
+#if MB(RAMPS_13_EFF)
+  #define HEATER_0_PIN       8
+#else
+  #define HEATER_0_PIN       10   // EXTRUDER 1
+#endif
+
+#if MB(RAMPS_13_EFB) || MB(AZTEEG_X3)
+  #define HEATER_1_PIN       -1
+#else
+  #define HEATER_1_PIN       9    // EXTRUDER 2 (FAN On Sprinter)
+#endif
+
+#define HEATER_2_PIN       -1
+
+#define TEMP_0_PIN         13   // ANALOG NUMBERING
+#define TEMP_1_PIN         15   // ANALOG NUMBERING
+#define TEMP_2_PIN         -1   // ANALOG NUMBERING
+
+#if MB(RAMPS_13_EFF) || MB(RAMPS_13_EEF)
+  #define HEATER_BED_PIN     -1    // NO BED
+#else
+  #define HEATER_BED_PIN     8    // BED
+#endif
+
+#define TEMP_BED_PIN       14   // ANALOG NUMBERING
+
+#ifdef NUM_SERVOS
+  #define SERVO0_PIN         11
+
+  #if NUM_SERVOS > 1
+    #define SERVO1_PIN         6
+  #endif
+
+  #if NUM_SERVOS > 2
+    #define SERVO2_PIN         5
+  #endif
+
+  #if NUM_SERVOS > 3
+    #define SERVO3_PIN         4
+  #endif
+#endif
+
+#if MB(AZTEEG_X3_PRO)
+  #define BEEPER 33
+#endif
+
+#ifdef TEMP_STAT_LEDS
+  #if MB(AZTEEG_X3)
+    #define STAT_LED_RED       6
+    #define STAT_LED_BLUE     11
+  #endif
+#endif
+
+#ifdef ULTRA_LCD
+
+  #ifdef NEWPANEL
+    #define LCD_PINS_RS 16
+    #define LCD_PINS_ENABLE 17
+    #define LCD_PINS_D4 23
+    #define LCD_PINS_D5 25
+    #define LCD_PINS_D6 27
+    #define LCD_PINS_D7 29
+
+    #ifdef REPRAP_DISCOUNT_SMART_CONTROLLER
+      #define BEEPER 37
+
+      #define BTN_EN1 31
+      #define BTN_EN2 33
+      #define BTN_ENC 35
+
+      #define SDCARDDETECT 49
+    #elif defined(LCD_I2C_PANELOLU2)
+      #define BTN_EN1 47  // reverse if the encoder turns the wrong way.
+      #define BTN_EN2 43
+      #define BTN_ENC 32
+      #define LCD_SDSS 53
+      #define SDCARDDETECT -1
+      #define KILL_PIN 41
+    #elif defined(LCD_I2C_VIKI)
+      #define BTN_EN1 22  // reverse if the encoder turns the wrong way.
+      #define BTN_EN2 7
+      #define BTN_ENC -1
+      #define LCD_SDSS 53
+      #define SDCARDDETECT 49
+    #else
+      // arduino pin which triggers an piezzo beeper
+      #define BEEPER 33  // Beeper on AUX-4
+
+      // buttons are directly attached using AUX-2
+      #ifdef REPRAPWORLD_KEYPAD
+        #define BTN_EN1 64 // encoder
+        #define BTN_EN2 59 // encoder
+        #define BTN_ENC 63 // enter button
+        #define SHIFT_OUT 40 // shift register
+        #define SHIFT_CLK 44 // shift register
+        #define SHIFT_LD 42 // shift register
+      #else
+        #define BTN_EN1 37
+        #define BTN_EN2 35
+        #define BTN_ENC 31  // the click
+      #endif
+
+      #ifdef G3D_PANEL
+        #define SDCARDDETECT 49
+      #else
+        #define SDCARDDETECT -1  // Ramps does not use this port
+      #endif
+
+    #endif
+
+  #else // Old-style panel with shift register
+    // Arduino pin witch triggers an piezzo beeper
+    #define BEEPER 33   // No Beeper added
+
+    // Buttons are attached to a shift register
+    // Not wired yet
+    // #define SHIFT_CLK 38
+    // #define SHIFT_LD 42
+    // #define SHIFT_OUT 40
+    // #define SHIFT_EN 17
+
+    #define LCD_PINS_RS 16
+    #define LCD_PINS_ENABLE 17
+    #define LCD_PINS_D4 23
+    #define LCD_PINS_D5 25
+    #define LCD_PINS_D6 27
+    #define LCD_PINS_D7 29
+  #endif
+#endif // ULTRA_LCD
+
+// SPI for Max6675 Thermocouple
+#ifndef SDSUPPORT
+  #define MAX6675_SS       66 // Do not use pin 53 if there is even the remote possibility of using Display/SD card
+#else
+  #define MAX6675_SS       66 // Do not use pin 49 as this is tied to the switch inside the SD card socket to detect if there is an SD card present
+#endif
+
+#ifndef SDSUPPORT
+  // these pins are defined in the SD library if building with SD support
+  #define SCK_PIN          52
+  #define MISO_PIN         50
+  #define MOSI_PIN         51
+#endif
diff --git a/Marlin/pins_RAMPS_OLD.h b/Marlin/pins_RAMPS_OLD.h
new file mode 100644
index 0000000..6b3454a
--- /dev/null
+++ b/Marlin/pins_RAMPS_OLD.h
@@ -0,0 +1,69 @@
+/**
+ * Arduino Mega with RAMPS v1.0, v1.1, v1.2 pin assignments
+ */
+
+#if !defined(__AVR_ATmega1280__) && !defined(__AVR_ATmega2560__)
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+// Uncomment the following line for RAMPS v1.0
+//#define RAMPS_V_1_0
+
+#define X_STEP_PIN         26
+#define X_DIR_PIN          28
+#define X_ENABLE_PIN       24
+#define X_MIN_PIN           3
+#define X_MAX_PIN           2
+
+#define Y_STEP_PIN         38
+#define Y_DIR_PIN          40
+#define Y_ENABLE_PIN       36
+#define Y_MIN_PIN          16
+#define Y_MAX_PIN          17
+
+#define Z_STEP_PIN         44
+#define Z_DIR_PIN          46
+#define Z_ENABLE_PIN       42
+#define Z_MIN_PIN          18
+#define Z_MAX_PIN          19
+
+#define E0_STEP_PIN        32
+#define E0_DIR_PIN         34
+#define E0_ENABLE_PIN      30
+
+#define SDPOWER            48
+#define SDSS               53
+#define LED_PIN            13
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+
+#ifdef RAMPS_V_1_0 // RAMPS_V_1_0
+  #define HEATER_0_PIN     12    // RAMPS 1.0
+  #define HEATER_BED_PIN   -1    // RAMPS 1.0
+  #define FAN_PIN          11    // RAMPS 1.0
+#else // RAMPS_V_1_1 or RAMPS_V_1_2
+  #define HEATER_0_PIN     10    // RAMPS 1.1
+  #define HEATER_BED_PIN    8    // RAMPS 1.1
+  #define FAN_PIN           9    // RAMPS 1.1
+#endif
+
+#define HEATER_1_PIN        -1
+#define HEATER_2_PIN        -1
+#define TEMP_0_PIN          2    // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+#define TEMP_1_PIN          -1
+#define TEMP_2_PIN          -1
+#define TEMP_BED_PIN        1    // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
+
+// SPI for Max6675 Thermocouple
+#ifndef SDSUPPORT
+  #define MAX6675_SS       66// Do not use pin 53 if there is even the remote possibility of using Display/SD card
+#else
+  #define MAX6675_SS       66// Do not use pin 49 as this is tied to the switch inside the SD card socket to detect if there is an SD card present
+#endif
+
+#ifndef SDSUPPORT
+  // these pins are defined in the SD library if building with SD support
+  #define SCK_PIN          52
+  #define MISO_PIN         50
+  #define MOSI_PIN         51
+#endif
diff --git a/Marlin/pins_RUMBA.h b/Marlin/pins_RUMBA.h
new file mode 100644
index 0000000..ee03a0b
--- /dev/null
+++ b/Marlin/pins_RUMBA.h
@@ -0,0 +1,110 @@
+/**
+ * RUMBA pin assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN         17
+#define X_DIR_PIN          16
+#define X_ENABLE_PIN       48
+#define X_MIN_PIN          37
+#define X_MAX_PIN          36
+
+#define Y_STEP_PIN         54
+#define Y_DIR_PIN          47
+#define Y_ENABLE_PIN       55
+#define Y_MIN_PIN          35
+#define Y_MAX_PIN          34
+
+#define Z_STEP_PIN         57
+#define Z_DIR_PIN          56
+#define Z_ENABLE_PIN       62
+#define Z_MIN_PIN          33
+#define Z_MAX_PIN          32
+
+#define E0_STEP_PIN        23
+#define E0_DIR_PIN         22
+#define E0_ENABLE_PIN      24
+
+#define E1_STEP_PIN        26
+#define E1_DIR_PIN         25
+#define E1_ENABLE_PIN      27
+
+#define E2_STEP_PIN        29
+#define E2_DIR_PIN         28
+#define E2_ENABLE_PIN      39
+
+#define LED_PIN            13
+
+#define FAN_PIN            7
+//additional FAN1 PIN (e.g. useful for electronics fan or light on/off) on PIN 8
+
+#define PS_ON_PIN          45
+#define KILL_PIN           46
+
+#if (TEMP_SENSOR_0==0)
+  #define TEMP_0_PIN         -1
+  #define HEATER_0_PIN       -1
+#else
+  #define HEATER_0_PIN        2    // EXTRUDER 1
+  #if (TEMP_SENSOR_0==-1)
+    #define TEMP_0_PIN         6    // ANALOG NUMBERING - connector *K1* on RUMBA thermocouple ADD ON is used
+  #else
+    #define TEMP_0_PIN         15   // ANALOG NUMBERING - default connector for thermistor *T0* on rumba board is used
+  #endif
+#endif
+
+#if (TEMP_SENSOR_1==0)
+  #define TEMP_1_PIN         -1
+  #define HEATER_1_PIN       -1
+#else
+  #define HEATER_1_PIN        3    // EXTRUDER 2
+  #if (TEMP_SENSOR_1==-1)
+    #define TEMP_1_PIN         5    // ANALOG NUMBERING - connector *K2* on RUMBA thermocouple ADD ON is used
+  #else
+    #define TEMP_1_PIN         14   // ANALOG NUMBERING - default connector for thermistor *T1* on rumba board is used
+  #endif
+#endif
+
+#if (TEMP_SENSOR_2==0)
+  #define TEMP_2_PIN         -1
+  #define HEATER_2_PIN       -1
+#else
+  #define HEATER_2_PIN        6    // EXTRUDER 3
+  #if (TEMP_SENSOR_2==-1)
+    #define TEMP_2_PIN         7    // ANALOG NUMBERING - connector *K3* on RUMBA thermocouple ADD ON is used <-- this can not be used when TEMP_SENSOR_BED is defined as thermocouple
+  #else
+    #define TEMP_2_PIN         13   // ANALOG NUMBERING - default connector for thermistor *T2* on rumba board is used
+  #endif
+#endif
+
+//optional for extruder 4 or chamber: #define TEMP_X_PIN         12   // ANALOG NUMBERING - default connector for thermistor *T3* on rumba board is used
+//optional FAN1 can be used as 4th heater output: #define HEATER_3_PIN       8    // EXTRUDER 4
+
+#if (TEMP_SENSOR_BED==0)
+  #define TEMP_BED_PIN       -1
+  #define HEATER_BED_PIN     -1
+#else
+  #define HEATER_BED_PIN      9    // BED
+  #if (TEMP_SENSOR_BED==-1)
+    #define TEMP_BED_PIN       7    // ANALOG NUMBERING - connector *K3* on RUMBA thermocouple ADD ON is used <-- this can not be used when TEMP_SENSOR_2 is defined as thermocouple
+  #else
+    #define TEMP_BED_PIN       11   // ANALOG NUMBERING - default connector for thermistor *THB* on rumba board is used
+  #endif
+#endif
+
+#define SDPOWER            -1
+#define SDSS               53
+#define SDCARDDETECT       49
+#define BEEPER             44
+#define LCD_PINS_RS        19
+#define LCD_PINS_ENABLE    42
+#define LCD_PINS_D4        18
+#define LCD_PINS_D5        38
+#define LCD_PINS_D6        41
+#define LCD_PINS_D7        40
+#define BTN_EN1            11
+#define BTN_EN2            12
+#define BTN_ENC            43
diff --git a/Marlin/pins_SANGUINOLOLU_11.h b/Marlin/pins_SANGUINOLOLU_11.h
new file mode 100644
index 0000000..e7bdd97
--- /dev/null
+++ b/Marlin/pins_SANGUINOLOLU_11.h
@@ -0,0 +1,172 @@
+/**
+ * Sanguinololu board pin assignments
+ */
+
+#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega1284P__)
+  #error Oops!  Make sure you have 'Sanguino' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN         15
+#define X_DIR_PIN          21
+#define X_STOP_PIN         18
+
+#define Y_STEP_PIN         22
+#define Y_DIR_PIN          23
+#define Y_STOP_PIN         19
+
+#define Z_STEP_PIN         3
+#define Z_DIR_PIN          2
+#define Z_STOP_PIN         20
+
+#define E0_STEP_PIN         1
+#define E0_DIR_PIN          0
+
+#define LED_PIN            -1
+
+#define FAN_PIN            -1
+
+// #if FAN_PIN == 12 || FAN_PIN ==13
+//   #define FAN_SOFT_PWM
+// #endif
+
+#if MB(MELZI)
+  #define LED_PIN            27 /* On some broken versions of the Sanguino libraries the pin definitions are wrong, which then needs LED_PIN as pin 28. But you better upgrade your Sanguino libraries! See #368. */
+  #define FAN_PIN            4 // Works for Panelolu2 too
+#endif
+
+#if MB(STB_11)
+  #define FAN_PIN            4
+  //  Uncomment this if you have the first generation (V1.10) of STBs board
+  #define LCD_PIN_BL         17 // LCD backlight LED
+#endif
+
+#if MB(AZTEEG_X1)
+  #define FAN_PIN            4
+#endif
+
+#ifdef NUM_SERVOS
+  #define SERVO0_PIN          -1
+
+  #if NUM_SERVOS > 1
+    #define SERVO1_PIN        -1
+  #endif
+
+  #if NUM_SERVOS > 2
+    #define SERVO2_PIN        -1
+  #endif
+
+  #if NUM_SERVOS > 3
+    #define SERVO3_PIN        -1
+  #endif
+#endif
+
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+
+#define HEATER_0_PIN       13 // (extruder)
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+
+#ifdef SANGUINOLOLU_V_1_2
+
+  #define HEATER_BED_PIN     12 // (bed)
+  #define X_ENABLE_PIN       14
+  #define Y_ENABLE_PIN       14
+  #define Z_ENABLE_PIN       26
+  #define E0_ENABLE_PIN      14
+
+  #ifdef LCD_I2C_PANELOLU2
+    #define FAN_PIN          4 // Uses Transistor1 (PWM) on Panelolu2's Sanguino Adapter Board to drive the fan
+  #endif
+
+#else
+
+  #define HEATER_BED_PIN      14  // (bed)
+  #define X_ENABLE_PIN       -1
+  #define Y_ENABLE_PIN       -1
+  #define Z_ENABLE_PIN       -1
+  #define E0_ENABLE_PIN      -1
+
+#endif
+
+#define TEMP_0_PIN          7   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 33 extruder)
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+#define TEMP_BED_PIN        6   // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!! (pin 34 bed)
+#define SDPOWER            -1
+#define SDSS               31
+
+/* On some broken versions of the Sanguino libraries the pin definitions are wrong, which then needs SDSS as pin 24. But you better upgrade your Sanguino libraries! See #368. */
+//#define SDSS               24
+
+#ifdef ULTRA_LCD
+ #ifdef NEWPANEL
+   //we have no buzzer installed
+   #define BEEPER -1
+   //LCD Pins
+   #ifdef DOGLCD
+   #ifdef U8GLIB_ST7920 //SPI GLCD 12864 ST7920 ( like [www.digole.com] ) For Melzi V2.0
+     #define LCD_PINS_RS 30 //CS chip select /SS chip slave select
+     #define LCD_PINS_ENABLE 29 //SID (MOSI)
+     #define LCD_PINS_D4 17 //SCK (CLK) clock
+     #define BEEPER 27 // Pin 27 is take by LED_Pin, but Melzi LED do nothing with Marlin and I take this pin for BEEPER.... See here > [github.com] , If you want use this pin with Gcode M42 instead BEEPER
+   #else
+     // Pins for DOGM SPI LCD Support
+     #define DOGLCD_A0 30
+     #define DOGLCD_CS 29
+     #define LCD_CONTRAST 1
+   #endif
+     // Uncomment screen orientation
+     #define LCD_SCREEN_ROT_0
+       // #define LCD_SCREEN_ROT_90
+       // #define LCD_SCREEN_ROT_180
+       // #define LCD_SCREEN_ROT_270
+     #else // standard Hitachi LCD controller
+     #define LCD_PINS_RS        4
+     #define LCD_PINS_ENABLE    17
+     #define LCD_PINS_D4        30
+     #define LCD_PINS_D5        29
+     #define LCD_PINS_D6        28
+     #define LCD_PINS_D7        27
+   #endif
+   //The encoder and click button
+   #define BTN_EN1 11
+   #define BTN_EN2 10
+   #ifdef LCD_I2C_PANELOLU2
+     #if MB(MELZI)
+       #define BTN_ENC 29 //the click switch
+       #define LCD_SDSS 30 //to use the SD card reader on the Panelolu2 rather than the melzi board
+     #else
+       #define BTN_ENC 30 //the click switch
+     #endif
+   #else
+     #define BTN_ENC 16  //the click switch
+     #define LCD_SDSS 28 //to use the SD card reader on the smart controller rather than the melzi board
+   #endif //Panelolu2
+   //not connected to a pin
+   #define SDCARDDETECT -1
+
+ #endif //NEWPANEL
+#endif //ULTRA_LCD
+
+#ifdef MAKRPANEL
+  #define BEEPER 29
+  // Pins for DOGM SPI LCD Support
+  #define DOGLCD_A0  30
+  #define DOGLCD_CS  17
+  #define LCD_PIN_BL 28  // backlight LED on PA3
+  // GLCD features
+  #define LCD_CONTRAST 1
+  // Uncomment screen orientation
+  #define LCD_SCREEN_ROT_0
+  // #define LCD_SCREEN_ROT_90
+  // #define LCD_SCREEN_ROT_180
+  // #define LCD_SCREEN_ROT_270
+  //The encoder and click button
+  #define BTN_EN1 11
+  #define BTN_EN2 10
+  #define BTN_ENC 16  //the click switch
+  //not connected to a pin
+  #define SDCARDDETECT -1
+#endif //Makrpanel
+
diff --git a/Marlin/pins_SANGUINOLOLU_12.h b/Marlin/pins_SANGUINOLOLU_12.h
new file mode 100644
index 0000000..d92cff7
--- /dev/null
+++ b/Marlin/pins_SANGUINOLOLU_12.h
@@ -0,0 +1,19 @@
+/**
+ * Sanguinololu V1.2 pin assignments
+ *
+ * Applies to the following boards:
+ *
+ *  AZTEEG_X1
+ *  MELZI
+ *  MELZI_1284
+ *  SANGUINOLOLU_12
+ *  STB_11
+ */
+
+#define SANGUINOLOLU_V_1_2
+
+#if defined(__AVR_ATmega1284P__)
+  #define LARGE_FLASH true
+#endif
+
+#include "pins_SANGUINOLOLU_11.h"
diff --git a/Marlin/pins_SAV_MKI.h b/Marlin/pins_SAV_MKI.h
new file mode 100644
index 0000000..e898c9f
--- /dev/null
+++ b/Marlin/pins_SAV_MKI.h
@@ -0,0 +1,88 @@
+/**
+ * SAV MkI pin assignments (AT90USB1286)
+ * Requires the Teensyduino software with Teensy++ 2.0 selected in Arduino IDE!
+ * http://www.pjrc.com/teensy/teensyduino.html
+ * RepRap Clone Wars project board.
+ */
+
+#ifndef __AVR_AT90USB1286__
+  #error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define AT90USB 1286  // Disable MarlinSerial etc.
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN         0
+#define X_DIR_PIN          1
+#define X_ENABLE_PIN       39
+
+#define Y_STEP_PIN         2
+#define Y_DIR_PIN          3
+#define Y_ENABLE_PIN       38
+
+#define Z_STEP_PIN         4
+#define Z_DIR_PIN          5
+#define Z_ENABLE_PIN       23
+
+#define E0_STEP_PIN         6
+#define E0_DIR_PIN          7
+#define E0_ENABLE_PIN       19
+
+#define HEATER_0_PIN       21  // Extruder
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+#define HEATER_BED_PIN     20  // Bed
+#define FAN_PIN            16  // Fan   -- from Teensyduino environment.
+                               // For the fan and Teensyduino uses a different pin mapping.
+
+#define X_STOP_PIN         13
+#define Y_STOP_PIN         14
+#define Z_STOP_PIN         15
+//#define Z_STOP_PIN         36  // For inductive sensor.
+
+#define TEMP_0_PIN          7  // Extruder / Analog pin numbering
+#define TEMP_BED_PIN        6  // Bed / Analog pin numbering
+
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+
+#define SDPOWER            -1
+#define SDSS               20  // PB0 - 8 in marlin env.
+#define LED_PIN            -1
+#define PS_ON_PIN          -1
+#define ALARM_PIN          -1
+#define SDCARDDETECT       -1
+
+#ifndef SDSUPPORT
+   // these pins are defined in the SD library if building with SD support
+  #define SCK_PIN          9
+  #define MISO_PIN         11
+  #define MOSI_PIN         10
+#endif
+
+#define BEEPER             -1
+#define LCD_PINS_RS        -1
+#define LCD_PINS_ENABLE    -1
+#define LCD_PINS_D4        -1
+#define LCD_PINS_D5        -1
+#define LCD_PINS_D6        -1
+#define LCD_PINS_D7        -1
+
+#ifdef SAV_3DLCD
+  // For LCD SHIFT register LCD
+  #define SR_DATA_PIN         1
+  #define SR_CLK_PIN          0
+
+  #define BTN_EN1            41
+  #define BTN_EN2            40
+  #define BTN_ENC            12
+
+  #define KILL_PIN           42 // A2 = 42 - teensy = 40
+  #define HOME_PIN          -1 // A4 = marlin 44 - teensy = 42
+
+  #ifdef NUM_SERVOS
+    #define SERVO0_PIN       41 // In teensy's pin definition for pinMode (in Servo.cpp)
+  #endif
+
+#endif // SAV_3DLCD
diff --git a/Marlin/pins_SETHI.h b/Marlin/pins_SETHI.h
new file mode 100644
index 0000000..c2e4359
--- /dev/null
+++ b/Marlin/pins_SETHI.h
@@ -0,0 +1,71 @@
+/**
+ * Sethi 3D_1 pin assignments - www.sethi3d.com.br
+ */
+
+#if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
+  #error Oops!  Make sure you have 'Sethi 3D' selected from the 'Tools -> Boards' menu.
+#endif
+
+#ifndef GEN7_VERSION
+  #define GEN7_VERSION 12 // v1.x
+#endif
+
+//x axis pins
+#define X_STEP_PIN 19
+#define X_DIR_PIN 18
+#define X_ENABLE_PIN 24
+#define X_STOP_PIN 2
+
+//y axis pins
+#define Y_STEP_PIN 23
+#define Y_DIR_PIN 22
+#define Y_ENABLE_PIN 24
+#define Y_STOP_PIN 0
+
+//z axis pins
+#define Z_STEP_PIN 26
+#define Z_DIR_PIN 25
+#define Z_ENABLE_PIN 24
+#define Z_MIN_PIN 1
+#define Z_MAX_PIN 0
+
+//extruder pins
+#define E0_STEP_PIN 28
+#define E0_DIR_PIN 27
+#define E0_ENABLE_PIN 24
+
+#define TEMP_0_PIN 1
+#define TEMP_1_PIN -1
+#define TEMP_2_PIN -1
+#define TEMP_BED_PIN 2
+
+#define HEATER_0_PIN 4
+#define HEATER_1_PIN -1
+#define HEATER_2_PIN -1
+#define HEATER_BED_PIN 3
+
+#define KILL_PIN -1
+
+#define SDPOWER -1
+#define SDSS -1 // SCL pin of I2C header
+#define LED_PIN -1
+
+#if (GEN7_VERSION >= 13)
+  // Gen7 v1.3 removed the fan pin
+  #define FAN_PIN -1
+#else
+  #define FAN_PIN 31
+#endif
+
+#define PS_ON_PIN 15
+
+//All these generations of Gen7 supply thermistor power
+//via PS_ON, so ignore bad thermistor readings
+#define BOGUS_TEMPERATURE_FAILSAFE_OVERRIDE
+
+//our pin for debugging.
+#define DEBUG_PIN 0
+
+//our RS485 pins
+#define TX_ENABLE_PIN 12
+#define RX_ENABLE_PIN 13
diff --git a/Marlin/pins_STB_11.h b/Marlin/pins_STB_11.h
new file mode 100644
index 0000000..ae06101
--- /dev/null
+++ b/Marlin/pins_STB_11.h
@@ -0,0 +1,11 @@
+/**
+ * STB V1.1 pin assignments
+ */
+
+#define SANGUINOLOLU_V_1_2
+
+#if defined(__AVR_ATmega1284P__)
+  #define LARGE_FLASH true
+#endif
+
+#include "pins_SANGUINOLOLU_11.h"
diff --git a/Marlin/pins_TEENSY2.h b/Marlin/pins_TEENSY2.h
new file mode 100644
index 0000000..c714426
--- /dev/null
+++ b/Marlin/pins_TEENSY2.h
@@ -0,0 +1,115 @@
+/**
+ * Teensy++ 2.0 Breadboard pin assignments (AT90USB1286)
+ * Requires the Teensyduino software with Teensy++ 2.0 selected in Arduino IDE!
+ * http://www.pjrc.com/teensy/teensyduino.html
+ * See http://reprap.org/wiki/Printrboard for more info
+ *
+ * CLI build: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84 make
+ *
+ *  DaveX plan for Teensylu/printrboard-type pinouts for a TeensyBreadboard:
+ *  (ref teensylu & sprinter)
+ *
+ *                               USB
+ *           GND       GND |-----#####-----| +5V              ATX +5SB
+ *     ATX PS_ON    PWM 27 |b7   #####   b6| 26    PWM*       Stepper Enable 
+ *                  PWM  0 |d0           b5| 25    PWM*        
+ *                  PWM  1 |d1           b4| 24    PWM        
+ *         X_MIN         2 |d2           b3| 23               MISO_PIN
+ *         Y_MIN         3 |d3           b2| 22               MOSI_PIN
+ *         Z_MIN         4 |d4  * *      b1| 21               SCK_PIN       
+ *                       5 |d5  e e      b0| 20               SDSS              
+ *                LED    6 |d6  5 4      e7| 19               
+ *                       7 |d7           e6| 18               
+ *       LCD  RS         8 |e0             | GND              
+ *       LCD  EN         9 |e1   a4 a0    R| AREF             
+ *       LCD  D4        10 |c0   a5 a1   f0| 38 A0            ENC_1           
+ *       LCD  D5        11 |c1   a6 a2   f1| 39 A1            ENC_2
+ *       LCD  D6        12 |c2   a7 a3   f2| 40 A2            ENC_CLK
+ *       LCD  D6        13 |c3           f3| 41 A3            
+ *      Bed Heat    PWM 14 |c4   V G R   f4| 42 A4            
+ * Extruder Heat    PWM 15 |c5   c n S   f5| 43 A5            
+ *           Fan    PWM 16 |c6   c d T   f6| 44 A6            Bed TC
+ *                      17 |c7   * * *   f7| 45 A7            Extruder TC * 4.7k * +5        
+ *                         -----------------                  
+ *
+ *      Interior E4: 36, INT4
+ *      Interior E5: 37, INT5
+ *      Interior PA0-7: 28-35  -- Printrboard and Teensylu use these pins for step & direction:
+ *             T++ PA Signal  Marlin
+ *    
+ *       Z STEP  32 a4  a0 28 X STEP
+ *       Z DIR   33 a5  a1 29 X DIR
+ *       E STEP  34 a6  a2 30 Y STEP
+ *       E DIR   35 a7  a3 31 Y DIR
+ */
+
+#ifndef __AVR_AT90USB1286__
+  #error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
+#endif
+
+#ifndef AT90USBxx_TEENSYPP_ASSIGNMENTS  // use Teensyduino Teensy++2.0 pin assignments instead of Marlin alphabetical.
+  #error  Uncomment #define AT90USBxx_TEENSYPP_ASSIGNMENTS in fastio.h for this config
+  // (or build from command line)
+#endif
+
+#define AT90USB 1286  // Disable MarlinSerial etc.
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN         28 //  0 Marlin
+#define X_DIR_PIN          29 //  1 Marlin
+#define X_ENABLE_PIN       26 
+
+#define Y_STEP_PIN         30 //  2 Marlin
+#define Y_DIR_PIN          31 //  3
+#define Y_ENABLE_PIN       26     // Shared w/x
+
+#define Z_STEP_PIN         32 //  4
+#define Z_DIR_PIN          33 //  5
+#define Z_ENABLE_PIN       26 // Shared w/x
+
+#define E0_STEP_PIN        34 //  6
+#define E0_DIR_PIN         35 //  7
+#define E0_ENABLE_PIN      26 // Shared w/x
+
+#define HEATER_0_PIN       15 //  21  // Extruder
+#define HEATER_1_PIN       -1
+#define HEATER_2_PIN       -1
+#define HEATER_BED_PIN     14 // 20  // Bed
+#define FAN_PIN            16 // 22  // Fan
+
+#define X_STOP_PIN          2
+#define Y_STOP_PIN          3
+#define Z_STOP_PIN          4
+
+#define TEMP_0_PIN          7 // Extruder / Analog pin numbering
+#define TEMP_BED_PIN        6 // Bed / Analog pin numbering
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+
+#define SDPOWER            -1
+#define SDCARDDETECT       -1   
+#define SDSS               20 // 8
+#define LED_PIN             6
+#define PS_ON_PIN          27
+#define KILL_PIN           -1
+#define ALARM_PIN          -1
+
+#ifndef SDSUPPORT
+// these pins are defined in the SD library if building with SD support
+  #define SCK_PIN         21 // 9
+  #define MISO_PIN        23 // 11
+  #define MOSI_PIN        22 // 10
+#endif
+
+#ifdef ULTIPANEL
+  #define LCD_PINS_RS         8
+  #define LCD_PINS_ENABLE     9
+  #define LCD_PINS_D4        10
+  #define LCD_PINS_D5        11
+  #define LCD_PINS_D6        12
+  #define LCD_PINS_D7        13
+  #define BTN_EN1            38
+  #define BTN_EN2            39
+  #define BTN_ENC            40
+#endif
diff --git a/Marlin/pins_TEENSYLU.h b/Marlin/pins_TEENSYLU.h
new file mode 100644
index 0000000..46da7d2
--- /dev/null
+++ b/Marlin/pins_TEENSYLU.h
@@ -0,0 +1,85 @@
+/**
+ * Teensylu 0.7 pin assignments (AT90USB1286)
+ * Requires the Teensyduino software with Teensy++ 2.0 selected in Arduino IDE!
+ * http://www.pjrc.com/teensy/teensyduino.html
+ * See http://reprap.org/wiki/Printrboard for more info
+ */
+
+#ifndef __AVR_AT90USB1286__
+  #error Oops!  Make sure you have 'Teensy++ 2.0' selected from the 'Tools -> Boards' menu.
+#endif
+
+#ifdef AT90USBxx_TEENSYPP_ASSIGNMENTS  // use Teensyduino Teensy++2.0 pin assignments instead of Marlin traditional.
+  #error These Teensylu assignments depend on traditional Marlin assignments, not AT90USBxx_TEENSYPP_ASSIGNMENTS in fastio.h
+#endif
+
+#define AT90USB 1286  // Disable MarlinSerial etc.
+
+#define LARGE_FLASH        true
+
+#define X_STEP_PIN          0
+#define X_DIR_PIN           1
+#define X_ENABLE_PIN       39
+
+#define Y_STEP_PIN          2
+#define Y_DIR_PIN           3
+#define Y_ENABLE_PIN       38
+
+#define Z_STEP_PIN          4
+#define Z_DIR_PIN           5
+#define Z_ENABLE_PIN       23
+
+#define E0_STEP_PIN         6
+#define E0_DIR_PIN          7
+#define E0_ENABLE_PIN      19
+
+#define HEATER_0_PIN       21  // Extruder
+#define HEATER_1_PIN       46
+#define HEATER_2_PIN       47
+#define HEATER_BED_PIN     20
+
+// If soft or fast PWM is off then use Teensyduino pin numbering, Marlin
+// fastio pin numbering otherwise
+#ifdef FAN_SOFT_PWM || FAST_PWM_FAN
+  #define FAN_PIN          22
+#else
+  #define FAN_PIN          16
+#endif
+
+#define X_STOP_PIN         13
+#define Y_STOP_PIN         14
+#define Z_STOP_PIN         15
+#define TEMP_0_PIN          7  // Extruder / Analog pin numbering
+#define TEMP_BED_PIN        6  // Bed / Analog pin numbering
+
+#define TEMP_1_PIN         -1
+#define TEMP_2_PIN         -1
+
+#define SDPOWER            -1
+#define SDSS                8
+#define LED_PIN            -1
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+#define ALARM_PIN          -1
+
+#ifndef SDSUPPORT
+// these pins are defined in the SD library if building with SD support
+  #define SCK_PIN           9
+  #define MISO_PIN         11
+  #define MOSI_PIN         10
+#endif
+
+#if defined(ULTRA_LCD) && defined(NEWPANEL)
+  //we have no buzzer installed
+  #define BEEPER -1
+  //LCD Pins
+  #ifdef LCD_I2C_PANELOLU2
+    #define BTN_EN1 27  //RX1 - fastio.h pin mapping 27
+    #define BTN_EN2 26  //TX1 - fastio.h pin mapping 26
+    #define BTN_ENC 43 //A3 - fastio.h pin mapping 43
+    #define SDSS   40 //use SD card on Panelolu2 (Teensyduino pin mapping)
+  #endif // LCD_I2C_PANELOLU2
+  //not connected to a pin
+  #define SDCARDDETECT -1    
+#endif // ULTRA_LCD && NEWPANEL
+
diff --git a/Marlin/pins_ULTIMAIN_2.h b/Marlin/pins_ULTIMAIN_2.h
new file mode 100644
index 0000000..7c03f6b
--- /dev/null
+++ b/Marlin/pins_ULTIMAIN_2.h
@@ -0,0 +1,80 @@
+/**
+ * Ultiboard v2.0 pin assignments
+ */
+
+#ifndef __AVR_ATmega2560__
+  #error Oops!  Make sure you have 'Arduino Mega 2560' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define X_STEP_PIN 25
+#define X_DIR_PIN 23
+#define X_STOP_PIN 22
+#define X_ENABLE_PIN 27
+
+#define Y_STEP_PIN 32
+#define Y_DIR_PIN 33
+#define Y_STOP_PIN 26
+#define Y_ENABLE_PIN 31
+
+#define Z_STEP_PIN 35
+#define Z_DIR_PIN 36
+#define Z_STOP_PIN 29
+#define Z_ENABLE_PIN 34
+
+#define HEATER_BED_PIN 4
+#define TEMP_BED_PIN 10
+
+#define HEATER_0_PIN  2
+#define TEMP_0_PIN 8
+
+#define HEATER_1_PIN 3
+#define TEMP_1_PIN 9
+
+#define HEATER_2_PIN -1
+#define TEMP_2_PIN -1
+
+#define E0_STEP_PIN         42
+#define E0_DIR_PIN          43
+#define E0_ENABLE_PIN       37
+
+#define E1_STEP_PIN         49
+#define E1_DIR_PIN          47
+#define E1_ENABLE_PIN       48
+
+#define SDPOWER            -1
+#define SDSS               53
+#define LED_PIN            8
+#define FAN_PIN            7
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+#define SUICIDE_PIN        -1  //PIN that has to be turned on right after start, to keep power flowing.
+#define SAFETY_TRIGGERED_PIN     28 //PIN to detect the safety circuit has triggered
+#define MAIN_VOLTAGE_MEASURE_PIN 14 //Analogue PIN to measure the main voltage, with a 100k - 4k7 resitor divider.
+
+#define MOTOR_CURRENT_PWM_XY_PIN 44
+#define MOTOR_CURRENT_PWM_Z_PIN 45
+#define MOTOR_CURRENT_PWM_E_PIN 46
+//Motor current PWM conversion, PWM value = MotorCurrentSetting * 255 / range
+#define MOTOR_CURRENT_PWM_RANGE 2000
+#define DEFAULT_PWM_MOTOR_CURRENT  {1300, 1300, 1250}
+
+//arduino pin witch triggers an piezzo beeper
+#define BEEPER 18
+
+#define LCD_PINS_RS 20
+#define LCD_PINS_ENABLE 15
+#define LCD_PINS_D4 14
+#define LCD_PINS_D5 21
+#define LCD_PINS_D6 5
+#define LCD_PINS_D7 6
+
+//buttons are directly attached
+#define BTN_EN1 40
+#define BTN_EN2 41
+#define BTN_ENC 19  //the click
+
+#define BLEN_C 2
+#define BLEN_B 1
+#define BLEN_A 0
+
+#define SDCARDDETECT 39
diff --git a/Marlin/pins_ULTIMAKER.h b/Marlin/pins_ULTIMAKER.h
new file mode 100644
index 0000000..649ea59
--- /dev/null
+++ b/Marlin/pins_ULTIMAKER.h
@@ -0,0 +1,100 @@
+/**
+ * Ultimaker pin assignments
+ */
+
+#if !defined(__AVR_ATmega1280__) && !defined(__AVR_ATmega2560__)
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH true
+
+#define X_STEP_PIN 25
+#define X_DIR_PIN 23
+#define X_MIN_PIN 22
+#define X_MAX_PIN 24
+#define X_ENABLE_PIN 27
+
+#define Y_STEP_PIN 31
+#define Y_DIR_PIN 33
+#define Y_MIN_PIN 26
+#define Y_MAX_PIN 28
+#define Y_ENABLE_PIN 29
+
+#define Z_STEP_PIN 37
+#define Z_DIR_PIN 39
+#define Z_MIN_PIN 30
+#define Z_MAX_PIN 32
+#define Z_ENABLE_PIN 35
+
+#define HEATER_BED_PIN 4
+#define TEMP_BED_PIN 10
+
+#define HEATER_0_PIN  2
+#define TEMP_0_PIN 8
+
+#define HEATER_1_PIN 3
+#define TEMP_1_PIN 9
+
+#define HEATER_2_PIN -1
+#define TEMP_2_PIN -1
+
+#define E0_STEP_PIN         43
+#define E0_DIR_PIN          45
+#define E0_ENABLE_PIN       41
+
+#define E1_STEP_PIN         49
+#define E1_DIR_PIN          47
+#define E1_ENABLE_PIN       48
+
+#define SDPOWER            -1
+#define SDSS               53
+#define LED_PIN            13
+#define FAN_PIN            7
+#define PS_ON_PIN          12
+#define KILL_PIN           -1
+#define SUICIDE_PIN        54  //PIN that has to be turned on right after start, to keep power flowing.
+#define SERVO0_PIN         13  // untested
+
+#ifdef ULTRA_LCD
+
+  #ifdef NEWPANEL
+  //arduino pin witch triggers an piezzo beeper
+    #define BEEPER 18
+
+    #define LCD_PINS_RS 20
+    #define LCD_PINS_ENABLE 17
+    #define LCD_PINS_D4 16
+    #define LCD_PINS_D5 21
+    #define LCD_PINS_D6 5
+    #define LCD_PINS_D7 6
+
+    //buttons are directly attached
+    #define BTN_EN1 40
+    #define BTN_EN2 42
+    #define BTN_ENC 19  //the click
+
+    #define SDCARDDETECT 38
+
+  #else //!NEWPANEL - Old style panel with shift register
+
+    //arduino pin witch triggers an piezzo beeper
+    #define BEEPER 18
+
+    //buttons are attached to a shift register
+    #define SHIFT_CLK 38
+    #define SHIFT_LD 42
+    #define SHIFT_OUT 40
+    #define SHIFT_EN 17
+
+    #define LCD_PINS_RS 16
+    #define LCD_PINS_ENABLE 5
+    #define LCD_PINS_D4 6
+    #define LCD_PINS_D5 21
+    #define LCD_PINS_D6 20
+    #define LCD_PINS_D7 19
+
+    #define SDCARDDETECT -1
+
+  #endif // !NEWPANEL
+
+#endif // ULTRA_LCD
diff --git a/Marlin/pins_ULTIMAKER_OLD.h b/Marlin/pins_ULTIMAKER_OLD.h
new file mode 100644
index 0000000..571ea16
--- /dev/null
+++ b/Marlin/pins_ULTIMAKER_OLD.h
@@ -0,0 +1,62 @@
+/**
+ * Ultimaker pin assignments (Old electronics)
+ */
+
+#if !defined(__AVR_ATmega1280__) && !defined(__AVR_ATmega2560__)
+  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
+#endif
+
+#define LARGE_FLASH true
+
+#define X_STEP_PIN 25
+#define X_DIR_PIN 23
+#define X_MIN_PIN 15
+#define X_MAX_PIN 14
+#define X_ENABLE_PIN 27
+
+#define Y_STEP_PIN 31
+#define Y_DIR_PIN 33
+#define Y_MIN_PIN 17
+#define Y_MAX_PIN 16
+#define Y_ENABLE_PIN 29
+
+#define Z_STEP_PIN 37
+#define Z_DIR_PIN 39
+#define Z_MIN_PIN 19
+#define Z_MAX_PIN 18
+#define Z_ENABLE_PIN 35
+
+#define HEATER_BED_PIN -1
+#define TEMP_BED_PIN -1
+
+#define HEATER_0_PIN  2
+#define TEMP_0_PIN 8
+
+#define HEATER_1_PIN 1
+#define TEMP_1_PIN 1
+
+#define HEATER_2_PIN -1
+#define TEMP_2_PIN -1
+
+#define E0_STEP_PIN         43
+#define E0_DIR_PIN          45
+#define E0_ENABLE_PIN       41
+
+#define E1_STEP_PIN         -1
+#define E1_DIR_PIN          -1
+#define E1_ENABLE_PIN       -1
+
+#define SDPOWER            -1
+#define SDSS               -1
+#define LED_PIN            -1
+#define FAN_PIN            -1
+#define PS_ON_PIN          -1
+#define KILL_PIN           -1
+#define SUICIDE_PIN        -1  //PIN that has to be turned on right after start, to keep power flowing.
+
+#define LCD_PINS_RS 24
+#define LCD_PINS_ENABLE 22
+#define LCD_PINS_D4 36
+#define LCD_PINS_D5 34
+#define LCD_PINS_D6 32
+#define LCD_PINS_D7 30
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 4c3ad49..8015f48 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -377,7 +377,7 @@ static void lcd_main_menu()
 #ifdef SDSUPPORT
 static void lcd_autostart_sd()
 {
-    card.lastnr=0;
+    card.autostart_index=0;
     card.setroot();
     card.checkautostart(true);
 }

