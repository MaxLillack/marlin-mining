commit b919a6f1827bb1fc4d6b299e8d4610bce1b95043 (from 8bf5f7c67651d8a5759f8844f1d51ec1bdc44996)
Merge: 8bf5f7c 352294b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 30 12:06:53 2016 -0700

    Merge pull request #3280 from esenapaj/patch-1
    
    Update U8glib URL

diff --git a/Marlin/Marlin.ino b/Marlin/Marlin.ino
index 7c4dd93..1869d33 100644
--- a/Marlin/Marlin.ino
+++ b/Marlin/Marlin.ino
@@ -49,7 +49,7 @@
     #include <LCD.h>
     #include <LiquidCrystal_I2C.h>
   #elif ENABLED(DOGLCD)
-    #include <U8glib.h> // library for graphics LCD by Oli Kraus (https://code.google.com/p/u8glib/)
+    #include <U8glib.h> // library for graphics LCD by Oli Kraus (https://github.com/olikraus/U8glib_Arduino)
   #else
     #include <LiquidCrystal.h> // library for character LCD
   #endif
diff --git a/Marlin/dogm_lcd_implementation.h b/Marlin/dogm_lcd_implementation.h
index ed553ec..25d573d 100644
--- a/Marlin/dogm_lcd_implementation.h
+++ b/Marlin/dogm_lcd_implementation.h
@@ -29,7 +29,7 @@
  *
  * With the use of:
  * u8glib by Oliver Kraus
- * http://code.google.com/p/u8glib/
+ * https://github.com/olikraus/U8glib_Arduino
  * License: http://opensource.org/licenses/BSD-3-Clause
  */
 

commit b919a6f1827bb1fc4d6b299e8d4610bce1b95043 (from 352294b5f5c24dca719b285acd455da65593106a)
Merge: 8bf5f7c 352294b
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Mar 30 12:06:53 2016 -0700

    Merge pull request #3280 from esenapaj/patch-1
    
    Update U8glib URL

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 76c3883..28e8ed0 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -4086,6 +4086,9 @@ inline void gcode_M104() {
   if (setTargetedHotend(104)) return;
   if (DEBUGGING(DRYRUN)) return;
 
+  // Start hook must happen before setTargetHotend()
+  print_job_start();
+
   if (code_seen('S')) {
     float temp = code_value();
     setTargetHotend(temp, target_extruder);
@@ -4093,9 +4096,11 @@ inline void gcode_M104() {
       if (dual_x_carriage_mode == DXC_DUPLICATION_MODE && target_extruder == 0)
         setTargetHotend1(temp == 0.0 ? 0.0 : temp + duplicate_extruder_temp_offset);
     #endif
+
+    if (temp > degHotend(target_extruder)) LCD_MESSAGEPGM(MSG_HEATING);
   }
 
-  print_job_stop();
+  if (print_job_stop()) LCD_MESSAGEPGM(WELCOME_MSG);
 }
 
 #if HAS_TEMP_0 || HAS_TEMP_BED || ENABLED(HEATER_0_USES_MAX6675)
@@ -4220,12 +4225,12 @@ inline void gcode_M105() {
 inline void gcode_M109() {
   bool no_wait_for_cooling = true;
 
-  // Start hook must happen before setTargetHotend()
-  print_job_start();
-
   if (setTargetedHotend(109)) return;
   if (DEBUGGING(DRYRUN)) return;
 
+  // Start hook must happen before setTargetHotend()
+  print_job_start();
+
   no_wait_for_cooling = code_seen('S');
   if (no_wait_for_cooling || code_seen('R')) {
     float temp = code_value();
@@ -7699,17 +7704,6 @@ bool print_job_start(millis_t t /* = 0 */) {
 }
 
 /**
- * Output the print job timer in seconds
- *
- * @return the number of seconds
- */
-millis_t print_job_timer() {
-  if (!print_job_start_ms) return 0;
-  return (((print_job_stop_ms > print_job_start_ms)
-    ? print_job_stop_ms : millis()) - print_job_start_ms) / 1000;
-}
-
-/**
  * Check if the running print job has finished and stop the timer
  *
  * When the target temperature for all extruders is zero then we assume that the
@@ -7727,3 +7721,14 @@ bool print_job_stop(bool force /* = false */) {
   print_job_stop_ms = millis();
   return true;
 }
+
+/**
+ * Output the print job timer in seconds
+ *
+ * @return the number of seconds
+ */
+millis_t print_job_timer() {
+  if (!print_job_start_ms) return 0;
+  return (((print_job_stop_ms > print_job_start_ms)
+    ? print_job_stop_ms : millis()) - print_job_start_ms) / 1000;
+}

