commit 4e84c803a37d89e85e2b49aaa0747a8766344ca3 (from e76aa9d79a3e638444a771167f4baac95fd008b4)
Merge: e76aa9d e2f7cb0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 6 20:05:16 2016 -0700

    Merge pull request #4232 from thinkyhead/rc_no_axis_codes_needed
    
    Don't use axis_codes if a literal will do

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index d7afc03..836b543 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -2897,9 +2897,7 @@ inline void gcode_G28() {
 
   #else // NOT DELTA
 
-    bool  homeX = code_seen(axis_codes[X_AXIS]),
-          homeY = code_seen(axis_codes[Y_AXIS]),
-          homeZ = code_seen(axis_codes[Z_AXIS]);
+    bool homeX = code_seen('X'), homeY = code_seen('Y'), homeZ = code_seen('Z');
 
     home_all_axis = (!homeX && !homeY && !homeZ) || (homeX && homeY && homeZ);
 
@@ -3522,7 +3520,7 @@ inline void gcode_G28() {
         delta_grid_spacing[0] = xGridSpacing;
         delta_grid_spacing[1] = yGridSpacing;
         float zoffset = zprobe_zoffset;
-        if (code_seen(axis_codes[Z_AXIS])) zoffset += code_value_axis_units(Z_AXIS);
+        if (code_seen('Z')) zoffset += code_value_axis_units(Z_AXIS);
       #else // !DELTA
         /**
          * solve the plane equation ax + by + d = z
@@ -3835,7 +3833,7 @@ inline void gcode_G28() {
  * G92: Set current position to given X Y Z E
  */
 inline void gcode_G92() {
-  bool didE = code_seen(axis_codes[E_AXIS]);
+  bool didE = code_seen('E');
 
   if (!didE) stepper.synchronize();
 
@@ -5017,7 +5015,7 @@ inline void gcode_M18_M84() {
     stepper_inactive_time = code_value_millis_from_seconds();
   }
   else {
-    bool all_axis = !((code_seen(axis_codes[X_AXIS])) || (code_seen(axis_codes[Y_AXIS])) || (code_seen(axis_codes[Z_AXIS])) || (code_seen(axis_codes[E_AXIS])));
+    bool all_axis = !((code_seen('X')) || (code_seen('Y')) || (code_seen('Z')) || (code_seen('E')));
     if (all_axis) {
       stepper.finish_and_disable();
     }
@@ -5265,11 +5263,9 @@ inline void gcode_M201() {
  * M203: Set maximum feedrate that your machine can sustain (M203 X200 Y200 Z300 E10000) in units/sec
  */
 inline void gcode_M203() {
-  for (int8_t i = 0; i < NUM_AXIS; i++) {
-    if (code_seen(axis_codes[i])) {
+  for (int8_t i = 0; i < NUM_AXIS; i++)
+    if (code_seen(axis_codes[i]))
       planner.max_feedrate[i] = code_value_axis_units(i);
-    }
-  }
 }
 
 /**

commit 4e84c803a37d89e85e2b49aaa0747a8766344ca3 (from e2f7cb0905569283ce24e13f1e1869ce91911119)
Merge: e76aa9d e2f7cb0
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Jul 6 20:05:16 2016 -0700

    Merge pull request #4232 from thinkyhead/rc_no_axis_codes_needed
    
    Don't use axis_codes if a literal will do

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 2dc8e24..836b543 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -2914,11 +2914,11 @@ inline void gcode_G28() {
 
     #elif defined(MIN_Z_HEIGHT_FOR_HOMING) && MIN_Z_HEIGHT_FOR_HOMING > 0
 
-      // Raise Z before homing any other axes and z is not already high enough (never lower z)
-      float z_dest = (current_position[Z_AXIS] += MIN_Z_HEIGHT_FOR_HOMING);
+      // Raise Z before homing, if specified
+      destination[Z_AXIS] = (current_position[Z_AXIS] += MIN_Z_HEIGHT_FOR_HOMING);
       #if ENABLED(DEBUG_LEVELING_FEATURE)
         if (DEBUGGING(LEVELING)) {
-          SERIAL_ECHOPAIR("Raise Z (before homing) to ", z_dest);
+          SERIAL_ECHOPAIR("Raise Z (before homing) to ", destination[Z_AXIS]);
           SERIAL_EOL;
         }
       #endif
@@ -2926,9 +2926,9 @@ inline void gcode_G28() {
       feedrate = homing_feedrate[Z_AXIS];
 
       #if HAS_BED_PROBE
-        do_blocking_move_to_z(z_dest);
+        do_blocking_move_to_z(destination[Z_AXIS]);
       #else
-        line_to_z(z_dest);
+        line_to_z(destination[Z_AXIS]);
         stepper.synchronize();
       #endif
 

