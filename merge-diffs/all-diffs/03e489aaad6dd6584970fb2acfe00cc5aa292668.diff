commit 03e489aaad6dd6584970fb2acfe00cc5aa292668 (from a5c059dcf5ab994731c0102242a57dd998271269)
Merge: a5c059d acc0e75
Author: Bo Herrmannsen <bo.herrmannsen@gmail.com>
Date:   Fri Dec 19 14:39:05 2014 +0100

    Merge pull request #1197 from foosel/fix/issue_1147
    
    Fixes commands not being acknowledged in the same order they are received in

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 59b291c..7efc15a 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -721,14 +721,7 @@ void get_command()
           case 1:
           case 2:
           case 3:
-            if(Stopped == false) { // If printer is stopped by an error the G[0-3] codes are ignored.
-          #ifdef SDSUPPORT
-              if(card.saving)
-                break;
-          #endif //SDSUPPORT
-              SERIAL_PROTOCOLLNPGM(MSG_OK);
-            }
-            else {
+            if (Stopped == true) {
               SERIAL_ERRORLNPGM(MSG_ERR_STOPPED);
               LCD_MESSAGEPGM(MSG_STOPPED);
             }
@@ -1357,7 +1350,6 @@ void process_commands()
           #endif //FWRETRACT
         prepare_move();
         //ClearToSend();
-        return;
       }
       break;
 #ifndef SCARA //disable arc support
@@ -1365,14 +1357,12 @@ void process_commands()
       if(Stopped == false) {
         get_arc_coordinates();
         prepare_arc_move(true);
-        return;
       }
       break;
     case 3: // G3  - CCW ARC
       if(Stopped == false) {
         get_arc_coordinates();
         prepare_arc_move(false);
-        return;
       }
       break;
 #endif

commit 03e489aaad6dd6584970fb2acfe00cc5aa292668 (from acc0e7527914948656ccabba35f7faedc94ef885)
Merge: a5c059d acc0e75
Author: Bo Herrmannsen <bo.herrmannsen@gmail.com>
Date:   Fri Dec 19 14:39:05 2014 +0100

    Merge pull request #1197 from foosel/fix/issue_1147
    
    Fixes commands not being acknowledged in the same order they are received in

diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index 1fe970a..b99ec6a 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -1,6 +1,8 @@
 #ifndef CONFIGURATION_H
 #define CONFIGURATION_H
 
+#include "boards.h"
+
 // This configuration file contains the basic settings.
 // Advanced settings can be found in Configuration_adv.h
 // BASIC SETTINGS: select your board type, temperature sensor type, axis scaling, and endstop configuration
@@ -36,54 +38,10 @@
 // This enables the serial port associated to the Bluetooth interface
 //#define BTENABLED              // Enable BT interface on AT90USB devices
 
-
-//// The following define selects which electronics board you have. Please choose the one that matches your setup
-// 10 = Gen7 custom (Alfons3 Version) "https://github.com/Alfons3/Generation_7_Electronics"
-// 11 = Gen7 v1.1, v1.2 = 11
-// 12 = Gen7 v1.3
-// 13 = Gen7 v1.4
-// 2  = Cheaptronic v1.0
-// 20 = Sethi 3D_1
-// 3  = MEGA/RAMPS up to 1.2 = 3
-// 33 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Bed)
-// 34 = RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Bed)
-// 35 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Fan)
-// 36 = RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Fan)
-// 4  = Duemilanove w/ ATMega328P pin assignment
-// 5  = Gen6
-// 51 = Gen6 deluxe
-// 6  = Sanguinololu < 1.2
-// 62 = Sanguinololu 1.2 and above
-// 63 = Melzi
-// 64 = STB V1.1
-// 65 = Azteeg X1
-// 66 = Melzi with ATmega1284 (MaKr3d version)
-// 67 = Azteeg X3
-// 68 = Azteeg X3 Pro
-// 7  = Ultimaker
-// 71 = Ultimaker (Older electronics. Pre 1.5.4. This is rare)
-// 72 = Ultimainboard 2.x (Uses TEMP_SENSOR 20)
-// 77 = 3Drag Controller
-// 8  = Teensylu
-// 80 = Rumba
-// 81 = Printrboard (AT90USB1286)
-// 82 = Brainwave (AT90USB646)
-// 83 = SAV Mk-I (AT90USB1286)
-// 84 = Teensy++2.0 (AT90USB1286) // CLI compile: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
-// 9  = Gen3+
-// 22 = Gen3 Monolithic Electronics
-// 70 = Megatronics
-// 701= Megatronics v2.0
-// 702= Minitronics v1.0
-// 90 = Alpha OMCA board
-// 91 = Final OMCA board
-// 301= Rambo
-// 21 = Elefu Ra Board (v3)
-// 88 = 5DPrint D8 Driver Board
-// 999 = Leapfrog
-
+// The following define selects which electronics board you have.
+// Please choose the name from boards.h that matches your setup
 #ifndef MOTHERBOARD
-#define MOTHERBOARD 7
+  #define MOTHERBOARD BOARD_ULTIMAKER
 #endif
 
 // Define this to set a custom name for your generic Mendel,
diff --git a/Marlin/ConfigurationStore.cpp b/Marlin/ConfigurationStore.cpp
index dbbe33a..54e69c0 100644
--- a/Marlin/ConfigurationStore.cpp
+++ b/Marlin/ConfigurationStore.cpp
@@ -116,38 +116,38 @@ void Config_PrintSettings()
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("Steps per unit:");
     SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("  M92 X",axis_steps_per_unit[0]);
-    SERIAL_ECHOPAIR(" Y",axis_steps_per_unit[1]);
-    SERIAL_ECHOPAIR(" Z",axis_steps_per_unit[2]);
-    SERIAL_ECHOPAIR(" E",axis_steps_per_unit[3]);
+    SERIAL_ECHOPAIR("  M92 X",axis_steps_per_unit[X_AXIS]);
+    SERIAL_ECHOPAIR(" Y",axis_steps_per_unit[Y_AXIS]);
+    SERIAL_ECHOPAIR(" Z",axis_steps_per_unit[Z_AXIS]);
+    SERIAL_ECHOPAIR(" E",axis_steps_per_unit[E_AXIS]);
     SERIAL_ECHOLN("");
       
     SERIAL_ECHO_START;
 #ifdef SCARA
 SERIAL_ECHOLNPGM("Scaling factors:");
     SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("  M365 X",axis_scaling[0]);
-    SERIAL_ECHOPAIR(" Y",axis_scaling[1]);
-    SERIAL_ECHOPAIR(" Z",axis_scaling[2]);
+    SERIAL_ECHOPAIR("  M365 X",axis_scaling[X_AXIS]);
+    SERIAL_ECHOPAIR(" Y",axis_scaling[Y_AXIS]);
+    SERIAL_ECHOPAIR(" Z",axis_scaling[Z_AXIS]);
     SERIAL_ECHOLN("");
       
     SERIAL_ECHO_START;
 #endif
     SERIAL_ECHOLNPGM("Maximum feedrates (mm/s):");
     SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("  M203 X",max_feedrate[0]);
-    SERIAL_ECHOPAIR(" Y",max_feedrate[1] ); 
-    SERIAL_ECHOPAIR(" Z", max_feedrate[2] ); 
-    SERIAL_ECHOPAIR(" E", max_feedrate[3]);
+    SERIAL_ECHOPAIR("  M203 X", max_feedrate[X_AXIS]);
+    SERIAL_ECHOPAIR(" Y", max_feedrate[Y_AXIS]); 
+    SERIAL_ECHOPAIR(" Z", max_feedrate[Z_AXIS]); 
+    SERIAL_ECHOPAIR(" E", max_feedrate[E_AXIS]);
     SERIAL_ECHOLN("");
 
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("Maximum Acceleration (mm/s2):");
     SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("  M201 X" ,max_acceleration_units_per_sq_second[0] ); 
-    SERIAL_ECHOPAIR(" Y" , max_acceleration_units_per_sq_second[1] ); 
-    SERIAL_ECHOPAIR(" Z" ,max_acceleration_units_per_sq_second[2] );
-    SERIAL_ECHOPAIR(" E" ,max_acceleration_units_per_sq_second[3]);
+    SERIAL_ECHOPAIR("  M201 X" ,max_acceleration_units_per_sq_second[X_AXIS] ); 
+    SERIAL_ECHOPAIR(" Y" , max_acceleration_units_per_sq_second[Y_AXIS] ); 
+    SERIAL_ECHOPAIR(" Z" ,max_acceleration_units_per_sq_second[Z_AXIS] );
+    SERIAL_ECHOPAIR(" E" ,max_acceleration_units_per_sq_second[E_AXIS]);
     SERIAL_ECHOLN("");
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("Acceleration: S=acceleration, T=retract acceleration");
@@ -170,17 +170,17 @@ SERIAL_ECHOLNPGM("Scaling factors:");
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("Home offset (mm):");
     SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("  M206 X",add_homing[0] );
-    SERIAL_ECHOPAIR(" Y" ,add_homing[1] );
-    SERIAL_ECHOPAIR(" Z" ,add_homing[2] );
+    SERIAL_ECHOPAIR("  M206 X",add_homing[X_AXIS] );
+    SERIAL_ECHOPAIR(" Y" ,add_homing[Y_AXIS] );
+    SERIAL_ECHOPAIR(" Z" ,add_homing[Z_AXIS] );
     SERIAL_ECHOLN("");
 #ifdef DELTA
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("Endstop adjustement (mm):");
     SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("  M666 X",endstop_adj[0] );
-    SERIAL_ECHOPAIR(" Y" ,endstop_adj[1] );
-    SERIAL_ECHOPAIR(" Z" ,endstop_adj[2] );
+    SERIAL_ECHOPAIR("  M666 X",endstop_adj[X_AXIS] );
+    SERIAL_ECHOPAIR(" Y" ,endstop_adj[Y_AXIS] );
+    SERIAL_ECHOPAIR(" Z" ,endstop_adj[Z_AXIS] );
 	SERIAL_ECHOLN("");
 	SERIAL_ECHO_START;
 	SERIAL_ECHOLNPGM("Delta settings: L=delta_diagonal_rod, R=delta_radius, S=delta_segments_per_second");
@@ -303,9 +303,9 @@ void Config_ResetDefault()
     max_xy_jerk=DEFAULT_XYJERK;
     max_z_jerk=DEFAULT_ZJERK;
     max_e_jerk=DEFAULT_EJERK;
-    add_homing[0] = add_homing[1] = add_homing[2] = 0;
+    add_homing[X_AXIS] = add_homing[Y_AXIS] = add_homing[Z_AXIS] = 0;
 #ifdef DELTA
-	endstop_adj[0] = endstop_adj[1] = endstop_adj[2] = 0;
+	endstop_adj[X_AXIS] = endstop_adj[Y_AXIS] = endstop_adj[Z_AXIS] = 0;
 	delta_radius= DELTA_RADIUS;
 	delta_diagonal_rod= DELTA_DIAGONAL_ROD;
 	delta_segments_per_second= DELTA_SEGMENTS_PER_SECOND;
diff --git a/Marlin/Configuration_adv.h b/Marlin/Configuration_adv.h
index d0f988c..c099a18 100644
--- a/Marlin/Configuration_adv.h
+++ b/Marlin/Configuration_adv.h
@@ -292,7 +292,6 @@
 #define SD_FINISHED_STEPPERRELEASE true  //if sd support and the file is finished: disable steppers?
 #define SD_FINISHED_RELEASECOMMAND "M84 X Y Z E" // You might want to keep the z enabled so your bed stays in place.
 
-//#define SDCARD_SORT_ALPHA // Sort SD file listings in ASCII order. Find additional options in cardreader.h
 #define SDCARD_RATHERRECENTFIRST  //reverse file order of sd card menu display. Its sorted practically after the file system block order.
 // if a file is deleted, it frees a block. hence, the order is not purely chronological. To still have auto0.g accessible, there is again the option to do that.
 // using:
@@ -345,8 +344,8 @@
 
   #define D_FILAMENT 2.85
   #define STEPS_MM_E 836
-  #define EXTRUTION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
-  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUTION_AREA)
+  #define EXTRUSION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
+  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUSION_AREA)
 
 #endif // ADVANCE
 
diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 9d76589..7efc15a 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -429,7 +429,7 @@ void enquecommand(const char *cmd)
     //this is dangerous if a mixing of serial and this happens
     strcpy(&(cmdbuffer[bufindw][0]),cmd);
     SERIAL_ECHO_START;
-    SERIAL_ECHOPGM("enqueing \"");
+    SERIAL_ECHOPGM(MSG_Enqueing);
     SERIAL_ECHO(cmdbuffer[bufindw]);
     SERIAL_ECHOLNPGM("\"");
     bufindw= (bufindw + 1)%BUFSIZE;
@@ -444,7 +444,7 @@ void enquecommand_P(const char *cmd)
     //this is dangerous if a mixing of serial and this happens
     strcpy_P(&(cmdbuffer[bufindw][0]),cmd);
     SERIAL_ECHO_START;
-    SERIAL_ECHOPGM("enqueing \"");
+    SERIAL_ECHOPGM(MSG_Enqueing);
     SERIAL_ECHO(cmdbuffer[bufindw]);
     SERIAL_ECHOLNPGM("\"");
     bufindw= (bufindw + 1)%BUFSIZE;
@@ -1527,7 +1527,7 @@ void process_commands()
 		#ifdef SCARA
 		   current_position[X_AXIS]=code_value();
 		#else
-		   current_position[X_AXIS]=code_value()+add_homing[0];
+		   current_position[X_AXIS]=code_value()+add_homing[X_AXIS];
 		#endif
         }
       }
@@ -1537,7 +1537,7 @@ void process_commands()
          #ifdef SCARA
 		   current_position[Y_AXIS]=code_value();
 		#else
-		   current_position[Y_AXIS]=code_value()+add_homing[1];
+		   current_position[Y_AXIS]=code_value()+add_homing[Y_AXIS];
 		#endif
         }
       }
@@ -1602,7 +1602,7 @@ void process_commands()
 
       if(code_seen(axis_codes[Z_AXIS])) {
         if(code_value_long() != 0) {
-          current_position[Z_AXIS]=code_value()+add_homing[2];
+          current_position[Z_AXIS]=code_value()+add_homing[Z_AXIS];
         }
       }
       #ifdef ENABLE_AUTO_BED_LEVELING
@@ -2735,9 +2735,9 @@ Sigma_Exit:
       SERIAL_PROTOCOLLN("");
       
       SERIAL_PROTOCOLPGM("SCARA Cal - Theta:");
-      SERIAL_PROTOCOL(delta[X_AXIS]+add_homing[0]);
+      SERIAL_PROTOCOL(delta[X_AXIS]+add_homing[X_AXIS]);
       SERIAL_PROTOCOLPGM("   Psi+Theta (90):");
-      SERIAL_PROTOCOL(delta[Y_AXIS]-delta[X_AXIS]-90+add_homing[1]);
+      SERIAL_PROTOCOL(delta[Y_AXIS]-delta[X_AXIS]-90+add_homing[Y_AXIS]);
       SERIAL_PROTOCOLLN("");
       
       SERIAL_PROTOCOLPGM("SCARA step Cal - Theta:");
@@ -2873,11 +2873,11 @@ Sigma_Exit:
 	  #ifdef SCARA
 	   if(code_seen('T'))       // Theta
       {
-        add_homing[0] = code_value() ;
+        add_homing[X_AXIS] = code_value() ;
       }
       if(code_seen('P'))       // Psi
       {
-        add_homing[1] = code_value() ;
+        add_homing[Y_AXIS] = code_value() ;
       }
 	  #endif
       break;
@@ -3265,11 +3265,11 @@ Sigma_Exit:
       //SERIAL_ECHOLN(" Soft endstops disabled ");
       if(Stopped == false) {
         //get_coordinates(); // For X Y Z E F
-        delta[0] = 0;
-        delta[1] = 120;
+        delta[X_AXIS] = 0;
+        delta[Y_AXIS] = 120;
         calculate_SCARA_forward_Transform(delta);
-        destination[0] = delta[0]/axis_scaling[X_AXIS];
-        destination[1] = delta[1]/axis_scaling[Y_AXIS];
+        destination[X_AXIS] = delta[X_AXIS]/axis_scaling[X_AXIS];
+        destination[Y_AXIS] = delta[Y_AXIS]/axis_scaling[Y_AXIS];
         
         prepare_move();
         //ClearToSend();
@@ -3283,11 +3283,11 @@ Sigma_Exit:
       //SERIAL_ECHOLN(" Soft endstops disabled ");
       if(Stopped == false) {
         //get_coordinates(); // For X Y Z E F
-        delta[0] = 90;
-        delta[1] = 130;
+        delta[X_AXIS] = 90;
+        delta[Y_AXIS] = 130;
         calculate_SCARA_forward_Transform(delta);
-        destination[0] = delta[0]/axis_scaling[X_AXIS];
-        destination[1] = delta[1]/axis_scaling[Y_AXIS];
+        destination[X_AXIS] = delta[X_AXIS]/axis_scaling[X_AXIS];
+        destination[Y_AXIS] = delta[Y_AXIS]/axis_scaling[Y_AXIS];
         
         prepare_move();
         //ClearToSend();
@@ -3300,11 +3300,11 @@ Sigma_Exit:
       //SERIAL_ECHOLN(" Soft endstops disabled ");
       if(Stopped == false) {
         //get_coordinates(); // For X Y Z E F
-        delta[0] = 60;
-        delta[1] = 180;
+        delta[X_AXIS] = 60;
+        delta[Y_AXIS] = 180;
         calculate_SCARA_forward_Transform(delta);
-        destination[0] = delta[0]/axis_scaling[X_AXIS];
-        destination[1] = delta[1]/axis_scaling[Y_AXIS];
+        destination[X_AXIS] = delta[X_AXIS]/axis_scaling[X_AXIS];
+        destination[Y_AXIS] = delta[Y_AXIS]/axis_scaling[Y_AXIS];
         
         prepare_move();
         //ClearToSend();
@@ -3317,11 +3317,11 @@ Sigma_Exit:
       //SERIAL_ECHOLN(" Soft endstops disabled ");
       if(Stopped == false) {
         //get_coordinates(); // For X Y Z E F
-        delta[0] = 50;
-        delta[1] = 90;
+        delta[X_AXIS] = 50;
+        delta[Y_AXIS] = 90;
         calculate_SCARA_forward_Transform(delta);
-        destination[0] = delta[0]/axis_scaling[X_AXIS];
-        destination[1] = delta[1]/axis_scaling[Y_AXIS];
+        destination[X_AXIS] = delta[X_AXIS]/axis_scaling[X_AXIS];
+        destination[Y_AXIS] = delta[Y_AXIS]/axis_scaling[Y_AXIS];
         
         prepare_move();
         //ClearToSend();
@@ -3334,11 +3334,11 @@ Sigma_Exit:
       //SERIAL_ECHOLN(" Soft endstops disabled ");
       if(Stopped == false) {
         //get_coordinates(); // For X Y Z E F
-        delta[0] = 45;
-        delta[1] = 135;
+        delta[X_AXIS] = 45;
+        delta[Y_AXIS] = 135;
         calculate_SCARA_forward_Transform(delta);
-        destination[0] = delta[0]/axis_scaling[X_AXIS];
-        destination[1] = delta[1]/axis_scaling[Y_AXIS]; 
+        destination[X_AXIS] = delta[X_AXIS]/axis_scaling[X_AXIS];
+        destination[Y_AXIS] = delta[Y_AXIS]/axis_scaling[Y_AXIS]; 
         
         prepare_move();
         //ClearToSend();
@@ -4010,9 +4010,9 @@ for (int s = 1; s <= steps; s++) {
 
 	
 	calculate_delta(destination);
-         //SERIAL_ECHOPGM("destination[0]="); SERIAL_ECHOLN(destination[0]);
-         //SERIAL_ECHOPGM("destination[1]="); SERIAL_ECHOLN(destination[1]);
-         //SERIAL_ECHOPGM("destination[2]="); SERIAL_ECHOLN(destination[2]);
+         //SERIAL_ECHOPGM("destination[X_AXIS]="); SERIAL_ECHOLN(destination[X_AXIS]);
+         //SERIAL_ECHOPGM("destination[Y_AXIS]="); SERIAL_ECHOLN(destination[Y_AXIS]);
+         //SERIAL_ECHOPGM("destination[Z_AXIS]="); SERIAL_ECHOLN(destination[Z_AXIS]);
          //SERIAL_ECHOPGM("delta[X_AXIS]="); SERIAL_ECHOLN(delta[X_AXIS]);
          //SERIAL_ECHOPGM("delta[Y_AXIS]="); SERIAL_ECHOLN(delta[Y_AXIS]);
          //SERIAL_ECHOPGM("delta[Z_AXIS]="); SERIAL_ECHOLN(delta[Z_AXIS]);
diff --git a/Marlin/SdFatConfig.h b/Marlin/SdFatConfig.h
index 39ef381..24caf6f 100644
--- a/Marlin/SdFatConfig.h
+++ b/Marlin/SdFatConfig.h
@@ -111,12 +111,12 @@ uint8_t const SOFT_SPI_SCK_PIN = 13;
 /**
  * Defines for long (vfat) filenames
  */
-/** Number of UTF-16 characters per entry */
-#define FILENAME_LENGTH 13
 /** Number of VFAT entries used. Every entry has 13 UTF-16 characters */
 #define MAX_VFAT_ENTRIES (2)
+/** Number of UTF-16 characters per entry */
+#define FILENAME_LENGTH 13
 /** Total size of the buffer used to store the long filenames */
-#define LONG_FILENAME_LENGTH (FILENAME_LENGTH*MAX_VFAT_ENTRIES+1)
+#define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
 #endif  // SdFatConfig_h
 
 
diff --git a/Marlin/boards.h b/Marlin/boards.h
new file mode 100644
index 0000000..af249c7
--- /dev/null
+++ b/Marlin/boards.h
@@ -0,0 +1,55 @@
+#ifndef BOARDS_H
+#define BOARDS_H
+
+#define BOARD_UNKNOWN -1
+
+#define BOARD_GEN7_CUSTOM       10   // Gen7 custom (Alfons3 Version) "https://github.com/Alfons3/Generation_7_Electronics"
+#define BOARD_GEN7_12           11   // Gen7 v1.1, v1.2
+#define BOARD_GEN7_13           12   // Gen7 v1.3
+#define BOARD_GEN7_14           13   // Gen7 v1.4
+#define BOARD_CHEAPTRONIC       2    // Cheaptronic v1.0
+#define BOARD_SETHI             20   // Sethi 3D_1
+#define BOARD_RAMPS_OLD         3    // MEGA/RAMPS up to 1.2
+#define BOARD_RAMPS_13_EFB      33   // RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Bed)
+#define BOARD_RAMPS_13_EEB      34   // RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Bed)
+#define BOARD_RAMPS_13_EFF      35   // RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Fan)
+#define BOARD_RAMPS_13_EEF      36   // RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Fan)
+#define BOARD_DUEMILANOVE_328P  4    // Duemilanove w/ ATMega328P pin assignment
+#define BOARD_GEN6              5    // Gen6
+#define BOARD_GEN6_DELUXE       51   // Gen6 deluxe
+#define BOARD_SANGUINOLOLU_11   6    // Sanguinololu < 1.2
+#define BOARD_SANGUINOLOLU_12   62   // Sanguinololu 1.2 and above
+#define BOARD_MELZI             63   // Melzi
+#define BOARD_STB_11            64   // STB V1.1
+#define BOARD_AZTEEG_X1         65   // Azteeg X1
+#define BOARD_MELZI_1284        66   // Melzi with ATmega1284 (MaKr3d version)
+#define BOARD_AZTEEG_X3         67   // Azteeg X3
+#define BOARD_AZTEEG_X3_PRO     68   // Azteeg X3 Pro
+#define BOARD_ULTIMAKER         7    // Ultimaker
+#define BOARD_ULTIMAKER_OLD     71   // Ultimaker (Older electronics. Pre 1.5.4. This is rare)
+#define BOARD_ULTIMAIN_2        72   // Ultimainboard 2.x (Uses TEMP_SENSOR 20)
+#define BOARD_3DRAG             77   // 3Drag Controller
+#define BOARD_TEENSYLU          8    // Teensylu
+#define BOARD_RUMBA             80   // Rumba
+#define BOARD_PRINTRBOARD       81   // Printrboard (AT90USB1286)
+#define BOARD_BRAINWAVE         82   // Brainwave (AT90USB646)
+#define BOARD_SAV_MKI           83   // SAV Mk-I (AT90USB1286)
+#define BOARD_TEENSY2           84   // Teensy++2.0 (AT90USB1286) - CLI compile: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
+#define BOARD_GEN3_PLUS         9    // Gen3+
+#define BOARD_GEN3_MONOLITHIC   22   // Gen3 Monolithic Electronics
+#define BOARD_MEGATRONICS       70   // Megatronics
+#define BOARD_MEGATRONICS_2     701  // Megatronics v2.0
+#define BOARD_MEGATRONICS_1     702  // Minitronics v1.0
+#define BOARD_OMCA_A            90   // Alpha OMCA board
+#define BOARD_OMCA              91   // Final OMCA board
+#define BOARD_RAMBO             301  // Rambo
+#define BOARD_ELEFU_3           21   // Elefu Ra Board (v3)
+#define BOARD_5DPRINT           88   // 5DPrint D8 Driver Board
+#define BOARD_LEAPFROG          999  // Leapfrog
+
+#define BOARD_99                99   // This is in pins.h but...?
+
+#define MB(board) (MOTHERBOARD==BOARD_##board)
+#define IS_RAMPS (MB(RAMPS_OLD) || MB(RAMPS_13_EFB) || MB(RAMPS_13_EEB) || MB(RAMPS_13_EFF) || MB(RAMPS_13_EEF))
+
+#endif //__BOARDS_H
diff --git a/Marlin/cardreader.cpp b/Marlin/cardreader.cpp
index 913a9d1..e22f343 100644
--- a/Marlin/cardreader.cpp
+++ b/Marlin/cardreader.cpp
@@ -11,9 +11,6 @@
 
 CardReader::CardReader()
 {
-  #ifdef SDCARD_SORT_ALPHA
-   sort_count = 0;
-  #endif
    filesize = 0;
    sdpos = 0;
    sdprinting = false;
@@ -36,31 +33,35 @@ CardReader::CardReader()
   autostart_atmillis=millis()+5000;
 }
 
-char *createFilename(char *buffer, const dir_t &p) //buffer>12characters
+char *createFilename(char *buffer,const dir_t &p) //buffer>12characters
 {
   char *pos=buffer;
-  for (uint8_t i = 0; i < 11; i++) {
-    if (p.name[i] == ' ') continue;
-    if (i == 8) *pos++ = '.';
-    *pos++ = p.name[i];
+  for (uint8_t i = 0; i < 11; i++) 
+  {
+    if (p.name[i] == ' ')continue;
+    if (i == 8) 
+    {
+      *pos++='.';
+    }
+    *pos++=p.name[i];
   }
-  *pos++ = 0;
+  *pos++=0;
   return buffer;
 }
 
 
-void  CardReader::lsDive(const char *prepend,SdFile parent)
+void CardReader::lsDive(const char *prepend, SdFile parent, const char * const match/*=NULL*/)
 {
   dir_t p;
-  uint8_t cnt=0;
+ uint8_t cnt=0;
  
   while (parent.readDir(p, longFilename) > 0)
   {
     if( DIR_IS_SUBDIR(&p) && lsAction!=LS_Count && lsAction!=LS_GetFilename) // hence LS_SerialPrint
     {
 
-      char path[FILENAME_LENGTH*2];
-      char lfilename[FILENAME_LENGTH];
+      char path[13*2];
+      char lfilename[13];
       createFilename(lfilename,p);
       
       path[0]=0;
@@ -86,22 +87,21 @@ void  CardReader::lsDive(const char *prepend,SdFile parent)
       }
       lsDive(path,dir);
       //close done automatically by destructor of SdFile
+
+      
     }
     else
     {
-      if (p.name[0] == DIR_NAME_FREE) break;
-      if (p.name[0] == DIR_NAME_DELETED || p.name[0] == '.'|| p.name[0] == '_') continue;
-      if (longFilename[0] != '\0' &&
-          (longFilename[0] == '.' || longFilename[0] == '_')) continue;
-      if ( p.name[0] == '.')
-      {
-        if ( p.name[1] != '.')
-        continue;
-      }
+      char pn0 = p.name[0];
+      if (pn0 == DIR_NAME_FREE) break;
+      if (pn0 == DIR_NAME_DELETED || pn0 == '.' || pn0 == '_') continue;
+      char lf0 = longFilename[0];
+      if (lf0 == '.' || lf0 == '_') continue;
 
       if (!DIR_IS_FILE_OR_SUBDIR(&p)) continue;
       filenameIsDir=DIR_IS_SUBDIR(&p);
-
+      
+      
       if(!filenameIsDir)
       {
         if(p.name[8]!='G') continue;
@@ -120,8 +120,12 @@ void  CardReader::lsDive(const char *prepend,SdFile parent)
       } 
       else if(lsAction==LS_GetFilename)
       {
-        if (cnt == nrFiles) return;
+        if (match != NULL) {
+          if (strcasecmp(match, filename) == 0) return;
+        }
+        else if (cnt == nrFiles) return;
         cnt++;
+        
       }
     }
   }
@@ -130,6 +134,9 @@ void  CardReader::lsDive(const char *prepend,SdFile parent)
 void CardReader::ls() 
 {
   lsAction=LS_SerialPrint;
+  if(lsAction==LS_Count)
+  nrFiles=0;
+
   root.rewind();
   lsDive("",root);
 }
@@ -176,9 +183,6 @@ void CardReader::initsd()
   }
   workDir=root;
   curDir=&root;
-  #ifdef SDCARD_SORT_ALPHA
-    presort();
-  #endif
   /*
   if(!workDir.openRoot(&volume))
   {
@@ -195,10 +199,8 @@ void CardReader::setroot()
     SERIAL_ECHOLNPGM(MSG_SD_WORKDIR_FAIL);
   }*/
   workDir=root;
+  
   curDir=&workDir;
-  #ifdef SDCARD_SORT_ALPHA
-    presort();
-  #endif
 }
 void CardReader::release()
 {
@@ -211,7 +213,6 @@ void CardReader::startFileprint()
   if(cardOK)
   {
     sdprinting = true;
-    flush_presort();
   }
 }
 
@@ -240,7 +241,7 @@ void CardReader::getAbsFilename(char *t)
     while(*t!=0 && cnt< MAXPATHNAMELENGTH) 
     {t++;cnt++;}  //crawl counter forward.
   }
-  if(cnt<MAXPATHNAMELENGTH-FILENAME_LENGTH)
+  if(cnt<MAXPATHNAMELENGTH-13)
     file.getFilename(t);
   else
     t[0]=0;
@@ -310,7 +311,7 @@ void CardReader::openFile(char* name,bool read, bool replace_current/*=true*/)
       //SERIAL_ECHO("end  :");SERIAL_ECHOLN((int)(dirname_end-name));
       if(dirname_end>0 && dirname_end>dirname_start)
       {
-        char subdirname[FILENAME_LENGTH];
+        char subdirname[13];
         strncpy(subdirname, dirname_start, dirname_end-dirname_start);
         subdirname[dirname_end-dirname_start]=0;
         SERIAL_ECHOLN(subdirname);
@@ -355,7 +356,8 @@ void CardReader::openFile(char* name,bool read, bool replace_current/*=true*/)
       sdpos = 0;
       
       SERIAL_PROTOCOLLNPGM(MSG_SD_FILE_SELECTED);
-      lcd_setstatus(fname);
+      getfilename(0, fname);
+      lcd_setstatus(longFilename[0] ? longFilename : fname);
     }
     else
     {
@@ -406,7 +408,7 @@ void CardReader::removeFile(char* name)
       //SERIAL_ECHO("end  :");SERIAL_ECHOLN((int)(dirname_end-name));
       if(dirname_end>0 && dirname_end>dirname_start)
       {
-        char subdirname[FILENAME_LENGTH];
+        char subdirname[13];
         strncpy(subdirname, dirname_start, dirname_end-dirname_start);
         subdirname[dirname_end-dirname_start]=0;
         SERIAL_ECHOLN(subdirname);
@@ -444,9 +446,6 @@ void CardReader::removeFile(char* name)
       SERIAL_PROTOCOLPGM("File deleted:");
       SERIAL_PROTOCOLLN(fname);
       sdpos = 0;
-      #ifdef SDCARD_SORT_ALPHA
-        presort();
-      #endif
     }
     else
     {
@@ -560,21 +559,14 @@ void CardReader::closefile(bool store_location)
   
 }
 
-void CardReader::getfilename(const uint16_t nr)
+void CardReader::getfilename(uint16_t nr, const char * const match/*=NULL*/)
 {
-  #if defined(SDCARD_SORT_ALPHA) && SORT_USES_RAM && SORT_USES_MORE_RAM
-    if (nr < sort_count) {
-      strcpy(filename, sortshort[nr]);
-      strcpy(longFilename, sortnames[nr]);
-      filenameIsDir = isDir[nr];
-      return;
-    }
-  #endif
   curDir=&workDir;
   lsAction=LS_GetFilename;
   nrFiles=nr;
   curDir->rewind();
-  lsDive("",*curDir);
+  lsDive("",*curDir,match);
+  
 }
 
 uint16_t CardReader::getnrfilenames()
@@ -592,7 +584,7 @@ void CardReader::chdir(const char * relpath)
 {
   SdFile newfile;
   SdFile *parent=&root;
-
+  
   if(workDir.isOpen())
     parent=&workDir;
   
@@ -610,164 +602,21 @@ void CardReader::chdir(const char * relpath)
       workDirParents[0]=*parent;
     }
     workDir=newfile;
-    #ifdef SDCARD_SORT_ALPHA
-      presort();
-    #endif
   }
 }
 
 void CardReader::updir()
 {
-  if (workDirDepth > 0)
+  if(workDirDepth > 0)
   {
     --workDirDepth;
     workDir = workDirParents[0];
+    int d;
     for (int d = 0; d < workDirDepth; d++)
       workDirParents[d] = workDirParents[d+1];
-    #ifdef SDCARD_SORT_ALPHA
-      presort();
-    #endif
-  }
-}
-
-#ifdef SDCARD_SORT_ALPHA
-
-/**
- * Get the name of a file in the current directory by sort-index
- */
-void CardReader::getfilename_sorted(const uint16_t nr) {
-  getfilename(nr < sort_count ? sort_order[nr] : nr);
-}
-
-/**
- * Read all the files and produce a sort key
- *
- * We can do this in 3 ways...
- *  - Minimal RAM: Read two filenames at a time sorting along...
- *  - Some RAM: Buffer the directory and return filenames from RAM
- *  - Some RAM: Buffer the directory just for this sort
- */
-void CardReader::presort()
-{
-  flush_presort();
-
-  uint16_t fileCnt = getnrfilenames();
-  if (fileCnt > 0) {
-
-    if (fileCnt > SORT_LIMIT) fileCnt = SORT_LIMIT;
-
-    #if SORT_USES_RAM
-      #if SORT_USES_MORE_RAM
-        sortshort = (char**)calloc(fileCnt, sizeof(char*));
-        sortnames = (char**)calloc(fileCnt, sizeof(char*));
-      #else
-        char *sortnames[fileCnt];
-      #endif
-    #else
-      char name1[LONG_FILENAME_LENGTH+1];
-    #endif
-
-    #if FOLDER_SORTING != 0
-      #if SORT_USES_RAM && SORT_USES_MORE_RAM
-        isDir = (uint8_t*)calloc(fileCnt, sizeof(uint8_t));
-      #else
-        uint8_t isDir[fileCnt];
-      #endif
-    #endif
-
-    sort_order = new uint8_t[fileCnt];
-
-    if (fileCnt > 1) {
-
-      // Init sort order. If using RAM then read all filenames now.
-      for (uint16_t i=0; i<fileCnt; i++) {
-        sort_order[i] = i;
-        #if SORT_USES_RAM
-          getfilename(i);
-          sortnames[i] = strdup(longFilename[0] ? longFilename : filename);
-          #if SORT_USES_MORE_RAM
-            sortshort[i] = strdup(filename);
-          #endif
-          // char out[30];
-          // sprintf_P(out, PSTR("---- %i %s %s"), i, filenameIsDir ? "D" : " ", sortnames[i]);
-          // SERIAL_ECHOLN(out);
-          #if FOLDER_SORTING != 0
-            isDir[i] = filenameIsDir;
-          #endif
-        #endif
-      }
-
-      // Bubble Sort
-      for (uint16_t i=fileCnt; --i;) {
-        bool cmp, didSwap = false;
-        for (uint16_t j=0; j<i; ++j) {
-          uint16_t s1 = j, s2 = j+1, o1 = sort_order[s1], o2 = sort_order[s2];
-          #if SORT_USES_RAM
-            #if FOLDER_SORTING != 0
-              cmp = (isDir[o1] == isDir[o2]) ? (strcasecmp(sortnames[o1], sortnames[o2]) > 0) : isDir[FOLDER_SORTING > 0 ? o1 : o2];
-            #else
-              cmp = strcasecmp(sortnames[o1], sortnames[o2]) > 0;
-            #endif
-          #else
-            getfilename(o1);
-            strcpy(name1, longFilename[0] ? longFilename : filename);
-            #if FOLDER_SORTING != 0
-              bool dir1 = filenameIsDir;
-            #endif
-            getfilename(o2);
-            char *name2 = longFilename[0] ? longFilename : filename;
-            #if FOLDER_SORTING != 0
-              cmp = (dir1 == filenameIsDir) ? (strcasecmp(name1, name2) > 0) : (FOLDER_SORTING > 0 ? dir1 : !dir1);
-            #else
-              cmp = strcasecmp(name1, name2) > 0;
-            #endif
-          #endif
-          if (cmp) {
-            sort_order[s1] = o2;
-            sort_order[s2] = o1;
-            didSwap = true;
-          }
-        }
-        if (!didSwap) break;
-      }
-
-      #if SORT_USES_RAM && !SORT_USES_MORE_RAM
-        for (uint16_t i=0; i<fileCnt; ++i) free(sortnames[i]);
-      #endif
-    }
-    else {
-      sort_order[0] = 0;
-      #if SORT_USES_RAM && SORT_USES_MORE_RAM
-        sortnames = (char**)malloc(sizeof(char*));
-        sortshort = (char**)malloc(sizeof(char*));
-        isDir = (uint8_t*)malloc(sizeof(uint8_t));
-        getfilename(0);
-        sortnames[0] = strdup(longFilename[0] ? longFilename : filename);
-        sortshort[0] = strdup(filename);
-        isDir[0] = filenameIsDir;
-      #endif
-    }
-
-    sort_count = fileCnt;
-  }
-}
-
-void CardReader::flush_presort() {
-  if (sort_count > 0) {
-    #if SORT_USES_RAM && SORT_USES_MORE_RAM
-      for (uint8_t i=0; i<sort_count; ++i) {
-        free(sortshort[i]);
-        free(sortnames[i]);
-      }
-      free(sortshort);
-      free(sortnames);
-    #endif
-    delete sort_order;
-    sort_count = 0;
   }
 }
 
-#endif // SDCARD_SORT_ALPHA
 
 void CardReader::printingHasFinished()
 {
@@ -791,9 +640,6 @@ void CardReader::printingHasFinished()
           enquecommand_P(PSTR(SD_FINISHED_RELEASECOMMAND));
       }
       autotempShutdown();
-      #ifdef SDCARD_SORT_ALPHA
-        presort();
-      #endif
     }
 }
 #endif //SDSUPPORT
diff --git a/Marlin/cardreader.h b/Marlin/cardreader.h
index f3af6da..e513dc0 100644
--- a/Marlin/cardreader.h
+++ b/Marlin/cardreader.h
@@ -3,14 +3,7 @@
 
 #ifdef SDSUPPORT
 
-#define MAX_DIR_DEPTH 10          // Maximum folder depth
-
-#ifdef SDCARD_SORT_ALPHA
-  #define SORT_USES_RAM false      // Buffer while sorting, else re-read from SD
-  #define SORT_USES_MORE_RAM false // Always keep the directory in RAM
-  #define SORT_LIMIT 256           // Maximum number of sorted items
-  #define FOLDER_SORTING -1        // -1=above  0=none  1=below
-#endif
+#define MAX_DIR_DEPTH 10
 
 #include "SdFile.h"
 enum LsAction {LS_SerialPrint,LS_Count,LS_GetFilename};
@@ -35,7 +28,7 @@ public:
   void getStatus();
   void printingHasFinished();
 
-  void getfilename(const uint16_t nr);
+  void getfilename(uint16_t nr, const char* const match=NULL);
   uint16_t getnrfilenames();
   
   void getAbsFilename(char *t);
@@ -46,12 +39,6 @@ public:
   void updir();
   void setroot();
 
-#ifdef SDCARD_SORT_ALPHA
-  void presort();
-  void flush_presort();
-  void getfilename_sorted(const uint16_t nr);
-#endif
-
 
   FORCE_INLINE bool isFileOpen() { return file.isOpen(); }
   FORCE_INLINE bool eof() { return sdpos>=filesize ;};
@@ -63,29 +50,20 @@ public:
 public:
   bool saving;
   bool logging;
-  bool sdprinting;
-  bool cardOK;
-  char filename[FILENAME_LENGTH];
+  bool sdprinting ;  
+  bool cardOK ;
+  char filename[13];
   char longFilename[LONG_FILENAME_LENGTH];
   bool filenameIsDir;
   int lastnr; //last number of the autostart;
 private:
   SdFile root,*curDir,workDir,workDirParents[MAX_DIR_DEPTH];
   uint16_t workDirDepth;
-#ifdef SDCARD_SORT_ALPHA
-  uint16_t sort_count;
-  uint8_t *sort_order;
-  #if SORT_USES_MORE_RAM
-    char **sortshort;
-    char **sortnames;
-    uint8_t *isDir;
-  #endif
-#endif
   Sd2Card card;
   SdVolume volume;
   SdFile file;
   #define SD_PROCEDURE_DEPTH 1
-  #define MAXPATHNAMELENGTH (FILENAME_LENGTH*MAX_DIR_DEPTH+MAX_DIR_DEPTH+1)
+  #define MAXPATHNAMELENGTH (13*MAX_DIR_DEPTH+MAX_DIR_DEPTH+1)
   uint8_t file_subcall_ctr;
   uint32_t filespos[SD_PROCEDURE_DEPTH];
   char filenames[SD_PROCEDURE_DEPTH][MAXPATHNAMELENGTH];
@@ -97,9 +75,9 @@ private:
   bool autostart_stilltocheck; //the sd start is delayed, because otherwise the serial cannot answer fast enought to make contact with the hostsoftware.
   
   LsAction lsAction; //stored for recursion.
-  uint16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
+  int16_t nrFiles; //counter for the files in the current directory and recycled as position counter for getting the nrFiles'th name in the directory.
   char* diveDirName;
-  void lsDive(const char *prepend,SdFile parent);
+  void lsDive(const char *prepend, SdFile parent, const char * const match=NULL);
 };
 extern CardReader card;
 #define IS_SD_PRINTING (card.sdprinting)
diff --git a/Marlin/digipot_mcp4451.cpp b/Marlin/digipot_mcp4451.cpp
index 7c15055..0ced287 100644
--- a/Marlin/digipot_mcp4451.cpp
+++ b/Marlin/digipot_mcp4451.cpp
@@ -6,7 +6,7 @@
 #include "Wire.h"
 
 // Settings for the I2C based DIGIPOT (MCP4451) on Azteeg X3 Pro
-#if MOTHERBOARD == 88
+#if MB(5DPRINT)
 #define DIGIPOT_I2C_FACTOR 117.96
 #define DIGIPOT_I2C_MAX_CURRENT 1.736
 #else
diff --git a/Marlin/dogm_lcd_implementation.h b/Marlin/dogm_lcd_implementation.h
index 0bfc8c1..4fed3ba 100644
--- a/Marlin/dogm_lcd_implementation.h
+++ b/Marlin/dogm_lcd_implementation.h
@@ -39,10 +39,9 @@
 #include "ultralcd.h"
 #include "ultralcd_st7920_u8glib_rrd.h"
 
-
 /* Russian language not supported yet, needs custom font
 
-#if LANGUAGE_CHOICE == 6
+#if LANGUAGE_CHOICE == ru
 #include "LiquidCrystalRus.h"
 #define LCD_CLASS LiquidCrystalRus
 #else
@@ -57,20 +56,18 @@
 #define DOG_CHAR_WIDTH_LARGE	9
 #define DOG_CHAR_HEIGHT_LARGE	18
 
-
 #define START_ROW				0
 
-
 /* Custom characters defined in font font_6x10_marlin.c */
-#define LCD_STR_BEDTEMP     "\xFE"
 #define LCD_STR_DEGREE      "\xB0"
-#define LCD_STR_THERMOMETER "\xFF"
-#define LCD_STR_UPLEVEL     "\xFB"
 #define LCD_STR_REFRESH     "\xF8"
 #define LCD_STR_FOLDER      "\xF9"
-#define LCD_STR_FEEDRATE    "\xFD"
-#define LCD_STR_CLOCK       "\xFC"
 #define LCD_STR_ARROW_RIGHT "\xFA"
+#define LCD_STR_UPLEVEL     "\xFB"
+#define LCD_STR_CLOCK       "\xFC"
+#define LCD_STR_FEEDRATE    "\xFD"
+#define LCD_STR_BEDTEMP     "\xFE"
+#define LCD_STR_THERMOMETER "\xFF"
 
 #define FONT_STATUSMENU	u8g_font_6x9
 
@@ -167,6 +164,25 @@ static void lcd_printPGM(const char* str)
     }
 }
 
+static void _draw_heater_status(int x, int heater) {
+  bool isBed = heater < 0;
+  int y = 17 + (isBed ? 1 : 0);
+  u8g.setFont(FONT_STATUSMENU);
+  u8g.setPrintPos(x,6);
+  u8g.print(itostr3(int((heater >= 0 ? degTargetHotend(heater) : degTargetBed()) + 0.5)));
+  lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
+  u8g.setPrintPos(x,27);
+  u8g.print(itostr3(int(heater >= 0 ? degHotend(heater) : degBed()) + 0.5));
+  lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
+  if (!isHeatingHotend(0)) {
+    u8g.drawBox(x+7,y,2,2);
+  }
+  else {
+    u8g.setColorIndex(0); // white on black
+    u8g.drawBox(x+7,y,2,2);
+    u8g.setColorIndex(1); // black on white
+  }
+}
 
 static void lcd_implementation_status_screen()
 {
@@ -176,8 +192,7 @@ static void lcd_implementation_status_screen()
  u8g.setColorIndex(1);	// black on white
  
  // Symbols menu graphics, animated fan
- if ((blink % 2) &&  fanSpeed )	u8g.drawBitmapP(9,1,STATUS_SCREENBYTEWIDTH,STATUS_SCREENHEIGHT,status_screen0_bmp);
-	else u8g.drawBitmapP(9,1,STATUS_SCREENBYTEWIDTH,STATUS_SCREENHEIGHT,status_screen1_bmp);
+ u8g.drawBitmapP(9,1,STATUS_SCREENBYTEWIDTH,STATUS_SCREENHEIGHT, (blink % 2) && fanSpeed ? status_screen0_bmp : status_screen1_bmp);
  
  #ifdef SDSUPPORT
  //SD Card Symbol
@@ -213,73 +228,17 @@ static void lcd_implementation_status_screen()
 		 }
  #endif
  
- // Extruder 1
- u8g.setFont(FONT_STATUSMENU);
- u8g.setPrintPos(6,6);
- u8g.print(itostr3(int(degTargetHotend(0) + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- u8g.setPrintPos(6,27);
- u8g.print(itostr3(int(degHotend(0) + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- if (!isHeatingHotend(0)) u8g.drawBox(13,17,2,2);
-	else
-		{
-		 u8g.setColorIndex(0);	// white on black
-		 u8g.drawBox(13,17,2,2);
-		 u8g.setColorIndex(1);	// black on white
-		}
- 
- // Extruder 2
- u8g.setFont(FONT_STATUSMENU);
- #if EXTRUDERS > 1
- u8g.setPrintPos(31,6);
- u8g.print(itostr3(int(degTargetHotend(1) + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- u8g.setPrintPos(31,27);
- u8g.print(itostr3(int(degHotend(1) + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- if (!isHeatingHotend(1)) u8g.drawBox(38,17,2,2);
-	else
-		{
-		 u8g.setColorIndex(0);	// white on black
-		 u8g.drawBox(38,17,2,2);
-		 u8g.setColorIndex(1);	// black on white
-		}
- #endif
- 
- // Extruder 3
- u8g.setFont(FONT_STATUSMENU);
- # if EXTRUDERS > 2
- u8g.setPrintPos(55,6);
- u8g.print(itostr3(int(degTargetHotend(2) + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- u8g.setPrintPos(55,27);
- u8g.print(itostr3(int(degHotend(2) + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- if (!isHeatingHotend(2)) u8g.drawBox(62,17,2,2);
-	else
-		{
-		 u8g.setColorIndex(0);	// white on black
-		 u8g.drawBox(62,17,2,2);
-		 u8g.setColorIndex(1);	// black on white
-		}
- #endif
- 
- // Heatbed
- u8g.setFont(FONT_STATUSMENU);
- u8g.setPrintPos(81,6);
- u8g.print(itostr3(int(degTargetBed() + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- u8g.setPrintPos(81,27);
- u8g.print(itostr3(int(degBed() + 0.5)));
- lcd_printPGM(PSTR(LCD_STR_DEGREE " "));
- if (!isHeatingBed()) u8g.drawBox(88,18,2,2);
-	else
-		{
-		 u8g.setColorIndex(0);	// white on black
-		 u8g.drawBox(88,18,2,2);
-		 u8g.setColorIndex(1);	// black on white
-		}
+  // Extruders
+  _draw_heater_status(6, 0);
+  #if EXTRUDERS > 1
+    _draw_heater_status(31, 1);
+    #if EXTRUDERS > 2
+      _draw_heater_status(55, 2);
+    #endif
+  #endif
+
+  // Heatbed
+  _draw_heater_status(81, -1);
  
  // Fan
  u8g.setFont(FONT_STATUSMENU);
@@ -360,7 +319,7 @@ static void lcd_implementation_drawmenu_generic(uint8_t row, const char* pstr, c
 		   } else u8g.setColorIndex(1); // unmarked text is black on white
 		
 		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		if (pre_char != '>') u8g.print(pre_char); else u8g.print(' ');	// Row selector is obsolete
+		u8g.print(pre_char == '>' ? ' ' : pre_char);	// Row selector is obsolete
 
 
     while( (c = pgm_read_byte(pstr)) != '\0' )
@@ -378,57 +337,29 @@ static void lcd_implementation_drawmenu_generic(uint8_t row, const char* pstr, c
 		u8g.setColorIndex(1);		// restore settings to black on white
 }
 
-static void lcd_implementation_drawmenu_setting_edit_generic(uint8_t row, const char* pstr, char pre_char, char* data)
-{
-    static unsigned int fkt_cnt = 0;
-	char c;
-    uint8_t n = LCD_WIDTH - 1 - 2 - strlen(data);
-		
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		u8g.print(pre_char);
-	
-    while( (c = pgm_read_byte(pstr)) != '\0' )
-    {
-			u8g.print(c);
+static void _drawmenu_setting_edit_generic(uint8_t row, const char* pstr, char pre_char, char* data, bool pgm) {
+  char c;
+  uint8_t n = LCD_WIDTH - 1 - 2 - (pgm ? strlen_P(data) : strlen(data));
 		
-        pstr++;
-        n--;
-    }
-	
-		u8g.print(':');
-
-    while(n--){
-					u8g.print(' ');
-			  }
+  u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
+  u8g.print(pre_char);
 
-		u8g.print(data);
-}
-
-static void lcd_implementation_drawmenu_setting_edit_generic_P(uint8_t row, const char* pstr, char pre_char, const char* data)
-{
-    char c;
-    uint8_t n= LCD_WIDTH - 1 - 2 - strlen_P(data);
+  while( (c = pgm_read_byte(pstr)) != '\0' ) {
+    u8g.print(c);
+    pstr++;
+    n--;
+  }
 
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		u8g.print(pre_char);
-	
-    while( (c = pgm_read_byte(pstr)) != '\0' )
-    {
-			u8g.print(c);
-		
-        pstr++;
-        n--;
-    }
+  u8g.print(':');
 
-		u8g.print(':');
-	
-    while(n--){
-					u8g.print(' ');
-			  }
+  while(n--) u8g.print(' ');
 
-		lcd_printPGM(data);
+  if (pgm) { lcd_printPGM(data); } else { u8g.print(data); }
 }
 
+#define lcd_implementation_drawmenu_setting_edit_generic(row, pstr, pre_char, data) _drawmenu_setting_edit_generic(row, pstr, pre_char, data, false)
+#define lcd_implementation_drawmenu_setting_edit_generic_P(row, pstr, pre_char, data) _drawmenu_setting_edit_generic(row, pstr, pre_char, data, true)
+
 #define lcd_implementation_drawmenu_setting_edit_int3_selected(row, pstr, pstr2, data, minValue, maxValue) lcd_implementation_drawmenu_setting_edit_generic(row, pstr, '>', itostr3(*(data)))
 #define lcd_implementation_drawmenu_setting_edit_int3(row, pstr, pstr2, data, minValue, maxValue) lcd_implementation_drawmenu_setting_edit_generic(row, pstr, ' ', itostr3(*(data)))
 #define lcd_implementation_drawmenu_setting_edit_float3_selected(row, pstr, pstr2, data, minValue, maxValue) lcd_implementation_drawmenu_setting_edit_generic(row, pstr, '>', ftostr3(*(data)))
@@ -474,118 +405,40 @@ void lcd_implementation_drawedit(const char* pstr, char* value)
 		u8g.print(value);
 }
 
-static void lcd_implementation_drawmenu_sdfile_selected(uint8_t row, const char* pstr, const char* filename, char* longFilename)
-{
-    char c;
-    uint8_t n = LCD_WIDTH - 1;
+static void _drawmenu_sd(uint8_t row, const char* pstr, const char* filename, char * const longFilename, bool isDir, bool isSelected) {
+  char c;
+  uint8_t n = LCD_WIDTH - 1;
 
-    if (longFilename[0] != '\0')
-    {
-        filename = longFilename;
-        longFilename[LCD_WIDTH-1] = '\0';
-    }
+  if (longFilename[0] != '\0') {
+    filename = longFilename;
+    longFilename[n] = '\0';
+  }
 
-		u8g.setColorIndex(1);		// black on white
-		u8g.drawBox (0, row*DOG_CHAR_HEIGHT + 3, 128, DOG_CHAR_HEIGHT);
-		u8g.setColorIndex(0);		// following text must be white on black
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		u8g.print(' ');	// Indent by 1 char
-	   
-    while((c = *filename) != '\0')
-    {
-		u8g.print(c);
-        filename++;
-        n--;
-    }
-    while(n--){
-					u8g.print(' ');
-			   }
-	u8g.setColorIndex(1);		// black on white
-}
-
-static void lcd_implementation_drawmenu_sdfile(uint8_t row, const char* pstr, const char* filename, char* longFilename)
-{
-    char c;
-    uint8_t n = LCD_WIDTH - 1;
+  if (isSelected) {
+    u8g.setColorIndex(1); // black on white
+    u8g.drawBox (0, row*DOG_CHAR_HEIGHT + 3, 128, DOG_CHAR_HEIGHT);
+    u8g.setColorIndex(0); // following text must be white on black
+  }
 
-    if (longFilename[0] != '\0')
-    {
-        filename = longFilename;
-        longFilename[LCD_WIDTH-1] = '\0';
-    }
+  u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
+  u8g.print(' ');	// Indent by 1 char
 
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		u8g.print(' ');
-		
-while((c = *filename) != '\0')
-    {
-			u8g.print(c);
-		
-        filename++;
-        n--;
-    }
-    while(n--){
-					u8g.print(' ');
-			   }
+  if (isDir) u8g.print(LCD_STR_FOLDER[0]);
 
-}
+  while((c = *filename) != '\0') {
+    u8g.print(c);
+    filename++;
+    n--;
+  }
+  while(n--) u8g.print(' ');
 
-static void lcd_implementation_drawmenu_sddirectory_selected(uint8_t row, const char* pstr, const char* filename, char* longFilename)
-{
-    char c;
-    uint8_t n = LCD_WIDTH - 2;
-		
-    if (longFilename[0] != '\0')
-    {
-        filename = longFilename;
-        longFilename[LCD_WIDTH-2] = '\0';
-    }
-		u8g.setColorIndex(1);		// black on white
-		u8g.drawBox (0, row*DOG_CHAR_HEIGHT + 3, 128, DOG_CHAR_HEIGHT);
-		u8g.setColorIndex(0);		// following text must be white on black
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		u8g.print(' ');	// Indent by 1 char
-		u8g.print(LCD_STR_FOLDER[0]);		
-	   
-    while((c = *filename) != '\0')
-    {
-			u8g.print(c);
-		
-        filename++;
-        n--;
-    }
-    while(n--){
-					u8g.print(' ');
-			   }
-	u8g.setColorIndex(1);		// black on white
+  if (isSelected) u8g.setColorIndex(1); // black on white
 }
 
-static void lcd_implementation_drawmenu_sddirectory(uint8_t row, const char* pstr, const char* filename, char* longFilename)
-{
-    char c;
-    uint8_t n = LCD_WIDTH - 2;
-
-    if (longFilename[0] != '\0')
-    {
-        filename = longFilename;
-        longFilename[LCD_WIDTH-2] = '\0';
-    }
-
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		u8g.print(' ');
-		u8g.print(LCD_STR_FOLDER[0]);
-
-    while((c = *filename) != '\0')
-    {
-			u8g.print(c);
-		
-        filename++;
-        n--;
-    }
-    while(n--){
-					u8g.print(' ');
-			   }
-}
+#define lcd_implementation_drawmenu_sdfile_selected(row, pstr, filename, longFilename) _drawmenu_sd(row, pstr, filename, longFilename, false, true)
+#define lcd_implementation_drawmenu_sdfile(row, pstr, filename, longFilename) _drawmenu_sd(row, pstr, filename, longFilename, false, false)
+#define lcd_implementation_drawmenu_sddirectory_selected(row, pstr, filename, longFilename) _drawmenu_sd(row, pstr, filename, longFilename, true, true)
+#define lcd_implementation_drawmenu_sddirectory(row, pstr, filename, longFilename) _drawmenu_sd(row, pstr, filename, longFilename, true, false)
 
 #define lcd_implementation_drawmenu_back_selected(row, pstr, data) lcd_implementation_drawmenu_generic(row, pstr, LCD_STR_UPLEVEL[0], LCD_STR_UPLEVEL[0])
 #define lcd_implementation_drawmenu_back(row, pstr, data) lcd_implementation_drawmenu_generic(row, pstr, ' ', LCD_STR_UPLEVEL[0])
diff --git a/Marlin/example_configurations/SCARA/Configuration.h b/Marlin/example_configurations/SCARA/Configuration.h
index 6b74b0c..f6cb2d2 100644
--- a/Marlin/example_configurations/SCARA/Configuration.h
+++ b/Marlin/example_configurations/SCARA/Configuration.h
@@ -1,6 +1,8 @@
 #ifndef CONFIGURATION_H
 #define CONFIGURATION_H
 
+#include "boards.h"
+
 // This configuration file contains the basic settings.
 // Advanced settings can be found in Configuration_adv.h
 // BASIC SETTINGS: select your board type, temperature sensor type, axis scaling, and endstop configuration
@@ -55,52 +57,10 @@
 // This enables the serial port associated to the Bluetooth interface
 //#define BTENABLED              // Enable BT interface on AT90USB devices
 
-
-//// The following define selects which electronics board you have. Please choose the one that matches your setup
-// 10 = Gen7 custom (Alfons3 Version) "https://github.com/Alfons3/Generation_7_Electronics"
-// 11 = Gen7 v1.1, v1.2 = 11
-// 12 = Gen7 v1.3
-// 13 = Gen7 v1.4
-// 131 = OpenHardware.co.za custom Gen7 electronics
-// 2  = Cheaptronic v1.0
-// 20 = Sethi 3D_1
-// 3  = MEGA/RAMPS up to 1.2 = 3
-// 33 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Bed)
-// 34 = RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Bed)
-// 35 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Fan)
-// 4  = Duemilanove w/ ATMega328P pin assignment
-// 5  = Gen6
-// 51 = Gen6 deluxe
-// 6  = Sanguinololu < 1.2
-// 62 = Sanguinololu 1.2 and above
-// 63 = Melzi
-// 64 = STB V1.1
-// 65 = Azteeg X1
-// 66 = Melzi with ATmega1284 (MaKr3d version)
-// 67 = Azteeg X3
-// 68 = Azteeg X3 Pro
-// 7  = Ultimaker
-// 71 = Ultimaker (Older electronics. Pre 1.5.4. This is rare)
-// 72 = Ultimainboard 2.x (Uses TEMP_SENSOR 20)
-// 77 = 3Drag Controller
-// 8  = Teensylu
-// 80 = Rumba
-// 81 = Printrboard (AT90USB1286)
-// 82 = Brainwave (AT90USB646)
-// 83 = SAV Mk-I (AT90USB1286)
-// 84 = Teensy++2.0 (AT90USB1286) // CLI compile: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
-// 9  = Gen3+
-// 70 = Megatronics
-// 701= Megatronics v2.0
-// 702= Minitronics v1.0
-// 90 = Alpha OMCA board
-// 91 = Final OMCA board
-// 301= Rambo
-// 21 = Elefu Ra Board (v3)
-// 88 = 5DPrint D8 Driver Board
-
+// The following define selects which electronics board you have.
+// Please choose the name from boards.h that matches your setup
 #ifndef MOTHERBOARD
-#define MOTHERBOARD 33
+  #define MOTHERBOARD BOARD_RAMPS_13_EFB
 #endif
 
 // Define this to set a custom name for your generic Mendel,
diff --git a/Marlin/example_configurations/SCARA/Configuration_adv.h b/Marlin/example_configurations/SCARA/Configuration_adv.h
index 10fbe9b..afdff03 100644
--- a/Marlin/example_configurations/SCARA/Configuration_adv.h
+++ b/Marlin/example_configurations/SCARA/Configuration_adv.h
@@ -295,7 +295,6 @@
 #define SD_FINISHED_STEPPERRELEASE true  //if sd support and the file is finished: disable steppers?
 #define SD_FINISHED_RELEASECOMMAND "M84 X Y Z E" // You might want to keep the z enabled so your bed stays in place.
 
-//#define SDCARD_SORT_ALPHA // Sort SD file listings in ASCII order. Find additional options in cardreader.h
 #define SDCARD_RATHERRECENTFIRST  //reverse file order of sd card menu display. Its sorted practically after the file system block order.
 // if a file is deleted, it frees a block. hence, the order is not purely chronological. To still have auto0.g accessible, there is again the option to do that.
 // using:
@@ -353,8 +352,8 @@
 
   #define D_FILAMENT 1.75
   #define STEPS_MM_E 1000
-  #define EXTRUTION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
-  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUTION_AREA)
+  #define EXTRUSION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
+  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUSION_AREA)
 
 #endif // ADVANCE
 
diff --git a/Marlin/example_configurations/delta/Configuration.h b/Marlin/example_configurations/delta/Configuration.h
index 042b221..c618dd3 100644
--- a/Marlin/example_configurations/delta/Configuration.h
+++ b/Marlin/example_configurations/delta/Configuration.h
@@ -1,6 +1,8 @@
 #ifndef CONFIGURATION_H
 #define CONFIGURATION_H
 
+#include "boards.h"
+
 // This configuration file contains the basic settings.
 // Advanced settings can be found in Configuration_adv.h
 // BASIC SETTINGS: select your board type, temperature sensor type, axis scaling, and endstop configuration
@@ -29,53 +31,10 @@
 // This enables the serial port associated to the Bluetooth interface
 //#define BTENABLED              // Enable BT interface on AT90USB devices
 
-
-//// The following define selects which electronics board you have. Please choose the one that matches your setup
-// 10 = Gen7 custom (Alfons3 Version) "https://github.com/Alfons3/Generation_7_Electronics"
-// 11 = Gen7 v1.1, v1.2 = 11
-// 12 = Gen7 v1.3
-// 13 = Gen7 v1.4
-// 2  = Cheaptronic v1.0
-// 20 = Sethi 3D_1
-// 3  = MEGA/RAMPS up to 1.2 = 3
-// 33 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Bed)
-// 34 = RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Bed)
-// 35 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Fan)
-// 36 = RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Fan)
-// 4  = Duemilanove w/ ATMega328P pin assignment
-// 5  = Gen6
-// 51 = Gen6 deluxe
-// 6  = Sanguinololu < 1.2
-// 62 = Sanguinololu 1.2 and above
-// 63 = Melzi
-// 64 = STB V1.1
-// 65 = Azteeg X1
-// 66 = Melzi with ATmega1284 (MaKr3d version)
-// 67 = Azteeg X3
-// 68 = Azteeg X3 Pro
-// 7  = Ultimaker
-// 71 = Ultimaker (Older electronics. Pre 1.5.4. This is rare)
-// 72 = Ultimainboard 2.x (Uses TEMP_SENSOR 20)
-// 77 = 3Drag Controller
-// 8  = Teensylu
-// 80 = Rumba
-// 81 = Printrboard (AT90USB1286)
-// 82 = Brainwave (AT90USB646)
-// 83 = SAV Mk-I (AT90USB1286)
-// 84 = Teensy++2.0 (AT90USB1286) // CLI compile: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
-// 9  = Gen3+
-// 70 = Megatronics
-// 701= Megatronics v2.0
-// 702= Minitronics v1.0
-// 90 = Alpha OMCA board
-// 91 = Final OMCA board
-// 301= Rambo
-// 21 = Elefu Ra Board (v3)
-// 88 = 5DPrint D8 Driver Board
-// 999 = Leapfrog
-
+// The following define selects which electronics board you have.
+// Please choose the name from boards.h that matches your setup
 #ifndef MOTHERBOARD
-#define MOTHERBOARD 33
+  #define MOTHERBOARD BOARD_RAMPS_13_EFB
 #endif
 
 // Define this to set a custom name for your generic Mendel,
diff --git a/Marlin/example_configurations/delta/Configuration_adv.h b/Marlin/example_configurations/delta/Configuration_adv.h
index 6c9d568..3df4fd7 100644
--- a/Marlin/example_configurations/delta/Configuration_adv.h
+++ b/Marlin/example_configurations/delta/Configuration_adv.h
@@ -287,7 +287,6 @@
 #define SD_FINISHED_STEPPERRELEASE true  //if sd support and the file is finished: disable steppers?
 #define SD_FINISHED_RELEASECOMMAND "M84 X Y Z E" // You might want to keep the z enabled so your bed stays in place.
 
-//#define SDCARD_SORT_ALPHA // Sort SD file listings in ASCII order. Find additional options in cardreader.h
 #define SDCARD_RATHERRECENTFIRST  //reverse file order of sd card menu display. Its sorted practically after the filesystem block order. 
 // if a file is deleted, it frees a block. hence, the order is not purely cronological. To still have auto0.g accessible, there is again the option to do that.
 // using:
@@ -340,8 +339,8 @@
 
   #define D_FILAMENT 2.85
   #define STEPS_MM_E 836
-  #define EXTRUTION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
-  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUTION_AREA)
+  #define EXTRUSION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
+  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUSION_AREA)
 
 #endif // ADVANCE
 
diff --git a/Marlin/example_configurations/makibox/Configuration.h b/Marlin/example_configurations/makibox/Configuration.h
index 6ebd08f..07c4c58 100644
--- a/Marlin/example_configurations/makibox/Configuration.h
+++ b/Marlin/example_configurations/makibox/Configuration.h
@@ -1,6 +1,8 @@
 #ifndef CONFIGURATION_H
 #define CONFIGURATION_H
 
+#include "boards.h"
+
 // This configuration file contains the basic settings.
 // Advanced settings can be found in Configuration_adv.h
 // BASIC SETTINGS: select your board type, temperature sensor type, axis scaling, and endstop configuration
@@ -30,50 +32,10 @@
 // This enables the serial port associated to the Bluetooth interface
 //#define BTENABLED              // Enable BT interface on AT90USB devices
 
-
-//// The following define selects which electronics board you have. Please choose the one that matches your setup
-// 10 = Gen7 custom (Alfons3 Version) "https://github.com/Alfons3/Generation_7_Electronics"
-// 11 = Gen7 v1.1, v1.2 = 11
-// 12 = Gen7 v1.3
-// 13 = Gen7 v1.4
-// 2  = Cheaptronic v1.0
-// 20 = Sethi 3D_1
-// 3  = MEGA/RAMPS up to 1.2 = 3
-// 33 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Bed)
-// 34 = RAMPS 1.3 / 1.4 (Power outputs: Extruder0, Extruder1, Bed)
-// 35 = RAMPS 1.3 / 1.4 (Power outputs: Extruder, Fan, Fan)
-// 4  = Duemilanove w/ ATMega328P pin assignment
-// 5  = Gen6
-// 51 = Gen6 deluxe
-// 6  = Sanguinololu < 1.2
-// 62 = Sanguinololu 1.2 and above
-// 63 = Melzi
-// 64 = STB V1.1
-// 65 = Azteeg X1
-// 66 = Melzi with ATmega1284 (MaKr3d version)
-// 67 = Azteeg X3
-// 68 = Azteeg X3 Pro
-// 7  = Ultimaker
-// 71 = Ultimaker (Older electronics. Pre 1.5.4. This is rare)
-// 72 = Ultimainboard 2.x (Uses TEMP_SENSOR 20)
-// 77 = 3Drag Controller
-// 8  = Teensylu
-// 80 = Rumba
-// 81 = Printrboard (AT90USB1286)
-// 82 = Brainwave (AT90USB646)
-// 83 = SAV Mk-I (AT90USB1286)
-// 9  = Gen3+
-// 70 = Megatronics
-// 701= Megatronics v2.0
-// 702= Minitronics v1.0
-// 90 = Alpha OMCA board
-// 91 = Final OMCA board
-// 301= Rambo
-// 21 = Elefu Ra Board (v3)
-// 88 = 5DPrint D8 Driver Board
-
+// The following define selects which electronics board you have.
+// Please choose the name from boards.h that matches your setup
 #ifndef MOTHERBOARD
-#define MOTHERBOARD 88
+  #define MOTHERBOARD BOARD_5DPRINT
 #endif
 
 // Define this to set a custom name for your generic Mendel,
diff --git a/Marlin/example_configurations/makibox/Configuration_adv.h b/Marlin/example_configurations/makibox/Configuration_adv.h
index 312b2b9..19f8707 100644
--- a/Marlin/example_configurations/makibox/Configuration_adv.h
+++ b/Marlin/example_configurations/makibox/Configuration_adv.h
@@ -291,7 +291,6 @@
 #define SD_FINISHED_STEPPERRELEASE true  //if sd support and the file is finished: disable steppers?
 #define SD_FINISHED_RELEASECOMMAND "M84 X Y Z E" // You might want to keep the z enabled so your bed stays in place.
 
-//#define SDCARD_SORT_ALPHA // Sort SD file listings in ASCII order. Find additional options in cardreader.h
 #define SDCARD_RATHERRECENTFIRST  //reverse file order of sd card menu display. Its sorted practically after the file system block order.
 // if a file is deleted, it frees a block. hence, the order is not purely chronological. To still have auto0.g accessible, there is again the option to do that.
 // using:
@@ -344,8 +343,8 @@
 
   #define D_FILAMENT 2.85
   #define STEPS_MM_E 836
-  #define EXTRUTION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
-  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUTION_AREA)
+  #define EXTRUSION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
+  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUSION_AREA)
 
 #endif // ADVANCE
 
diff --git a/Marlin/example_configurations/tvrrug/Round2/Configuration.h b/Marlin/example_configurations/tvrrug/Round2/Configuration.h
new file mode 100644
index 0000000..34be1d2
--- /dev/null
+++ b/Marlin/example_configurations/tvrrug/Round2/Configuration.h
@@ -0,0 +1,779 @@
+#ifndef CONFIGURATION_H
+#define CONFIGURATION_H
+
+#include "boards.h"
+
+// This configuration file contains the basic settings.
+// Advanced settings can be found in Configuration_adv.h
+// BASIC SETTINGS: select your board type, temperature sensor type, axis scaling, and endstop configuration
+
+//===========================================================================
+//============================= DELTA Printer ===============================
+//===========================================================================
+// For a Delta printer replace the configuration files with the files in the
+// example_configurations/delta directory.
+//
+
+//===========================================================================
+//============================= SCARA Printer ===============================
+//===========================================================================
+// For a Delta printer replace the configuration files with the files in the
+// example_configurations/SCARA directory.
+//
+
+// User-specified version info of this build to display in [Pronterface, etc] terminal window during
+// startup. Implementation of an idea by Prof Braino to inform user that any changes made to this
+// build by the user have been successfully uploaded into firmware.
+#define STRING_VERSION_CONFIG_H __DATE__ " " __TIME__ // build date and time
+#define STRING_CONFIG_H_AUTHOR "(none, default config)" // Who made the changes.
+
+// SERIAL_PORT selects which serial port should be used for communication with the host.
+// This allows the connection of wireless adapters (for instance) to non-default port pins.
+// Serial port 0 is still used by the Arduino bootloader regardless of this setting.
+#define SERIAL_PORT 0
+
+// This determines the communication speed of the printer
+#define BAUDRATE 250000
+
+// This enables the serial port associated to the Bluetooth interface
+//#define BTENABLED              // Enable BT interface on AT90USB devices
+
+// The following define selects which electronics board you have.
+// Please choose the name from boards.h that matches your setup
+#ifndef MOTHERBOARD
+  #define MOTHERBOARD BOARD_OMCA
+#endif
+
+// Define this to set a custom name for your generic Mendel,
+// #define CUSTOM_MENDEL_NAME "This Mendel"
+
+// Define this to set a unique identifier for this printer, (Used by some programs to differentiate between machines)
+// You can use an online service to generate a random UUID. (eg http://www.uuidgenerator.net/version4)
+// #define MACHINE_UUID "00000000-0000-0000-0000-000000000000"
+
+// This defines the number of extruders
+#define EXTRUDERS 1
+
+//// The following define selects which power supply you have. Please choose the one that matches your setup
+// 1 = ATX
+// 2 = X-Box 360 203Watts (the blue wire connected to PS_ON and the red wire to VCC)
+
+#define POWER_SUPPLY 1
+
+// Define this to have the electronics keep the power supply off on startup. If you don't know what this is leave it.
+// #define PS_DEFAULT_OFF
+
+//===========================================================================
+//=============================Thermal Settings  ============================
+//===========================================================================
+//
+//--NORMAL IS 4.7kohm PULLUP!-- 1kohm pullup can be used on hotend sensor, using correct resistor and table
+//
+//// Temperature sensor settings:
+// -2 is thermocouple with MAX6675 (only for sensor 0)
+// -1 is thermocouple with AD595
+// 0 is not used
+// 1 is 100k thermistor - best choice for EPCOS 100k (4.7k pullup)
+// 2 is 200k thermistor - ATC Semitec 204GT-2 (4.7k pullup)
+// 3 is Mendel-parts thermistor (4.7k pullup)
+// 4 is 10k thermistor !! do not use it for a hotend. It gives bad resolution at high temp. !!
+// 5 is 100K thermistor - ATC Semitec 104GT-2 (Used in ParCan & J-Head) (4.7k pullup)
+// 6 is 100k EPCOS - Not as accurate as table 1 (created using a fluke thermocouple) (4.7k pullup)
+// 7 is 100k Honeywell thermistor 135-104LAG-J01 (4.7k pullup)
+// 71 is 100k Honeywell thermistor 135-104LAF-J01 (4.7k pullup)
+// 8 is 100k 0603 SMD Vishay NTCS0603E3104FXT (4.7k pullup)
+// 9 is 100k GE Sensing AL03006-58.2K-97-G1 (4.7k pullup)
+// 10 is 100k RS thermistor 198-961 (4.7k pullup)
+// 11 is 100k beta 3950 1% thermistor (4.7k pullup)
+// 12 is 100k 0603 SMD Vishay NTCS0603E3104FXT (4.7k pullup) (calibrated for Makibox hot bed)
+// 13 is 100k Hisens 3950  1% up to 300°C for hotend "Simple ONE " & "Hotend "All In ONE" 
+// 20 is the PT100 circuit found in the Ultimainboard V2.x
+// 60 is 100k Maker's Tool Works Kapton Bed Thermistor beta=3950
+//
+//    1k ohm pullup tables - This is not normal, you would have to have changed out your 4.7k for 1k
+//                          (but gives greater accuracy and more stable PID)
+// 51 is 100k thermistor - EPCOS (1k pullup)
+// 52 is 200k thermistor - ATC Semitec 204GT-2 (1k pullup)
+// 55 is 100k thermistor - ATC Semitec 104GT-2 (Used in ParCan & J-Head) (1k pullup)
+//
+// 1047 is Pt1000 with 4k7 pullup
+// 1010 is Pt1000 with 1k pullup (non standard)
+// 147 is Pt100 with 4k7 pullup
+// 110 is Pt100 with 1k pullup (non standard)
+
+#define TEMP_SENSOR_0 5
+#define TEMP_SENSOR_1 0
+#define TEMP_SENSOR_2 0
+#define TEMP_SENSOR_BED 5
+
+// This makes temp sensor 1 a redundant sensor for sensor 0. If the temperatures difference between these sensors is to high the print will be aborted.
+//#define TEMP_SENSOR_1_AS_REDUNDANT
+#define MAX_REDUNDANT_TEMP_SENSOR_DIFF 10
+
+// Actual temperature must be close to target for this long before M109 returns success
+#define TEMP_RESIDENCY_TIME 10  // (seconds)
+#define TEMP_HYSTERESIS 3       // (degC) range of +/- temperatures considered "close" to the target one
+#define TEMP_WINDOW     1       // (degC) Window around target to start the residency timer x degC early.
+
+// The minimal temperature defines the temperature below which the heater will not be enabled It is used
+// to check that the wiring to the thermistor is not broken.
+// Otherwise this would lead to the heater being powered on all the time.
+#define HEATER_0_MINTEMP 5
+#define HEATER_1_MINTEMP 5
+#define HEATER_2_MINTEMP 5
+#define BED_MINTEMP 5
+
+// When temperature exceeds max temp, your heater will be switched off.
+// This feature exists to protect your hotend from overheating accidentally, but *NOT* from thermistor short/failure!
+// You should use MINTEMP for thermistor short/failure protection.
+#define HEATER_0_MAXTEMP 275
+#define HEATER_1_MAXTEMP 275
+#define HEATER_2_MAXTEMP 275
+#define BED_MAXTEMP 150
+
+#define CONFIG_STEPPERS_TOSHIBA	1
+
+// If your bed has low resistance e.g. .6 ohm and throws the fuse you can duty cycle it to reduce the
+// average current. The value should be an integer and the heat bed will be turned on for 1 interval of
+// HEATER_BED_DUTY_CYCLE_DIVIDER intervals.
+//#define HEATER_BED_DUTY_CYCLE_DIVIDER 4
+
+// If you want the M105 heater power reported in watts, define the BED_WATTS, and (shared for all extruders) EXTRUDER_WATTS
+//#define EXTRUDER_WATTS (12.0*12.0/6.7) //  P=I^2/R
+//#define BED_WATTS (12.0*12.0/1.1)      // P=I^2/R
+
+// PID settings:
+// Comment the following line to disable PID and enable bang-bang.
+#define PIDTEMP
+#define BANG_MAX 255 // limits current to nozzle while in bang-bang mode; 255=full current
+#define PID_MAX 255 // limits current to nozzle while PID is active (see PID_FUNCTIONAL_RANGE below); 255=full current
+#ifdef PIDTEMP
+  //#define PID_DEBUG // Sends debug data to the serial port.
+  //#define PID_OPENLOOP 1 // Puts PID in open loop. M104/M140 sets the output power from 0 to PID_MAX
+  #define PID_FUNCTIONAL_RANGE 10 // If the temperature difference between the target temperature and the actual temperature
+                                  // is more then PID_FUNCTIONAL_RANGE then the PID will be shut off and the heater will be set to min/max.
+  #define PID_INTEGRAL_DRIVE_MAX 255  //limit for the integral term
+  #define K1 0.95 //smoothing factor within the PID
+  #define PID_dT ((OVERSAMPLENR * 10.0)/(F_CPU / 64.0 / 256.0)) //sampling period of the temperature routine
+
+// If you are using a pre-configured hotend then you can use one of the value sets by uncommenting it
+// J-Head Mk V-B
+    #define  DEFAULT_Kp 25.05
+    #define  DEFAULT_Ki 2.30
+    #define  DEFAULT_Kd 68.15
+
+// Ultimaker
+//    #define  DEFAULT_Kp 22.2
+//    #define  DEFAULT_Ki 1.08  
+//    #define  DEFAULT_Kd 114  
+
+// MakerGear
+//    #define  DEFAULT_Kp 7.0
+//    #define  DEFAULT_Ki 0.1
+//    #define  DEFAULT_Kd 12
+
+// Mendel Parts V9 on 12V
+//    #define  DEFAULT_Kp 63.0
+//    #define  DEFAULT_Ki 2.25
+//    #define  DEFAULT_Kd 440
+#endif // PIDTEMP
+
+// Bed Temperature Control
+// Select PID or bang-bang with PIDTEMPBED. If bang-bang, BED_LIMIT_SWITCHING will enable hysteresis
+//
+// Uncomment this to enable PID on the bed. It uses the same frequency PWM as the extruder.
+// If your PID_dT above is the default, and correct for your hardware/configuration, that means 7.689Hz,
+// which is fine for driving a square wave into a resistive load and does not significantly impact you FET heating.
+// This also works fine on a Fotek SSR-10DA Solid State Relay into a 250W heater.
+// If your configuration is significantly different than this and you don't understand the issues involved, you probably
+// shouldn't use bed PID until someone else verifies your hardware works.
+// If this is enabled, find your own PID constants below.
+//#define PIDTEMPBED
+//
+//#define BED_LIMIT_SWITCHING
+
+// This sets the max power delivered to the bed, and replaces the HEATER_BED_DUTY_CYCLE_DIVIDER option.
+// all forms of bed control obey this (PID, bang-bang, bang-bang with hysteresis)
+// setting this to anything other than 255 enables a form of PWM to the bed just like HEATER_BED_DUTY_CYCLE_DIVIDER did,
+// so you shouldn't use it unless you are OK with PWM on your bed.  (see the comment on enabling PIDTEMPBED)
+#define MAX_BED_POWER 255 // limits duty cycle to bed; 255=full current
+
+#ifdef PIDTEMPBED
+//120v 250W silicone heater into 4mm borosilicate (MendelMax 1.5+)
+//from FOPDT model - kp=.39 Tp=405 Tdead=66, Tc set to 79.2, aggressive factor of .15 (vs .1, 1, 10)
+    #define  DEFAULT_bedKp 10.00
+    #define  DEFAULT_bedKi .023
+    #define  DEFAULT_bedKd 305.4
+
+//120v 250W silicone heater into 4mm borosilicate (MendelMax 1.5+)
+//from pidautotune
+//    #define  DEFAULT_bedKp 97.1
+//    #define  DEFAULT_bedKi 1.41
+//    #define  DEFAULT_bedKd 1675.16
+
+// FIND YOUR OWN: "M303 E-1 C8 S90" to run autotune on the bed at 90 degreesC for 8 cycles.
+#endif // PIDTEMPBED
+
+
+
+//this prevents dangerous Extruder moves, i.e. if the temperature is under the limit
+//can be software-disabled for whatever purposes by
+#define PREVENT_DANGEROUS_EXTRUDE
+//if PREVENT_DANGEROUS_EXTRUDE is on, you can still disable (uncomment) very long bits of extrusion separately.
+#define PREVENT_LENGTHY_EXTRUDE
+
+#define EXTRUDE_MINTEMP 170
+#define EXTRUDE_MAXLENGTH (X_MAX_LENGTH+Y_MAX_LENGTH) //prevent extrusion of very large distances.
+
+/*================== Thermal Runaway Protection ==============================
+This is a feature to protect your printer from burn up in flames if it has
+a thermistor coming off place (this happened to a friend of mine recently and
+motivated me writing this feature).
+
+The issue: If a thermistor come off, it will read a lower temperature than actual.
+The system will turn the heater on forever, burning up the filament and anything
+else around.
+
+After the temperature reaches the target for the first time, this feature will 
+start measuring for how long the current temperature stays below the target 
+minus _HYSTERESIS (set_temperature - THERMAL_RUNAWAY_PROTECTION_HYSTERESIS).
+
+If it stays longer than _PERIOD, it means the thermistor temperature
+cannot catch up with the target, so something *may be* wrong. Then, to be on the
+safe side, the system will he halt.
+
+Bear in mind the count down will just start AFTER the first time the 
+thermistor temperature is over the target, so you will have no problem if
+your extruder heater takes 2 minutes to hit the target on heating.
+
+*/
+// If you want to enable this feature for all your extruder heaters,
+// uncomment the 2 defines below:
+
+// Parameters for all extruder heaters
+//#define THERMAL_RUNAWAY_PROTECTION_PERIOD 40 //in seconds
+//#define THERMAL_RUNAWAY_PROTECTION_HYSTERESIS 4 // in degree Celsius
+
+// If you want to enable this feature for your bed heater,
+// uncomment the 2 defines below:
+
+// Parameters for the bed heater
+//#define THERMAL_RUNAWAY_PROTECTION_BED_PERIOD 20 //in seconds
+//#define THERMAL_RUNAWAY_PROTECTION_BED_HYSTERESIS 2 // in degree Celsius
+//===========================================================================
+
+
+//===========================================================================
+//=============================Mechanical Settings===========================
+//===========================================================================
+
+// Uncomment the following line to enable CoreXY kinematics
+// #define COREXY
+
+// coarse Endstop Settings
+#define ENDSTOPPULLUPS // Comment this out (using // at the start of the line) to disable the endstop pullup resistors
+
+#ifndef ENDSTOPPULLUPS
+  // fine endstop settings: Individual pullups. will be ignored if ENDSTOPPULLUPS is defined
+  // #define ENDSTOPPULLUP_XMAX
+  // #define ENDSTOPPULLUP_YMAX
+  // #define ENDSTOPPULLUP_ZMAX
+  // #define ENDSTOPPULLUP_XMIN
+  // #define ENDSTOPPULLUP_YMIN
+  // #define ENDSTOPPULLUP_ZMIN
+#endif
+
+#ifdef ENDSTOPPULLUPS
+  #define ENDSTOPPULLUP_XMAX
+  #define ENDSTOPPULLUP_YMAX
+  #define ENDSTOPPULLUP_ZMAX
+  #define ENDSTOPPULLUP_XMIN
+  #define ENDSTOPPULLUP_YMIN
+  #define ENDSTOPPULLUP_ZMIN
+#endif
+
+// The pullups are needed if you directly connect a mechanical endswitch between the signal and ground pins.
+const bool X_MIN_ENDSTOP_INVERTING = true; // set to true to invert the logic of the endstop.
+const bool Y_MIN_ENDSTOP_INVERTING = true; // set to true to invert the logic of the endstop.
+const bool Z_MIN_ENDSTOP_INVERTING = true; // set to true to invert the logic of the endstop.
+const bool X_MAX_ENDSTOP_INVERTING = true; // set to true to invert the logic of the endstop.
+const bool Y_MAX_ENDSTOP_INVERTING = true; // set to true to invert the logic of the endstop.
+const bool Z_MAX_ENDSTOP_INVERTING = true; // set to true to invert the logic of the endstop.
+//#define DISABLE_MAX_ENDSTOPS
+//#define DISABLE_MIN_ENDSTOPS
+
+// Disable max endstops for compatibility with endstop checking routine
+#if defined(COREXY) && !defined(DISABLE_MAX_ENDSTOPS)
+  #define DISABLE_MAX_ENDSTOPS
+#endif
+
+// For Inverting Stepper Enable Pins (Active Low) use 0, Non Inverting (Active High) use 1
+#define X_ENABLE_ON 1
+#define Y_ENABLE_ON 1
+#define Z_ENABLE_ON 1
+#define E_ENABLE_ON 1 // For all extruders
+
+// Disables axis when it's not being used.
+#define DISABLE_X false
+#define DISABLE_Y false
+#define DISABLE_Z false
+#define DISABLE_E false // For all extruders
+#define DISABLE_INACTIVE_EXTRUDER true //disable only inactive extruders and keep active extruder enabled
+
+#define INVERT_X_DIR false    // for Mendel set to false, for Orca set to true
+#define INVERT_Y_DIR true    // for Mendel set to true, for Orca set to false
+#define INVERT_Z_DIR false     // for Mendel set to false, for Orca set to true
+#define INVERT_E0_DIR false   // for direct drive extruder v9 set to true, for geared extruder set to false
+#define INVERT_E1_DIR false    // for direct drive extruder v9 set to true, for geared extruder set to false
+#define INVERT_E2_DIR false   // for direct drive extruder v9 set to true, for geared extruder set to false
+
+// ENDSTOP SETTINGS:
+// Sets direction of endstops when homing; 1=MAX, -1=MIN
+#define X_HOME_DIR -1
+#define Y_HOME_DIR -1
+#define Z_HOME_DIR -1
+
+#define min_software_endstops true // If true, axis won't move to coordinates less than HOME_POS.
+#define max_software_endstops true  // If true, axis won't move to coordinates greater than the defined lengths below.
+
+// Travel limits after homing
+#define X_MAX_POS 205
+#define X_MIN_POS 0
+#define Y_MAX_POS 205
+#define Y_MIN_POS 0
+#define Z_MAX_POS 120
+#define Z_MIN_POS 0
+
+#define X_MAX_LENGTH (X_MAX_POS - X_MIN_POS)
+#define Y_MAX_LENGTH (Y_MAX_POS - Y_MIN_POS)
+#define Z_MAX_LENGTH (Z_MAX_POS - Z_MIN_POS)
+//============================= Bed Auto Leveling ===========================
+
+//#define ENABLE_AUTO_BED_LEVELING // Delete the comment to enable (remove // at the start of the line)
+#define Z_PROBE_REPEATABILITY_TEST  // If not commented out, Z-Probe Repeatability test will be included if Auto Bed Leveling is Enabled.
+
+#ifdef ENABLE_AUTO_BED_LEVELING
+
+// There are 2 different ways to pick the X and Y locations to probe:
+
+//  - "grid" mode
+//    Probe every point in a rectangular grid
+//    You must specify the rectangle, and the density of sample points
+//    This mode is preferred because there are more measurements.
+//    It used to be called ACCURATE_BED_LEVELING but "grid" is more descriptive
+
+//  - "3-point" mode
+//    Probe 3 arbitrary points on the bed (that aren't colinear)
+//    You must specify the X & Y coordinates of all 3 points
+
+  #define AUTO_BED_LEVELING_GRID
+  // with AUTO_BED_LEVELING_GRID, the bed is sampled in a
+  // AUTO_BED_LEVELING_GRID_POINTSxAUTO_BED_LEVELING_GRID_POINTS grid
+  // and least squares solution is calculated
+  // Note: this feature occupies 10'206 byte
+  #ifdef AUTO_BED_LEVELING_GRID
+
+    // set the rectangle in which to probe
+    #define LEFT_PROBE_BED_POSITION 15
+    #define RIGHT_PROBE_BED_POSITION 170
+    #define BACK_PROBE_BED_POSITION 180
+    #define FRONT_PROBE_BED_POSITION 20
+
+     // set the number of grid points per dimension
+     // I wouldn't see a reason to go above 3 (=9 probing points on the bed)
+    #define AUTO_BED_LEVELING_GRID_POINTS 2
+
+
+  #else  // not AUTO_BED_LEVELING_GRID
+    // with no grid, just probe 3 arbitrary points.  A simple cross-product
+    // is used to esimate the plane of the print bed
+
+      #define ABL_PROBE_PT_1_X 15
+      #define ABL_PROBE_PT_1_Y 180
+      #define ABL_PROBE_PT_2_X 15
+      #define ABL_PROBE_PT_2_Y 20
+      #define ABL_PROBE_PT_3_X 170
+      #define ABL_PROBE_PT_3_Y 20
+
+  #endif // AUTO_BED_LEVELING_GRID
+
+
+  // these are the offsets to the probe relative to the extruder tip (Hotend - Probe)
+  #define X_PROBE_OFFSET_FROM_EXTRUDER -25
+  #define Y_PROBE_OFFSET_FROM_EXTRUDER -29
+  #define Z_PROBE_OFFSET_FROM_EXTRUDER -12.35
+
+  #define Z_RAISE_BEFORE_HOMING 4       // (in mm) Raise Z before homing (G28) for Probe Clearance.
+                                        // Be sure you have this distance over your Z_MAX_POS in case
+
+  #define XY_TRAVEL_SPEED 8000         // X and Y axis travel speed between probes, in mm/min
+
+  #define Z_RAISE_BEFORE_PROBING 15    //How much the extruder will be raised before traveling to the first probing point.
+  #define Z_RAISE_BETWEEN_PROBINGS 5  //How much the extruder will be raised when traveling from between next probing points
+
+  //#define Z_PROBE_SLED // turn on if you have a z-probe mounted on a sled like those designed by Charles Bell
+  //#define SLED_DOCKING_OFFSET 5 // the extra distance the X axis must travel to pickup the sled. 0 should be fine but you can push it further if you'd like.
+
+  //If defined, the Probe servo will be turned on only during movement and then turned off to avoid jerk
+  //The value is the delay to turn the servo off after powered on - depends on the servo speed; 300ms is good value, but you can try lower it.
+  // You MUST HAVE the SERVO_ENDSTOPS defined to use here a value higher than zero otherwise your code will not compile.
+
+//  #define PROBE_SERVO_DEACTIVATION_DELAY 300
+
+
+//If you have enabled the Bed Auto Leveling and are using the same Z Probe for Z Homing,
+//it is highly recommended you let this Z_SAFE_HOMING enabled!!!
+
+  #define Z_SAFE_HOMING   // This feature is meant to avoid Z homing with probe outside the bed area.
+                          // When defined, it will:
+                          // - Allow Z homing only after X and Y homing AND stepper drivers still enabled
+                          // - If stepper drivers timeout, it will need X and Y homing again before Z homing
+                          // - Position the probe in a defined XY point before Z Homing when homing all axis (G28)
+                          // - Block Z homing only when the probe is outside bed area.
+
+  #ifdef Z_SAFE_HOMING
+
+    #define Z_SAFE_HOMING_X_POINT (X_MAX_LENGTH/2)    // X point for Z homing when homing all axis (G28)
+    #define Z_SAFE_HOMING_Y_POINT (Y_MAX_LENGTH/2)    // Y point for Z homing when homing all axis (G28)
+
+  #endif
+
+#endif // ENABLE_AUTO_BED_LEVELING
+
+
+// The position of the homing switches
+//#define MANUAL_HOME_POSITIONS  // If defined, MANUAL_*_HOME_POS below will be used
+//#define BED_CENTER_AT_0_0  // If defined, the center of the bed is at (X=0, Y=0)
+
+//Manual homing switch locations:
+// For deltabots this means top and center of the Cartesian print volume.
+#define MANUAL_X_HOME_POS 0
+#define MANUAL_Y_HOME_POS 0
+#define MANUAL_Z_HOME_POS 0
+//#define MANUAL_Z_HOME_POS 402 // For delta: Distance between nozzle and print surface after homing.
+
+//// MOVEMENT SETTINGS
+#define NUM_AXIS 4 // The axis order in all axis related arrays is X, Y, Z, E
+#define HOMING_FEEDRATE {50*60, 50*60, 4*60, 0}  // set the homing speeds (mm/min)
+
+// default settings
+
+//#define DEFAULT_AXIS_STEPS_PER_UNIT   {78.7402,78.7402,200.0*8/3,760*1.1}  // default steps per unit for Ultimaker
+//#define //DEFAULT_AXIS_STEPS_PER_UNIT   {79.87, 79.87, 2566, 563,78} // Al's TVRR
+//#define DEFAULT_AXIS_STEPS_PER_UNIT   {81.26, 80.01, 2561, 599.14} // Michel TVRR old
+//#define DEFAULT_AXIS_STEPS_PER_UNIT   {71.1, 71.1, 2560, 739.65} // Michel TVRR
+#define DEFAULT_AXIS_STEPS_PER_UNIT   {71.1, 71.1, 2560, 600} // David TVRR
+
+
+
+//#define DEFAULT_MAX_FEEDRATE          {500, 500, 5, 25}    // (mm/sec) default
+#define DEFAULT_MAX_FEEDRATE          {500, 500, 5, 45}    // (mm/sec) David TVRR   
+#define DEFAULT_MAX_ACCELERATION      {9000,9000,100,10000}    // X, Y, Z, E maximum start speed for accelerated moves. E default values are good for Skeinforge 40+, for older versions raise them a lot.
+
+/* MICHEL: This has an impact on the "ripples" in print walls */
+#define DEFAULT_ACCELERATION          500    // X, Y, Z and E max acceleration in mm/s^2 for printing moves 
+//#define DEFAULT_ACCELERATION          3000    // X, Y, Z and E max acceleration in mm/s^2 for printing moves
+#define DEFAULT_RETRACT_ACCELERATION  3000   // X, Y, Z and E max acceleration in mm/s^2 for retracts
+
+// Offset of the extruders (uncomment if using more than one and relying on firmware to position when changing).
+// The offset has to be X=0, Y=0 for the extruder 0 hotend (default extruder).
+// For the other hotends it is their distance from the extruder 0 hotend.
+// #define EXTRUDER_OFFSET_X {0.0, 20.00} // (in mm) for each extruder, offset of the hotend on the X axis
+// #define EXTRUDER_OFFSET_Y {0.0, 5.00}  // (in mm) for each extruder, offset of the hotend on the Y axis
+
+// The speed change that does not require acceleration (i.e. the software might assume it can be done instantaneously)
+#define DEFAULT_XYJERK                20.0    // (mm/sec)
+#define DEFAULT_ZJERK                 0.4     // (mm/sec)
+#define DEFAULT_EJERK                 5.0    // (mm/sec)
+
+//===========================================================================
+//=============================Additional Features===========================
+//===========================================================================
+
+// Custom M code points
+#define CUSTOM_M_CODES
+#ifdef CUSTOM_M_CODES
+  #define CUSTOM_M_CODE_SET_Z_PROBE_OFFSET 851
+  #define Z_PROBE_OFFSET_RANGE_MIN -15
+  #define Z_PROBE_OFFSET_RANGE_MAX -5
+#endif
+
+
+// EEPROM
+// The microcontroller can store settings in the EEPROM, e.g. max velocity...
+// M500 - stores parameters in EEPROM
+// M501 - reads parameters from EEPROM (if you need reset them after you changed them temporarily).
+// M502 - reverts to the default "factory settings".  You still need to store them in EEPROM afterwards if you want to.
+//define this to enable EEPROM support
+//#define EEPROM_SETTINGS
+//to disable EEPROM Serial responses and decrease program space by ~1700 byte: comment this out:
+// please keep turned on if you can.
+//#define EEPROM_CHITCHAT
+
+// Preheat Constants
+#define PLA_PREHEAT_HOTEND_TEMP 180
+#define PLA_PREHEAT_HPB_TEMP 70
+#define PLA_PREHEAT_FAN_SPEED 255   // Insert Value between 0 and 255
+
+#define ABS_PREHEAT_HOTEND_TEMP 240
+#define ABS_PREHEAT_HPB_TEMP 100
+#define ABS_PREHEAT_FAN_SPEED 255   // Insert Value between 0 and 255
+
+//LCD and SD support
+//#define ULTRA_LCD  //general LCD support, also 16x2
+//#define DOGLCD  // Support for SPI LCD 128x64 (Controller ST7565R graphic Display Family)
+//#define SDSUPPORT // Enable SD Card Support in Hardware Console
+//#define SDSLOW // Use slower SD transfer mode (not normally needed - uncomment if you're getting volume init error)
+//#define SD_CHECK_AND_RETRY // Use CRC checks and retries on the SD communication
+//#define ENCODER_PULSES_PER_STEP 1 // Increase if you have a high resolution encoder
+//#define ENCODER_STEPS_PER_MENU_ITEM 5 // Set according to ENCODER_PULSES_PER_STEP or your liking
+//#define ULTIMAKERCONTROLLER //as available from the Ultimaker online store.
+//#define ULTIPANEL  //the UltiPanel as on Thingiverse
+//#define LCD_FEEDBACK_FREQUENCY_HZ 1000	// this is the tone frequency the buzzer plays when on UI feedback. ie Screen Click
+//#define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100 // the duration the buzzer plays the UI feedback sound. ie Screen Click
+
+// The MaKr3d Makr-Panel with graphic controller and SD support
+// http://reprap.org/wiki/MaKr3d_MaKrPanel
+//#define MAKRPANEL
+
+// The RepRapDiscount Smart Controller (white PCB)
+// http://reprap.org/wiki/RepRapDiscount_Smart_Controller
+//#define REPRAP_DISCOUNT_SMART_CONTROLLER
+
+// The GADGETS3D G3D LCD/SD Controller (blue PCB)
+// http://reprap.org/wiki/RAMPS_1.3/1.4_GADGETS3D_Shield_with_Panel
+//#define G3D_PANEL
+
+// The RepRapDiscount FULL GRAPHIC Smart Controller (quadratic white PCB)
+// http://reprap.org/wiki/RepRapDiscount_Full_Graphic_Smart_Controller
+//
+// ==> REMEMBER TO INSTALL U8glib to your ARDUINO library folder: http://code.google.com/p/u8glib/wiki/u8glib
+//#define REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER
+
+// The RepRapWorld REPRAPWORLD_KEYPAD v1.1
+// http://reprapworld.com/?products_details&products_id=202&cPath=1591_1626
+//#define REPRAPWORLD_KEYPAD
+//#define REPRAPWORLD_KEYPAD_MOVE_STEP 10.0 // how much should be moved when a key is pressed, eg 10.0 means 10mm per click
+
+// The Elefu RA Board Control Panel
+// http://www.elefu.com/index.php?route=product/product&product_id=53
+// REMEMBER TO INSTALL LiquidCrystal_I2C.h in your ARUDINO library folder: https://github.com/kiyoshigawa/LiquidCrystal_I2C
+//#define RA_CONTROL_PANEL
+
+//automatic expansion
+#if defined (MAKRPANEL)
+ #define DOGLCD
+ #define SDSUPPORT
+ #define ULTIPANEL
+ #define NEWPANEL
+ #define DEFAULT_LCD_CONTRAST 17
+#endif
+
+#if defined (REPRAP_DISCOUNT_FULL_GRAPHIC_SMART_CONTROLLER)
+ #define DOGLCD
+ #define U8GLIB_ST7920
+ #define REPRAP_DISCOUNT_SMART_CONTROLLER
+#endif
+
+#if defined(ULTIMAKERCONTROLLER) || defined(REPRAP_DISCOUNT_SMART_CONTROLLER) || defined(G3D_PANEL)
+ #define ULTIPANEL
+ #define NEWPANEL
+#endif
+
+#if defined(REPRAPWORLD_KEYPAD)
+  #define NEWPANEL
+  #define ULTIPANEL
+#endif
+#if defined(RA_CONTROL_PANEL)
+ #define ULTIPANEL
+ #define NEWPANEL
+ #define LCD_I2C_TYPE_PCA8574
+ #define LCD_I2C_ADDRESS 0x27   // I2C Address of the port expander
+#endif
+
+//I2C PANELS
+
+//#define LCD_I2C_SAINSMART_YWROBOT
+#ifdef LCD_I2C_SAINSMART_YWROBOT
+  // This uses the LiquidCrystal_I2C library ( https://bitbucket.org/fmalpartida/new-liquidcrystal/wiki/Home )
+  // Make sure it is placed in the Arduino libraries directory.
+  #define LCD_I2C_TYPE_PCF8575
+  #define LCD_I2C_ADDRESS 0x27   // I2C Address of the port expander
+  #define NEWPANEL
+  #define ULTIPANEL
+#endif
+
+// PANELOLU2 LCD with status LEDs, separate encoder and click inputs
+//#define LCD_I2C_PANELOLU2
+#ifdef LCD_I2C_PANELOLU2
+  // This uses the LiquidTWI2 library v1.2.3 or later ( https://github.com/lincomatic/LiquidTWI2 )
+  // Make sure the LiquidTWI2 directory is placed in the Arduino or Sketchbook libraries subdirectory.
+  // (v1.2.3 no longer requires you to define PANELOLU in the LiquidTWI2.h library header file)
+  // Note: The PANELOLU2 encoder click input can either be directly connected to a pin
+  //       (if BTN_ENC defined to != -1) or read through I2C (when BTN_ENC == -1).
+  #define LCD_I2C_TYPE_MCP23017
+  #define LCD_I2C_ADDRESS 0x20 // I2C Address of the port expander
+  #define LCD_USE_I2C_BUZZER //comment out to disable buzzer on LCD
+  #define NEWPANEL
+  #define ULTIPANEL
+
+  #ifndef ENCODER_PULSES_PER_STEP
+	#define ENCODER_PULSES_PER_STEP 4
+  #endif
+
+  #ifndef ENCODER_STEPS_PER_MENU_ITEM
+	#define ENCODER_STEPS_PER_MENU_ITEM 1
+  #endif
+
+
+  #ifdef LCD_USE_I2C_BUZZER
+	#define LCD_FEEDBACK_FREQUENCY_HZ 1000
+	#define LCD_FEEDBACK_FREQUENCY_DURATION_MS 100
+  #endif
+
+#endif
+
+// Panucatt VIKI LCD with status LEDs, integrated click & L/R/U/P buttons, separate encoder inputs
+//#define LCD_I2C_VIKI
+#ifdef LCD_I2C_VIKI
+  // This uses the LiquidTWI2 library v1.2.3 or later ( https://github.com/lincomatic/LiquidTWI2 )
+  // Make sure the LiquidTWI2 directory is placed in the Arduino or Sketchbook libraries subdirectory.
+  // Note: The pause/stop/resume LCD button pin should be connected to the Arduino
+  //       BTN_ENC pin (or set BTN_ENC to -1 if not used)
+  #define LCD_I2C_TYPE_MCP23017
+  #define LCD_I2C_ADDRESS 0x20 // I2C Address of the port expander
+  #define LCD_USE_I2C_BUZZER //comment out to disable buzzer on LCD (requires LiquidTWI2 v1.2.3 or later)
+  #define NEWPANEL
+  #define ULTIPANEL
+#endif
+
+// Shift register panels
+// ---------------------
+// 2 wire Non-latching LCD SR from:
+// https://bitbucket.org/fmalpartida/new-liquidcrystal/wiki/schematics#!shiftregister-connection
+//#define SR_LCD
+#ifdef SR_LCD
+   #define SR_LCD_2W_NL    // Non latching 2 wire shift register
+   //#define NEWPANEL
+#endif
+
+
+#ifdef ULTIPANEL
+//  #define NEWPANEL  //enable this if you have a click-encoder panel
+  #define SDSUPPORT
+  #define ULTRA_LCD
+  #ifdef DOGLCD // Change number of lines to match the DOG graphic display
+    #define LCD_WIDTH 20
+    #define LCD_HEIGHT 5
+  #else
+    #define LCD_WIDTH 20
+    #define LCD_HEIGHT 4
+  #endif
+#else //no panel but just LCD
+  #ifdef ULTRA_LCD
+  #ifdef DOGLCD // Change number of lines to match the 128x64 graphics display
+    #define LCD_WIDTH 20
+    #define LCD_HEIGHT 5
+  #else
+    #define LCD_WIDTH 16
+    #define LCD_HEIGHT 2
+  #endif
+  #endif
+#endif
+
+// default LCD contrast for dogm-like LCD displays
+#ifdef DOGLCD
+# ifndef DEFAULT_LCD_CONTRAST
+#  define DEFAULT_LCD_CONTRAST 32
+# endif
+#endif
+
+// Increase the FAN pwm frequency. Removes the PWM noise but increases heating in the FET/Arduino
+//#define FAST_PWM_FAN
+
+// Temperature status LEDs that display the hotend and bet temperature.
+// If all hotends and bed temperature and temperature setpoint are < 54C then the BLUE led is on.
+// Otherwise the RED led is on. There is 1C hysteresis.
+//#define TEMP_STAT_LEDS
+
+// Use software PWM to drive the fan, as for the heaters. This uses a very low frequency
+// which is not ass annoying as with the hardware PWM. On the other hand, if this frequency
+// is too low, you should also increment SOFT_PWM_SCALE.
+//#define FAN_SOFT_PWM
+
+// Incrementing this by 1 will double the software PWM frequency,
+// affecting heaters, and the fan if FAN_SOFT_PWM is enabled.
+// However, control resolution will be halved for each increment;
+// at zero value, there are 128 effective control positions.
+#define SOFT_PWM_SCALE 0
+
+// M240  Triggers a camera by emulating a Canon RC-1 Remote
+// Data from: http://www.doc-diy.net/photo/rc-1_hacked/
+// #define PHOTOGRAPH_PIN     23
+
+// SF send wrong arc g-codes when using Arc Point as fillet procedure
+//#define SF_ARC_FIX
+
+// Support for the BariCUDA Paste Extruder.
+//#define BARICUDA
+
+//define BlinkM/CyzRgb Support
+//#define BLINKM
+
+/*********************************************************************\
+* R/C SERVO support
+* Sponsored by TrinityLabs, Reworked by codexmas
+**********************************************************************/
+
+// Number of servos
+//
+// If you select a configuration below, this will receive a default value and does not need to be set manually
+// set it manually if you have more servos than extruders and wish to manually control some
+// leaving it undefined or defining as 0 will disable the servo subsystem
+// If unsure, leave commented / disabled
+//
+//#define NUM_SERVOS 3 // Servo index starts with 0 for M280 command
+
+// Servo Endstops
+//
+// This allows for servo actuated endstops, primary usage is for the Z Axis to eliminate calibration or bed height changes.
+// Use M206 command to correct for switch height offset to actual nozzle height. Store that setting with M500.
+//
+//#define SERVO_ENDSTOPS {-1, -1, 0} // Servo index for X, Y, Z. Disable with -1
+//#define SERVO_ENDSTOP_ANGLES {0,0, 0,0, 70,0} // X,Y,Z Axis Extend and Retract angles
+
+/**********************************************************************\
+ * Support for a filament diameter sensor
+ * Also allows adjustment of diameter at print time (vs  at slicing)
+ * Single extruder only at this point (extruder 0)
+ * 
+ * Motherboards
+ * 34 - RAMPS1.4 - uses Analog input 5 on the AUX2 connector 
+ * 81 - Printrboard - Uses Analog input 2 on the Aux 2 connector
+ * 301 - Rambo  - uses Analog input 3
+ * Note may require analog pins to be defined for different motherboards
+ **********************************************************************/
+// Uncomment below to enable
+//#define FILAMENT_SENSOR
+
+#define FILAMENT_SENSOR_EXTRUDER_NUM	0  //The number of the extruder that has the filament sensor (0,1,2)
+#define MEASUREMENT_DELAY_CM			14  //measurement delay in cm.  This is the distance from filament sensor to middle of barrel
+
+#define DEFAULT_NOMINAL_FILAMENT_DIA  3.0  //Enter the diameter (in mm) of the filament generally used (3.0 mm or 1.75 mm) - this is then used in the slicer software.  Used for sensor reading validation
+#define MEASURED_UPPER_LIMIT          3.30  //upper limit factor used for sensor reading validation in mm
+#define MEASURED_LOWER_LIMIT          1.90  //lower limit factor for sensor reading validation in mm
+#define MAX_MEASUREMENT_DELAY			20  //delay buffer size in bytes (1 byte = 1cm)- limits maximum measurement delay allowable (must be larger than MEASUREMENT_DELAY_CM  and lower number saves RAM)
+
+//defines used in the code
+#define DEFAULT_MEASURED_FILAMENT_DIA  DEFAULT_NOMINAL_FILAMENT_DIA  //set measured to nominal initially 
+
+
+
+
+
+
+
+#include "Configuration_adv.h"
+#include "thermistortables.h"
+
+#endif //__CONFIGURATION_H
diff --git a/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h b/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
new file mode 100644
index 0000000..2eb1f64
--- /dev/null
+++ b/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
@@ -0,0 +1,501 @@
+#ifndef CONFIGURATION_ADV_H
+#define CONFIGURATION_ADV_H
+
+//===========================================================================
+//=============================Thermal Settings  ============================
+//===========================================================================
+
+#ifdef BED_LIMIT_SWITCHING
+  #define BED_HYSTERESIS 2 //only disable heating if T>target+BED_HYSTERESIS and enable heating if T>target-BED_HYSTERESIS
+#endif
+#define BED_CHECK_INTERVAL 5000 //ms between checks in bang-bang control
+
+//// Heating sanity check:
+// This waits for the watch period in milliseconds whenever an M104 or M109 increases the target temperature
+// If the temperature has not increased at the end of that period, the target temperature is set to zero.
+// It can be reset with another M104/M109. This check is also only triggered if the target temperature and the current temperature
+//  differ by at least 2x WATCH_TEMP_INCREASE
+//#define WATCH_TEMP_PERIOD 40000 //40 seconds
+//#define WATCH_TEMP_INCREASE 10  //Heat up at least 10 degree in 20 seconds
+
+#ifdef PIDTEMP
+  // this adds an experimental additional term to the heating power, proportional to the extrusion speed.
+  // if Kc is chosen well, the additional required power due to increased melting should be compensated.
+  #define PID_ADD_EXTRUSION_RATE
+  #ifdef PID_ADD_EXTRUSION_RATE
+    #define  DEFAULT_Kc (1) //heating power=Kc*(e_speed)
+  #endif
+#endif
+
+
+//automatic temperature: The hot end target temperature is calculated by all the buffered lines of gcode.
+//The maximum buffered steps/sec of the extruder motor are called "se".
+//You enter the autotemp mode by a M109 S<mintemp> B<maxtemp> F<factor>
+// the target temperature is set to mintemp+factor*se[steps/sec] and limited by mintemp and maxtemp
+// you exit the value by any M109 without F*
+// Also, if the temperature is set to a value <mintemp, it is not changed by autotemp.
+// on an Ultimaker, some initial testing worked with M109 S215 B260 F1 in the start.gcode
+#define AUTOTEMP
+#ifdef AUTOTEMP
+  #define AUTOTEMP_OLDWEIGHT 0.98
+#endif
+
+//Show Temperature ADC value
+//The M105 command return, besides traditional information, the ADC value read from temperature sensors.
+//#define SHOW_TEMP_ADC_VALUES
+
+//  extruder run-out prevention.
+//if the machine is idle, and the temperature over MINTEMP, every couple of SECONDS some filament is extruded
+//#define EXTRUDER_RUNOUT_PREVENT
+#define EXTRUDER_RUNOUT_MINTEMP 190
+#define EXTRUDER_RUNOUT_SECONDS 30.
+#define EXTRUDER_RUNOUT_ESTEPS 14. //mm filament
+#define EXTRUDER_RUNOUT_SPEED 1500.  //extrusion speed
+#define EXTRUDER_RUNOUT_EXTRUDE 100
+
+//These defines help to calibrate the AD595 sensor in case you get wrong temperature measurements.
+//The measured temperature is defined as "actualTemp = (measuredTemp * TEMP_SENSOR_AD595_GAIN) + TEMP_SENSOR_AD595_OFFSET"
+#define TEMP_SENSOR_AD595_OFFSET 0.0
+#define TEMP_SENSOR_AD595_GAIN   1.0
+
+//This is for controlling a fan to cool down the stepper drivers
+//it will turn on when any driver is enabled
+//and turn off after the set amount of seconds from last driver being disabled again
+#define CONTROLLERFAN_PIN 23 //Pin used for the fan to cool controller (-1 to disable)
+#define CONTROLLERFAN_SECS 60 //How many seconds, after all motors were disabled, the fan should run
+#define CONTROLLERFAN_SPEED 255  // == full speed
+
+// When first starting the main fan, run it at full speed for the
+// given number of milliseconds.  This gets the fan spinning reliably
+// before setting a PWM value. (Does not work with software PWM for fan on Sanguinololu)
+//#define FAN_KICKSTART_TIME 100
+
+// Extruder cooling fans
+// Configure fan pin outputs to automatically turn on/off when the associated
+// extruder temperature is above/below EXTRUDER_AUTO_FAN_TEMPERATURE.
+// Multiple extruders can be assigned to the same pin in which case
+// the fan will turn on when any selected extruder is above the threshold.
+#define EXTRUDER_0_AUTO_FAN_PIN   -1
+#define EXTRUDER_1_AUTO_FAN_PIN   -1
+#define EXTRUDER_2_AUTO_FAN_PIN   -1
+#define EXTRUDER_AUTO_FAN_TEMPERATURE 50
+#define EXTRUDER_AUTO_FAN_SPEED   255  // == full speed
+
+
+//===========================================================================
+//=============================Mechanical Settings===========================
+//===========================================================================
+
+#define ENDSTOPS_ONLY_FOR_HOMING // If defined the endstops will only be used for homing
+
+
+//// AUTOSET LOCATIONS OF LIMIT SWITCHES
+//// Added by ZetaPhoenix 09-15-2012
+#ifdef MANUAL_HOME_POSITIONS  // Use manual limit switch locations
+  #define X_HOME_POS MANUAL_X_HOME_POS
+  #define Y_HOME_POS MANUAL_Y_HOME_POS
+  #define Z_HOME_POS MANUAL_Z_HOME_POS
+#else //Set min/max homing switch positions based upon homing direction and min/max travel limits
+  //X axis
+  #if X_HOME_DIR == -1
+    #ifdef BED_CENTER_AT_0_0
+      #define X_HOME_POS X_MAX_LENGTH * -0.5
+    #else
+      #define X_HOME_POS X_MIN_POS
+    #endif //BED_CENTER_AT_0_0
+  #else
+    #ifdef BED_CENTER_AT_0_0
+      #define X_HOME_POS X_MAX_LENGTH * 0.5
+    #else
+      #define X_HOME_POS X_MAX_POS
+    #endif //BED_CENTER_AT_0_0
+  #endif //X_HOME_DIR == -1
+
+  //Y axis
+  #if Y_HOME_DIR == -1
+    #ifdef BED_CENTER_AT_0_0
+      #define Y_HOME_POS Y_MAX_LENGTH * -0.5
+    #else
+      #define Y_HOME_POS Y_MIN_POS
+    #endif //BED_CENTER_AT_0_0
+  #else
+    #ifdef BED_CENTER_AT_0_0
+      #define Y_HOME_POS Y_MAX_LENGTH * 0.5
+    #else
+      #define Y_HOME_POS Y_MAX_POS
+    #endif //BED_CENTER_AT_0_0
+  #endif //Y_HOME_DIR == -1
+
+  // Z axis
+  #if Z_HOME_DIR == -1 //BED_CENTER_AT_0_0 not used
+    #define Z_HOME_POS Z_MIN_POS
+  #else
+    #define Z_HOME_POS Z_MAX_POS
+  #endif //Z_HOME_DIR == -1
+#endif //End auto min/max positions
+//END AUTOSET LOCATIONS OF LIMIT SWITCHES -ZP
+
+
+//#define Z_LATE_ENABLE // Enable Z the last moment. Needed if your Z driver overheats.
+
+// A single Z stepper driver is usually used to drive 2 stepper motors.
+// Uncomment this define to utilize a separate stepper driver for each Z axis motor.
+// Only a few motherboards support this, like RAMPS, which have dual extruder support (the 2nd, often unused, extruder driver is used
+// to control the 2nd Z axis stepper motor). The pins are currently only defined for a RAMPS motherboards.
+// On a RAMPS (or other 5 driver) motherboard, using this feature will limit you to using 1 extruder.
+//#define Z_DUAL_STEPPER_DRIVERS
+
+#ifdef Z_DUAL_STEPPER_DRIVERS
+  #undef EXTRUDERS
+  #define EXTRUDERS 1
+#endif
+
+// Same again but for Y Axis.
+//#define Y_DUAL_STEPPER_DRIVERS
+
+// Define if the two Y drives need to rotate in opposite directions
+#define INVERT_Y2_VS_Y_DIR true
+
+#ifdef Y_DUAL_STEPPER_DRIVERS
+  #undef EXTRUDERS
+  #define EXTRUDERS 1
+#endif
+
+#if defined (Z_DUAL_STEPPER_DRIVERS) && defined (Y_DUAL_STEPPER_DRIVERS)
+  #error "You cannot have dual drivers for both Y and Z"
+#endif
+
+// Enable this for dual x-carriage printers.
+// A dual x-carriage design has the advantage that the inactive extruder can be parked which
+// prevents hot-end ooze contaminating the print. It also reduces the weight of each x-carriage
+// allowing faster printing speeds.
+//#define DUAL_X_CARRIAGE
+#ifdef DUAL_X_CARRIAGE
+// Configuration for second X-carriage
+// Note: the first x-carriage is defined as the x-carriage which homes to the minimum endstop;
+// the second x-carriage always homes to the maximum endstop.
+#define X2_MIN_POS 80     // set minimum to ensure second x-carriage doesn't hit the parked first X-carriage
+#define X2_MAX_POS 353    // set maximum to the distance between toolheads when both heads are homed
+#define X2_HOME_DIR 1     // the second X-carriage always homes to the maximum endstop position
+#define X2_HOME_POS X2_MAX_POS // default home position is the maximum carriage position
+    // However: In this mode the EXTRUDER_OFFSET_X value for the second extruder provides a software
+    // override for X2_HOME_POS. This also allow recalibration of the distance between the two endstops
+    // without modifying the firmware (through the "M218 T1 X???" command).
+    // Remember: you should set the second extruder x-offset to 0 in your slicer.
+
+// Pins for second x-carriage stepper driver (defined here to avoid further complicating pins.h)
+#define X2_ENABLE_PIN 29
+#define X2_STEP_PIN 25
+#define X2_DIR_PIN 23
+
+// There are a few selectable movement modes for dual x-carriages using M605 S<mode>
+//    Mode 0: Full control. The slicer has full control over both x-carriages and can achieve optimal travel results
+//                           as long as it supports dual x-carriages. (M605 S0)
+//    Mode 1: Auto-park mode. The firmware will automatically park and unpark the x-carriages on tool changes so
+//                           that additional slicer support is not required. (M605 S1)
+//    Mode 2: Duplication mode. The firmware will transparently make the second x-carriage and extruder copy all
+//                           actions of the first x-carriage. This allows the printer to print 2 arbitrary items at
+//                           once. (2nd extruder x offset and temp offset are set using: M605 S2 [Xnnn] [Rmmm])
+
+// This is the default power-up mode which can be later using M605.
+#define DEFAULT_DUAL_X_CARRIAGE_MODE 0
+
+// As the x-carriages are independent we can now account for any relative Z offset
+#define EXTRUDER1_Z_OFFSET 0.0           // z offset relative to extruder 0
+
+// Default settings in "Auto-park Mode"
+#define TOOLCHANGE_PARK_ZLIFT   0.2      // the distance to raise Z axis when parking an extruder
+#define TOOLCHANGE_UNPARK_ZLIFT 1        // the distance to raise Z axis when unparking an extruder
+
+// Default x offset in duplication mode (typically set to half print bed width)
+#define DEFAULT_DUPLICATION_X_OFFSET 100
+
+#endif //DUAL_X_CARRIAGE
+
+//homing hits the endstop, then retracts by this distance, before it tries to slowly bump again:
+#define X_HOME_RETRACT_MM 5
+#define Y_HOME_RETRACT_MM 5
+#define Z_HOME_RETRACT_MM 1
+//#define QUICK_HOME  //if this is defined, if both x and y are to be homed, a diagonal move will be performed initially.
+
+#define AXIS_RELATIVE_MODES {false, false, false, false}
+#ifdef CONFIG_STEPPERS_TOSHIBA
+#define MAX_STEP_FREQUENCY 10000 // Max step frequency for Toshiba Stepper Controllers
+#else
+#define MAX_STEP_FREQUENCY 40000 // Max step frequency for Ultimaker (5000 pps / half step)
+#endif
+//By default pololu step drivers require an active high signal. However, some high power drivers require an active low signal as step.
+#define INVERT_X_STEP_PIN false
+#define INVERT_Y_STEP_PIN false
+#define INVERT_Z_STEP_PIN false
+#define INVERT_E_STEP_PIN false
+
+//default stepper release if idle
+#define DEFAULT_STEPPER_DEACTIVE_TIME 60
+
+#define DEFAULT_MINIMUMFEEDRATE       0.0     // minimum feedrate
+#define DEFAULT_MINTRAVELFEEDRATE     0.0
+
+// Feedrates for manual moves along X, Y, Z, E from panel
+#ifdef ULTIPANEL
+#define MANUAL_FEEDRATE {50*60, 50*60, 4*60, 60}  // set the speeds for manual moves (mm/min)
+#endif
+
+//Comment to disable setting feedrate multiplier via encoder
+#ifdef ULTIPANEL
+    #define ULTIPANEL_FEEDMULTIPLY
+#endif
+
+// minimum time in microseconds that a movement needs to take if the buffer is emptied.
+#define DEFAULT_MINSEGMENTTIME        20000
+
+// If defined the movements slow down when the look ahead buffer is only half full
+#define SLOWDOWN
+
+// Frequency limit
+// See nophead's blog for more info
+// Not working O
+//#define XY_FREQUENCY_LIMIT  15
+
+// Minimum planner junction speed. Sets the default minimum speed the planner plans for at the end
+// of the buffer and all stops. This should not be much greater than zero and should only be changed
+// if unwanted behavior is observed on a user's machine when running at very slow speeds.
+#define MINIMUM_PLANNER_SPEED 0.05// (mm/sec)
+
+// MS1 MS2 Stepper Driver Microstepping mode table
+#define MICROSTEP1 LOW,LOW
+#define MICROSTEP2 HIGH,LOW
+#define MICROSTEP4 LOW,HIGH
+#define MICROSTEP8 HIGH,HIGH
+#define MICROSTEP16 HIGH,HIGH
+
+// Microstep setting (Only functional when stepper driver microstep pins are connected to MCU.
+#define MICROSTEP_MODES {16,16,16,16,16} // [1,2,4,8,16]
+
+// Motor Current setting (Only functional when motor driver current ref pins are connected to a digital trimpot on supported boards)
+#define DIGIPOT_MOTOR_CURRENT {135,135,135,135,135} // Values 0-255 (RAMBO 135 = ~0.75A, 185 = ~1A)
+
+// uncomment to enable an I2C based DIGIPOT like on the Azteeg X3 Pro
+//#define DIGIPOT_I2C
+// Number of channels available for I2C digipot, For Azteeg X3 Pro we have 8
+#define DIGIPOT_I2C_NUM_CHANNELS 8
+// actual motor currents in Amps, need as many here as DIGIPOT_I2C_NUM_CHANNELS
+#define DIGIPOT_I2C_MOTOR_CURRENTS {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0}
+
+//===========================================================================
+//=============================Additional Features===========================
+//===========================================================================
+
+//#define CHDK 4        //Pin for triggering CHDK to take a picture see how to use it here http://captain-slow.dk/2014/03/09/3d-printing-timelapses/
+#define CHDK_DELAY 50 //How long in ms the pin should stay HIGH before going LOW again
+
+#define SD_FINISHED_STEPPERRELEASE true  //if sd support and the file is finished: disable steppers?
+#define SD_FINISHED_RELEASECOMMAND "M84 X Y Z E" // You might want to keep the z enabled so your bed stays in place.
+
+#define SDCARD_RATHERRECENTFIRST  //reverse file order of sd card menu display. Its sorted practically after the file system block order.
+// if a file is deleted, it frees a block. hence, the order is not purely chronological. To still have auto0.g accessible, there is again the option to do that.
+// using:
+//#define MENU_ADDAUTOSTART
+
+// The hardware watchdog should reset the microcontroller disabling all outputs, in case the firmware gets stuck and doesn't do temperature regulation.
+//#define USE_WATCHDOG
+
+#ifdef USE_WATCHDOG
+// If you have a watchdog reboot in an ArduinoMega2560 then the device will hang forever, as a watchdog reset will leave the watchdog on.
+// The "WATCHDOG_RESET_MANUAL" goes around this by not using the hardware reset.
+//  However, THIS FEATURE IS UNSAFE!, as it will only work if interrupts are disabled. And the code could hang in an interrupt routine with interrupts disabled.
+//#define WATCHDOG_RESET_MANUAL
+#endif
+
+// Enable the option to stop SD printing when hitting and endstops, needs to be enabled from the LCD menu when this option is enabled.
+//#define ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED
+
+// Babystepping enables the user to control the axis in tiny amounts, independently from the normal printing process
+// it can e.g. be used to change z-positions in the print startup phase in real-time
+// does not respect endstops!
+//#define BABYSTEPPING
+#ifdef BABYSTEPPING
+  #define BABYSTEP_XY  //not only z, but also XY in the menu. more clutter, more functions
+  #define BABYSTEP_INVERT_Z false  //true for inverse movements in Z
+  #define BABYSTEP_Z_MULTIPLICATOR 2 //faster z movements
+
+  #ifdef COREXY
+    #error BABYSTEPPING not implemented for COREXY yet.
+  #endif
+
+  #ifdef DELTA
+    #ifdef BABYSTEP_XY
+      #error BABYSTEPPING only implemented for Z axis on deltabots.
+    #endif
+  #endif
+#endif
+
+// extruder advance constant (s2/mm3)
+//
+// advance (steps) = STEPS_PER_CUBIC_MM_E * EXTUDER_ADVANCE_K * cubic mm per second ^ 2
+//
+// Hooke's law says:		force = k * distance
+// Bernoulli's principle says:	v ^ 2 / 2 + g . h + pressure / density = constant
+// so: v ^ 2 is proportional to number of steps we advance the extruder
+//#define ADVANCE
+
+#ifdef ADVANCE
+  #define EXTRUDER_ADVANCE_K .0
+
+  #define D_FILAMENT 2.85
+  #define STEPS_MM_E 836
+  #define EXTRUTION_AREA (0.25 * D_FILAMENT * D_FILAMENT * 3.14159)
+  #define STEPS_PER_CUBIC_MM_E (axis_steps_per_unit[E_AXIS]/ EXTRUTION_AREA)
+
+#endif // ADVANCE
+
+// Arc interpretation settings:
+#define MM_PER_ARC_SEGMENT 1
+#define N_ARC_CORRECTION 25
+
+const unsigned int dropsegments=5; //everything with less than this number of steps will be ignored as move and joined with the next movement
+
+// If you are using a RAMPS board or cheap E-bay purchased boards that do not detect when an SD card is inserted
+// You can get round this by connecting a push button or single throw switch to the pin defined as SDCARDCARDDETECT
+// in the pins.h file.  When using a push button pulling the pin to ground this will need inverted.  This setting should
+// be commented out otherwise
+#define SDCARDDETECTINVERTED
+
+#ifdef ULTIPANEL
+ #undef SDCARDDETECTINVERTED
+#endif
+
+// Power Signal Control Definitions
+// By default use ATX definition
+#ifndef POWER_SUPPLY
+  #define POWER_SUPPLY 1
+#endif
+// 1 = ATX
+#if (POWER_SUPPLY == 1)
+  #define PS_ON_AWAKE  LOW
+  #define PS_ON_ASLEEP HIGH
+#endif
+// 2 = X-Box 360 203W
+#if (POWER_SUPPLY == 2)
+  #define PS_ON_AWAKE  HIGH
+  #define PS_ON_ASLEEP LOW
+#endif
+
+// Control heater 0 and heater 1 in parallel.
+//#define HEATERS_PARALLEL
+
+//===========================================================================
+//=============================Buffers           ============================
+//===========================================================================
+
+// The number of linear motions that can be in the plan at any give time.
+// THE BLOCK_BUFFER_SIZE NEEDS TO BE A POWER OF 2, i.g. 8,16,32 because shifts and ors are used to do the ring-buffering.
+#if defined SDSUPPORT
+  #define BLOCK_BUFFER_SIZE 16   // SD,LCD,Buttons take more memory, block buffer needs to be smaller
+#else
+  #define BLOCK_BUFFER_SIZE 16 // maximize block buffer
+#endif
+
+
+//The ASCII buffer for receiving from the serial:
+#define MAX_CMD_SIZE 96
+#define BUFSIZE 4
+
+
+// Firmware based and LCD controlled retract
+// M207 and M208 can be used to define parameters for the retraction.
+// The retraction can be called by the slicer using G10 and G11
+// until then, intended retractions can be detected by moves that only extrude and the direction.
+// the moves are than replaced by the firmware controlled ones.
+
+// #define FWRETRACT  //ONLY PARTIALLY TESTED
+#ifdef FWRETRACT
+  #define MIN_RETRACT 0.1                //minimum extruded mm to accept a automatic gcode retraction attempt
+  #define RETRACT_LENGTH 3               //default retract length (positive mm)
+  #define RETRACT_LENGTH_SWAP 13         //default swap retract length (positive mm), for extruder change
+  #define RETRACT_FEEDRATE 45            //default feedrate for retracting (mm/s)
+  #define RETRACT_ZLIFT 0                //default retract Z-lift
+  #define RETRACT_RECOVER_LENGTH 0       //default additional recover length (mm, added to retract length when recovering)
+  #define RETRACT_RECOVER_LENGTH_SWAP 0  //default additional swap recover length (mm, added to retract length when recovering from extruder change)
+  #define RETRACT_RECOVER_FEEDRATE 8     //default feedrate for recovering from retraction (mm/s)
+#endif
+
+//adds support for experimental filament exchange support M600; requires display
+#ifdef ULTIPANEL
+  #define FILAMENTCHANGEENABLE
+  #ifdef FILAMENTCHANGEENABLE
+    #define FILAMENTCHANGE_XPOS 3
+    #define FILAMENTCHANGE_YPOS 3
+    #define FILAMENTCHANGE_ZADD 10
+    #define FILAMENTCHANGE_FIRSTRETRACT -2
+    #define FILAMENTCHANGE_FINALRETRACT -100
+  #endif
+#endif
+
+#ifdef FILAMENTCHANGEENABLE
+  #ifdef EXTRUDER_RUNOUT_PREVENT
+    #error EXTRUDER_RUNOUT_PREVENT currently incompatible with FILAMENTCHANGE
+  #endif
+#endif
+
+//===========================================================================
+//=============================  Define Defines  ============================
+//===========================================================================
+#if EXTRUDERS > 1 && defined TEMP_SENSOR_1_AS_REDUNDANT
+  #error "You cannot use TEMP_SENSOR_1_AS_REDUNDANT if EXTRUDERS > 1"
+#endif
+
+#if EXTRUDERS > 1 && defined HEATERS_PARALLEL
+  #error "You cannot use HEATERS_PARALLEL if EXTRUDERS > 1"
+#endif
+
+#if TEMP_SENSOR_0 > 0
+  #define THERMISTORHEATER_0 TEMP_SENSOR_0
+  #define HEATER_0_USES_THERMISTOR
+#endif
+#if TEMP_SENSOR_1 > 0
+  #define THERMISTORHEATER_1 TEMP_SENSOR_1
+  #define HEATER_1_USES_THERMISTOR
+#endif
+#if TEMP_SENSOR_2 > 0
+  #define THERMISTORHEATER_2 TEMP_SENSOR_2
+  #define HEATER_2_USES_THERMISTOR
+#endif
+#if TEMP_SENSOR_BED > 0
+  #define THERMISTORBED TEMP_SENSOR_BED
+  #define BED_USES_THERMISTOR
+#endif
+#if TEMP_SENSOR_0 == -1
+  #define HEATER_0_USES_AD595
+#endif
+#if TEMP_SENSOR_1 == -1
+  #define HEATER_1_USES_AD595
+#endif
+#if TEMP_SENSOR_2 == -1
+  #define HEATER_2_USES_AD595
+#endif
+#if TEMP_SENSOR_BED == -1
+  #define BED_USES_AD595
+#endif
+#if TEMP_SENSOR_0 == -2
+  #define HEATER_0_USES_MAX6675
+#endif
+#if TEMP_SENSOR_0 == 0
+  #undef HEATER_0_MINTEMP
+  #undef HEATER_0_MAXTEMP
+#endif
+#if TEMP_SENSOR_1 == 0
+  #undef HEATER_1_MINTEMP
+  #undef HEATER_1_MAXTEMP
+#endif
+#if TEMP_SENSOR_2 == 0
+  #undef HEATER_2_MINTEMP
+  #undef HEATER_2_MAXTEMP
+#endif
+#if TEMP_SENSOR_BED == 0
+  #undef BED_MINTEMP
+  #undef BED_MAXTEMP
+#endif
+
+
+#endif //__CONFIGURATION_ADV_H
diff --git a/Marlin/language.h b/Marlin/language.h
index 3e6e170..2e54a88 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -1,42 +1,46 @@
 #ifndef LANGUAGE_H
 #define LANGUAGE_H
 
-// NOTE: IF YOU CHANGE THIS FILE / MERGE THIS FILE WITH CHANGES
+// NOTE: IF YOU CHANGE LANGUAGE FILES OR MERGE A FILE WITH CHANGES
 //
 //   ==> ALWAYS TRY TO COMPILE MARLIN WITH/WITHOUT "ULTIPANEL" / "ULTRALCD" / "SDSUPPORT" #define IN "Configuration.h" 
 //   ==> ALSO TRY ALL AVAILABLE "LANGUAGE_CHOICE" OPTIONS
 
 // Languages
-// 1  English
-// 2  Polish
-// 3  French
-// 4  German
-// 5  Spanish
-// 6  Russian
-// 7  Italian
-// 8  Portuguese
-// 9  Finnish
-// 10 Aragonese
-// 11 Dutch
-// 12 Catalan
-// 13 Basque-Euskera
+// en English
+// pl Polish
+// fr French
+// de German
+// es Spanish
+// ru Russian
+// it Italian
+// pt Portuguese
+// fi Finnish
+// an Aragonese
+// nl Dutch
+// ca Catalan
+// eu Basque-Euskera
 
 #ifndef LANGUAGE_CHOICE
-	#define LANGUAGE_CHOICE 1  // Pick your language from the list above
+	#define LANGUAGE_CHOICE en  // Pick your language from the list above
+#endif
+
+#if LANGUAGE_CHOICE >= 1
+  #error "Languages now uses ISO language codes instead of numbers."
 #endif
 
 #define PROTOCOL_VERSION "1.0"
 
-#if MOTHERBOARD == 7 || MOTHERBOARD == 71 || MOTHERBOARD == 72
+#if MB(ULTIMAKER)|| MB(ULTIMAKER_OLD)|| MB(ULTIMAIN_2)
 	#define MACHINE_NAME "Ultimaker"
 	#define FIRMWARE_URL "http://firmware.ultimaker.com"
-#elif MOTHERBOARD == 80
+#elif MB(RUMBA)
 	#define MACHINE_NAME "Rumba"
 	#define FIRMWARE_URL "https://github.com/ErikZalm/Marlin/"
-#elif MOTHERBOARD == 77
+#elif MB(3DRAG)
 	#define MACHINE_NAME "3Drag"
 	#define FIRMWARE_URL "http://3dprint.elettronicain.it/"
-#elif MOTHERBOARD == 88
+#elif MB(5DPRINT)
 	#define MACHINE_NAME "Makibox"
 	#define FIRMWARE_URL "https://github.com/ErikZalm/Marlin/"
 #else
@@ -61,1758 +65,116 @@
 
 
 // Common LCD messages
-/* nothing here as of yet */
+
+  /* nothing here yet */
 
 // Common serial messages
 #define MSG_MARLIN "Marlin"
 
-
 // Serial Console Messages (do not translate those!)
 
-#define MSG_Enqueing "enqueing \""
-#define MSG_POWERUP "PowerUp"
-#define MSG_EXTERNAL_RESET " External Reset"
-#define MSG_BROWNOUT_RESET " Brown out Reset"
-#define MSG_WATCHDOG_RESET " Watchdog Reset"
-#define MSG_SOFTWARE_RESET " Software Reset"
-#define MSG_AUTHOR " | Author: "
-#define MSG_CONFIGURATION_VER " Last Updated: "
-#define MSG_FREE_MEMORY " Free Memory: "
-#define MSG_PLANNER_BUFFER_BYTES "  PlannerBufferBytes: "
-#define MSG_OK "ok"
-#define MSG_FILE_SAVED "Done saving file."
-#define MSG_ERR_LINE_NO "Line Number is not Last Line Number+1, Last Line: "
-#define MSG_ERR_CHECKSUM_MISMATCH "checksum mismatch, Last Line: "
-#define MSG_ERR_NO_CHECKSUM "No Checksum with line number, Last Line: "
+#define MSG_Enqueing                        "enqueing \""
+#define MSG_POWERUP                         "PowerUp"
+#define MSG_EXTERNAL_RESET                  " External Reset"
+#define MSG_BROWNOUT_RESET                  " Brown out Reset"
+#define MSG_WATCHDOG_RESET                  " Watchdog Reset"
+#define MSG_SOFTWARE_RESET                  " Software Reset"
+#define MSG_AUTHOR                          " | Author: "
+#define MSG_CONFIGURATION_VER               " Last Updated: "
+#define MSG_FREE_MEMORY                     " Free Memory: "
+#define MSG_PLANNER_BUFFER_BYTES            "  PlannerBufferBytes: "
+#define MSG_OK                              "ok"
+#define MSG_FILE_SAVED                      "Done saving file."
+#define MSG_ERR_LINE_NO                     "Line Number is not Last Line Number+1, Last Line: "
+#define MSG_ERR_CHECKSUM_MISMATCH           "checksum mismatch, Last Line: "
+#define MSG_ERR_NO_CHECKSUM                 "No Checksum with line number, Last Line: "
 #define MSG_ERR_NO_LINENUMBER_WITH_CHECKSUM "No Line Number with checksum, Last Line: "
-#define MSG_FILE_PRINTED "Done printing file"
-#define MSG_BEGIN_FILE_LIST "Begin file list"
-#define MSG_END_FILE_LIST "End file list"
-#define MSG_M104_INVALID_EXTRUDER "M104 Invalid extruder "
-#define MSG_M105_INVALID_EXTRUDER "M105 Invalid extruder "
-#define MSG_M200_INVALID_EXTRUDER "M200 Invalid extruder "
-#define MSG_M218_INVALID_EXTRUDER "M218 Invalid extruder "
-#define MSG_M221_INVALID_EXTRUDER "M221 Invalid extruder "
-#define MSG_ERR_NO_THERMISTORS "No thermistors - no temperature"
-#define MSG_M109_INVALID_EXTRUDER "M109 Invalid extruder "
-#define MSG_HEATING "Heating..."
-#define MSG_HEATING_COMPLETE "Heating done."
-#define MSG_BED_HEATING "Bed Heating."
-#define MSG_BED_DONE "Bed done."
-#define MSG_M115_REPORT "FIRMWARE_NAME:Marlin V1; Sprinter/grbl mashup for gen6 FIRMWARE_URL:" FIRMWARE_URL " PROTOCOL_VERSION:" PROTOCOL_VERSION " MACHINE_TYPE:" MACHINE_NAME " EXTRUDER_COUNT:" STRINGIFY(EXTRUDERS) " UUID:" MACHINE_UUID "\n"
-#define MSG_COUNT_X " Count X: "
-#define MSG_ERR_KILLED "Printer halted. kill() called!"
-#define MSG_ERR_STOPPED "Printer stopped due to errors. Fix the error and use M999 to restart. (Temperature is reset. Set it after restarting)"
-#define MSG_RESEND "Resend: "
-#define MSG_UNKNOWN_COMMAND "Unknown command: \""
-#define MSG_ACTIVE_EXTRUDER "Active Extruder: "
-#define MSG_INVALID_EXTRUDER "Invalid extruder"
-#define MSG_X_MIN "x_min: "
-#define MSG_X_MAX "x_max: "
-#define MSG_Y_MIN "y_min: "
-#define MSG_Y_MAX "y_max: "
-#define MSG_Z_MIN "z_min: "
-#define MSG_Z_MAX "z_max: "
-#define MSG_M119_REPORT "Reporting endstop status"
-#define MSG_ENDSTOP_HIT "TRIGGERED"
-#define MSG_ENDSTOP_OPEN "open"
-#define MSG_HOTEND_OFFSET "Hotend offsets:"
-
-#define MSG_SD_CANT_OPEN_SUBDIR "Cannot open subdir"
-#define MSG_SD_INIT_FAIL "SD init fail"
-#define MSG_SD_VOL_INIT_FAIL "volume.init failed"
-#define MSG_SD_OPENROOT_FAIL "openRoot failed"
-#define MSG_SD_CARD_OK "SD card ok"
-#define MSG_SD_WORKDIR_FAIL "workDir open failed"
-#define MSG_SD_OPEN_FILE_FAIL "open failed, File: "
-#define MSG_SD_FILE_OPENED "File opened: "
-#define MSG_SD_SIZE " Size: "
-#define MSG_SD_FILE_SELECTED "File selected"
-#define MSG_SD_WRITE_TO_FILE "Writing to file: "
-#define MSG_SD_PRINTING_BYTE "SD printing byte "
-#define MSG_SD_NOT_PRINTING "Not SD printing"
-#define MSG_SD_ERR_WRITE_TO_FILE "error writing to file"
-#define MSG_SD_CANT_ENTER_SUBDIR "Cannot enter subdir: "
-
-#define MSG_STEPPER_TOO_HIGH "Steprate too high: "
-#define MSG_ENDSTOPS_HIT "endstops hit: "
-#define MSG_ERR_COLD_EXTRUDE_STOP " cold extrusion prevented"
-#define MSG_ERR_LONG_EXTRUDE_STOP " too long extrusion prevented"
-#define MSG_BABYSTEPPING_X "Babystepping X"
-#define MSG_BABYSTEPPING_Y "Babystepping Y"
-#define MSG_BABYSTEPPING_Z "Babystepping Z"
-#define MSG_SERIAL_ERROR_MENU_STRUCTURE "Error in menu structure"
-
-#if LANGUAGE_CHOICE == 1
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " ready."
-	#define MSG_SD_INSERTED "Card inserted"
-	#define MSG_SD_REMOVED "Card removed"
-	#define MSG_MAIN "Main"
-	#define MSG_AUTOSTART "Autostart"
-	#define MSG_DISABLE_STEPPERS "Disable steppers"
-	#define MSG_AUTO_HOME "Auto home"
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN "Set origin"
-	#define MSG_PREHEAT_PLA "Preheat PLA"
-	#define MSG_PREHEAT_PLA0 "Preheat PLA 1"
-	#define MSG_PREHEAT_PLA1 "Preheat PLA 2"
-	#define MSG_PREHEAT_PLA2 "Preheat PLA 3"
-	#define MSG_PREHEAT_PLA012 "Preheat PLA All"
-	#define MSG_PREHEAT_PLA_BEDONLY "Preheat PLA Bed"
-	#define MSG_PREHEAT_PLA_SETTINGS "Preheat PLA conf"
-	#define MSG_PREHEAT_ABS "Preheat ABS"
-	#define MSG_PREHEAT_ABS0 "Preheat ABS 1"
-	#define MSG_PREHEAT_ABS1 "Preheat ABS 2"
-	#define MSG_PREHEAT_ABS2 "Preheat ABS 3"
-	#define MSG_PREHEAT_ABS012 "Preheat ABS All"
-	#define MSG_PREHEAT_ABS_BEDONLY "Preheat ABS Bed"
-	#define MSG_PREHEAT_ABS_SETTINGS "Preheat ABS conf"
-	#define MSG_COOLDOWN "Cooldown"
-	#define MSG_SWITCH_PS_ON "Switch power on"
-	#define MSG_SWITCH_PS_OFF "Switch power off"
-	#define MSG_EXTRUDE "Extrude"
-	#define MSG_RETRACT "Retract"
-	#define MSG_MOVE_AXIS "Move axis"
-	#define MSG_MOVE_X "Move X"
-	#define MSG_MOVE_Y "Move Y"
-	#define MSG_MOVE_Z "Move Z"
-	#define MSG_MOVE_E "Extruder"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Move 0.1mm"
-	#define MSG_MOVE_1MM "Move 1mm"
-	#define MSG_MOVE_10MM "Move 10mm"
-	#define MSG_SPEED "Speed"
-	#define MSG_NOZZLE "Nozzle"
-	#define MSG_NOZZLE1 "Nozzle2"
-	#define MSG_NOZZLE2 "Nozzle3"
-	#define MSG_BED "Bed"
-	#define MSG_FAN_SPEED "Fan speed"
-	#define MSG_FLOW "Flow"
-	#define MSG_FLOW0 "Flow 0"
-	#define MSG_FLOW1 "Flow 1"
-	#define MSG_FLOW2 "Flow 2"
-	#define MSG_CONTROL "Control"
-	#define MSG_MIN " \002 Min"
-	#define MSG_MAX " \002 Max"
-	#define MSG_FACTOR " \002 Fact"
-	#define MSG_AUTOTEMP "Autotemp"
-	#define MSG_ON "On "
-	#define MSG_OFF "Off"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Accel"
-	#define MSG_VXY_JERK "Vxy-jerk"
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ve-jerk"
-	#define MSG_VMAX "Vmax "
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "VTrav min"
-	#define MSG_AMAX "Amax "
-	#define MSG_A_RETRACT "A-retract"
-	#define MSG_XSTEPS "Xsteps/mm"
-	#define MSG_YSTEPS "Ysteps/mm"
-	#define MSG_ZSTEPS "Zsteps/mm"
-	#define MSG_ESTEPS "Esteps/mm"
-	#define MSG_RECTRACT "Rectract"
-	#define MSG_TEMPERATURE "Temperature"
-	#define MSG_MOTION "Motion"
-	#define MSG_CONTRAST "LCD contrast"
-	#define MSG_STORE_EPROM "Store memory"
-	#define MSG_LOAD_EPROM "Load memory"
-	#define MSG_RESTORE_FAILSAFE "Restore failsafe"
-	#define MSG_REFRESH "Refresh"
-	#define MSG_WATCH "Info screen"
-	#define MSG_PREPARE "Prepare"
-	#define MSG_TUNE "Tune"
-	#define MSG_PAUSE_PRINT "Pause print"
-	#define MSG_RESUME_PRINT "Resume print"
-	#define MSG_STOP_PRINT "Stop print"
-	#define MSG_CARD_MENU "Print from SD"
-	#define MSG_NO_CARD "No SD card"
-	#define MSG_DWELL "Sleep..."
-	#define MSG_USERWAIT "Wait for user..."
-	#define MSG_RESUMING "Resuming print"
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "No move."
-	#define MSG_KILLED "KILLED. "
-	#define MSG_STOPPED "STOPPED. "
-	#define MSG_CONTROL_RETRACT  "Retract mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Swap Re.mm"
-	#define MSG_CONTROL_RETRACTF "Retract  V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Hop mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "S UnRet+mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "UnRet  V"
-	#define MSG_AUTORETRACT "AutoRetr."
-	#define MSG_FILAMENTCHANGE "Change filament"
-	#define MSG_INIT_SDCARD "Init. SD card"
-	#define MSG_CNG_SDCARD "Change SD card"
-	#define MSG_ZPROBE_OUT "Z probe out. bed"
-	#define MSG_POSITION_UNKNOWN "Home X/Y before Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-
-#endif
-
-
-#if LANGUAGE_CHOICE == 2
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " gotowy."
-	#define MSG_SD_INSERTED "Karta wlozona"
-	#define MSG_SD_REMOVED "Karta usunieta"
-	#define MSG_MAIN "Menu glowne"
-	#define MSG_AUTOSTART "Autostart"
-	#define MSG_DISABLE_STEPPERS "Wylacz silniki"
-	#define MSG_AUTO_HOME "Auto. poz. zerowa"
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN "Ustaw punkt zero"
-	#define MSG_PREHEAT_PLA "Rozgrzej PLA"
-	#define MSG_PREHEAT_PLA0 "Rozgrzej PLA 1"
-	#define MSG_PREHEAT_PLA1 "Rozgrzej PLA 2"
-	#define MSG_PREHEAT_PLA2 "Rozgrzej PLA 3"
-	#define MSG_PREHEAT_PLA012 "Roz. PLA Wszystko"
-	#define MSG_PREHEAT_PLA_BEDONLY "Rozgrzej PLA Loze"
-	#define MSG_PREHEAT_PLA_SETTINGS "Ustaw. rozg. PLA"
-	#define MSG_PREHEAT_ABS "Rozgrzej ABS"
-	#define MSG_PREHEAT_ABS0 "Rozgrzej ABS 1"
-	#define MSG_PREHEAT_ABS1 "Rozgrzej ABS 2"
-	#define MSG_PREHEAT_ABS2 "Rozgrzej ABS 3"
-	#define MSG_PREHEAT_ABS012 "Roz. ABS Wszystko"
-	#define MSG_PREHEAT_ABS_BEDONLY "Rozgrzej ABS Loze"
-	#define MSG_PREHEAT_ABS_SETTINGS "Ustaw. rozg. ABS"
-	#define MSG_COOLDOWN "Chlodzenie"
-	#define MSG_SWITCH_PS_ON "Wlacz zasilacz"
-	#define MSG_SWITCH_PS_OFF "Wylacz zasilacz"
-	#define MSG_EXTRUDE "Ekstruzja"
-	#define MSG_RETRACT "Cofanie"
-	#define MSG_MOVE_AXIS "Ruch osi"
-	#define MSG_MOVE_X "Przesun w X"
-	#define MSG_MOVE_Y "Przesun w Y"
-	#define MSG_MOVE_Z "Przesun w Z"
-	#define MSG_MOVE_E "Ekstruzja (os E)"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Przesuwaj co .1mm"
-	#define MSG_MOVE_1MM "Przesuwaj co 1mm"
-	#define MSG_MOVE_10MM "Przesuwaj co 10mm"
-	#define MSG_SPEED "Predkosc"
-	#define MSG_NOZZLE "Dysza"
-	#define MSG_NOZZLE1 "Dysza 2"
-	#define MSG_NOZZLE2 "Dysza 3"
-	#define MSG_BED "Loze"
-	#define MSG_FAN_SPEED "Obroty wiatraka"
-	#define MSG_FLOW "Przeplyw"
-	#define MSG_FLOW0 "Przeplyw 0"
-	#define MSG_FLOW1 "Przeplyw 1"
-	#define MSG_FLOW2 "Przeplyw 2"
-	#define MSG_CONTROL "Kontrola"
-	#define MSG_MIN " \002 Min"
-	#define MSG_MAX " \002 Max"
-	#define MSG_FACTOR " \002 Mnoznik"
-	#define MSG_AUTOTEMP "Auto. temperatura"
-	#define MSG_ON "Wl. "
-	#define MSG_OFF "Wyl."
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Przyspieszenie"
-	#define MSG_VXY_JERK "Zryw Vxy"
-	#define MSG_VZ_JERK "Zryw Vz"
-	#define MSG_VE_JERK "Zryw Ve"
-	#define MSG_VMAX "Vmax"
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "Vskok min"
-	#define MSG_AMAX "Amax"
-	#define MSG_A_RETRACT "A-wycofanie"
-	#define MSG_XSTEPS "krokiX/mm"
-	#define MSG_YSTEPS "krokiY/mm"
-	#define MSG_ZSTEPS "krokiZ/mm"
-	#define MSG_ESTEPS "krokiE/mm"
-	#define MSG_RECTRACT "Wycofanie"
-	#define MSG_TEMPERATURE "Temperatura"
-	#define MSG_MOTION "Ruch"
-	#define MSG_CONTRAST "Kontrast LCD"
-	#define MSG_STORE_EPROM "Zapisz w pamieci"
-	#define MSG_LOAD_EPROM "Wczytaj z pamieci"
-	#define MSG_RESTORE_FAILSAFE "Ustaw. fabryczne"
-	#define MSG_REFRESH "\004Odswiez"
-	#define MSG_WATCH "Ekran glowny"
-	#define MSG_PREPARE "Przygotuj"
-	#define MSG_CONTROL "Ustawienia"
-	#define MSG_TUNE "Strojenie"
-	#define MSG_PAUSE_PRINT "Pauza"
-	#define MSG_RESUME_PRINT "Wznowienie"
-	#define MSG_STOP_PRINT "Stop"
-	#define MSG_CARD_MENU "Menu karty SD"
-	#define MSG_NO_CARD "Brak karty"
-	#define MSG_DWELL "Uspij..."
-	#define MSG_USERWAIT "Oczekiwanie..."
-	#define MSG_RESUMING "Wznawianie druku"
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Brak ruchu"
-	#define MSG_KILLED "Ubity. "
-	#define MSG_STOPPED "Zatrzymany. "
-	#define MSG_STEPPER_RELEASED "Zwolniony."
-	#define MSG_CONTROL_RETRACT  "Wycofaj mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Z Wycof. mm"
-	#define MSG_CONTROL_RETRACTF "Wycofaj  V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Skok Z mm:"
-	#define MSG_CONTROL_RETRACT_RECOVER "Cof. wycof. +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Z Cof. wyc. +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "Cof. wycof.  V"
-	#define MSG_AUTORETRACT "Auto. wycofanie"
-	#define MSG_FILAMENTCHANGE "Zmien filament"
-	#define MSG_INIT_SDCARD "Inicjal. karty SD"
-	#define MSG_CNG_SDCARD "Zmiana karty SD"
-	#define MSG_ZPROBE_OUT "Sonda Z za lozem"
-	#define MSG_POSITION_UNKNOWN "Wroc w XY przed Z"
-	#define MSG_ZPROBE_ZOFFSET "Offset Z"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Blad wyl. kranc."
-	#define MSG_CONTRAST "Kontrast"
-
-#endif
-
-
-#if LANGUAGE_CHOICE == 3
+#define MSG_FILE_PRINTED                    "Done printing file"
+#define MSG_BEGIN_FILE_LIST                 "Begin file list"
+#define MSG_END_FILE_LIST                   "End file list"
+#define MSG_M104_INVALID_EXTRUDER           "M104 Invalid extruder "
+#define MSG_M105_INVALID_EXTRUDER           "M105 Invalid extruder "
+#define MSG_M200_INVALID_EXTRUDER           "M200 Invalid extruder "
+#define MSG_M218_INVALID_EXTRUDER           "M218 Invalid extruder "
+#define MSG_M221_INVALID_EXTRUDER           "M221 Invalid extruder "
+#define MSG_ERR_NO_THERMISTORS              "No thermistors - no temperature"
+#define MSG_M109_INVALID_EXTRUDER           "M109 Invalid extruder "
+#define MSG_HEATING                         "Heating..."
+#define MSG_HEATING_COMPLETE                "Heating done."
+#define MSG_BED_HEATING                     "Bed Heating."
+#define MSG_BED_DONE                        "Bed done."
+#define MSG_M115_REPORT                     "FIRMWARE_NAME:Marlin V1; Sprinter/grbl mashup for gen6 FIRMWARE_URL:" FIRMWARE_URL " PROTOCOL_VERSION:" PROTOCOL_VERSION " MACHINE_TYPE:" MACHINE_NAME " EXTRUDER_COUNT:" STRINGIFY(EXTRUDERS) " UUID:" MACHINE_UUID "\n"
+#define MSG_COUNT_X                         " Count X: "
+#define MSG_ERR_KILLED                      "Printer halted. kill() called!"
+#define MSG_ERR_STOPPED                     "Printer stopped due to errors. Fix the error and use M999 to restart. (Temperature is reset. Set it after restarting)"
+#define MSG_RESEND                          "Resend: "
+#define MSG_UNKNOWN_COMMAND                 "Unknown command: \""
+#define MSG_ACTIVE_EXTRUDER                 "Active Extruder: "
+#define MSG_INVALID_EXTRUDER                "Invalid extruder"
+#define MSG_X_MIN                           "x_min: "
+#define MSG_X_MAX                           "x_max: "
+#define MSG_Y_MIN                           "y_min: "
+#define MSG_Y_MAX                           "y_max: "
+#define MSG_Z_MIN                           "z_min: "
+#define MSG_Z_MAX                           "z_max: "
+#define MSG_M119_REPORT                     "Reporting endstop status"
+#define MSG_ENDSTOP_HIT                     "TRIGGERED"
+#define MSG_ENDSTOP_OPEN                    "open"
+#define MSG_HOTEND_OFFSET                   "Hotend offsets:"
+
+#define MSG_SD_CANT_OPEN_SUBDIR             "Cannot open subdir"
+#define MSG_SD_INIT_FAIL                    "SD init fail"
+#define MSG_SD_VOL_INIT_FAIL                "volume.init failed"
+#define MSG_SD_OPENROOT_FAIL                "openRoot failed"
+#define MSG_SD_CARD_OK                      "SD card ok"
+#define MSG_SD_WORKDIR_FAIL                 "workDir open failed"
+#define MSG_SD_OPEN_FILE_FAIL               "open failed, File: "
+#define MSG_SD_FILE_OPENED                  "File opened: "
+#define MSG_SD_SIZE                         " Size: "
+#define MSG_SD_FILE_SELECTED                "File selected"
+#define MSG_SD_WRITE_TO_FILE                "Writing to file: "
+#define MSG_SD_PRINTING_BYTE                "SD printing byte "
+#define MSG_SD_NOT_PRINTING                 "Not SD printing"
+#define MSG_SD_ERR_WRITE_TO_FILE            "error writing to file"
+#define MSG_SD_CANT_ENTER_SUBDIR 			"Cannot enter subdir: "
+
+#define MSG_STEPPER_TOO_HIGH                "Steprate too high: "
+#define MSG_ENDSTOPS_HIT                    "endstops hit: "
+#define MSG_ERR_COLD_EXTRUDE_STOP           " cold extrusion prevented"
+#define MSG_ERR_LONG_EXTRUDE_STOP           " too long extrusion prevented"
+#define MSG_BABYSTEPPING_X                  "Babystepping X"
+#define MSG_BABYSTEPPING_Y                  "Babystepping Y"
+#define MSG_BABYSTEPPING_Z                  "Babystepping Z"
+#define MSG_SERIAL_ERROR_MENU_STRUCTURE		"Error in menu structure"
 
 // LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " prete."
-	#define MSG_SD_INSERTED "Carte inseree"
-	#define MSG_SD_REMOVED "Carte retiree"
-	#define MSG_MAIN "Menu principal"
-	#define MSG_AUTOSTART "Demarrage auto"
-	#define MSG_DISABLE_STEPPERS "Arreter moteurs"
-	#define MSG_AUTO_HOME "Home auto."
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN "Regler origine"
-	#define MSG_PREHEAT_PLA " Prechauffage PLA"
-	#define MSG_PREHEAT_PLA0 "Prechauff. PLA 1"
-    #define MSG_PREHEAT_PLA1 "Prechauff. PLA 2"
-	#define MSG_PREHEAT_PLA2 "Prechauff. PLA 3"
-	#define MSG_PREHEAT_PLA012 "Prech. PLA Tout"
-	#define MSG_PREHEAT_PLA_BEDONLY "Prech. PLA Plateau"
-	#define MSG_PREHEAT_PLA_SETTINGS "Regl. prech. PLA"
-	#define MSG_PREHEAT_ABS "Prechauffage ABS"
-	#define MSG_PREHEAT_ABS0 "Prechauff. ABS 1"
-	#define MSG_PREHEAT_ABS1 "Prechauff. ABS 2"
-	#define MSG_PREHEAT_ABS2 "Prechauff. ABS 3"
-	#define MSG_PREHEAT_ABS012 "Prech. ABS Tout"
-	#define MSG_PREHEAT_ABS_BEDONLY "Prech. ABS Plateau"
-	#define MSG_PREHEAT_ABS_SETTINGS "Regl. prech. ABS"
-	#define MSG_COOLDOWN "Refroidir"
-	#define MSG_SWITCH_PS_ON "Allumer alim."
-	#define MSG_SWITCH_PS_OFF "Eteindre alim."
-	#define MSG_EXTRUDE "Extrusion"
-	#define MSG_RETRACT "Retraction"
-	#define MSG_PREHEAT_PLA "Prechauffage PLA"
-	#define MSG_PREHEAT_ABS "Prechauffage ABS"
-	#define MSG_MOVE_AXIS "Deplacer un axe"
-	#define MSG_MOVE_X "Move X"
-	#define MSG_MOVE_Y "Move Y"
-	#define MSG_MOVE_Z "Move Z"
-	#define MSG_MOVE_E "Extruder"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Move 0.1mm"
-	#define MSG_MOVE_1MM "Move 1mm"
-	#define MSG_MOVE_10MM "Move 10mm"
-	#define MSG_SPEED " Vitesse"
-	#define MSG_NOZZLE "Buse"
-	#define MSG_NOZZLE1 "Buse2"
-	#define MSG_NOZZLE2 "Buse3"
-	#define MSG_BED "Plateau"
-	#define MSG_FAN_SPEED "Vite. ventilateur"
-	#define MSG_FLOW "Flux"
-	#define MSG_FLOW0 "Flux 0"
-	#define MSG_FLOW1 "Flux 1"
-	#define MSG_FLOW2 "Flux 2"
-	#define MSG_CONTROL "Controler"
-	#define MSG_MIN " \002 Min"
-	#define MSG_MAX " \002 Max"
-	#define MSG_FACTOR " \002 Facteur"
-	#define MSG_AUTOTEMP "Temp. Auto."
-	#define MSG_ON "Marche "
-	#define MSG_OFF "Arret"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC "Accel"
-	#define MSG_VXY_JERK "Vxy-jerk"
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ve-jerk"
-	#define MSG_VMAX "Vmax"
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "Vdepl min"
-	#define MSG_AMAX "Amax "
-	#define MSG_A_RETRACT "A-retract"
-	#define MSG_XSTEPS "Xpas/mm"
-	#define MSG_YSTEPS "Ypas/mm"
-	#define MSG_ZSTEPS "Zpas/mm"
-	#define MSG_ESTEPS "Epas/mm"
-	#define MSG_TEMPERATURE "Temperature"
-	#define MSG_MOTION "Mouvement"
-	#define MSG_CONTRAST "Contraste LCD"
-	#define MSG_STORE_EPROM "Sauver config"
-	#define MSG_LOAD_EPROM "Lire config"
-	#define MSG_RESTORE_FAILSAFE "Restaurer defauts"
-	#define MSG_REFRESH "Actualiser"
-	#define MSG_WATCH "Surveiller"
-	#define MSG_PREPARE "Preparer"
-	#define MSG_TUNE "Regler"
-	#define MSG_PAUSE_PRINT "Interrompre impr."
-	#define MSG_RESUME_PRINT "Reprendre impr."
-	#define MSG_STOP_PRINT "Arreter impr."
-	#define MSG_CARD_MENU "Impr. depuis SD"
-	#define MSG_NO_CARD "Pas de carte"
-	#define MSG_DWELL "Repos..."
-	#define MSG_USERWAIT "Atten. de l'util."
-	#define MSG_RESUMING "Repri. de l'impr."
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Aucun mouvement."
-	#define MSG_KILLED "MORT."
-	#define MSG_STOPPED "STOPPE."
-	#define MSG_STEPPER_RELEASED "RELACHE."
-	#define MSG_CONTROL_RETRACT "Retraction mm"
-	#define MSG_CONTROL_RETRACT_SWAP "Ech. Retr. mm"
-	#define MSG_CONTROL_RETRACTF "Retraction V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Hop mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Ech. UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "UnRet V"
-	#define MSG_AUTORETRACT "Retract. Auto."
-	#define MSG_FILAMENTCHANGE "Changer filament"
-	#define MSG_INIT_SDCARD "Init. la carte SD"
-	#define MSG_CNG_SDCARD "Changer de carte"
-	#define MSG_ZPROBE_OUT "Z sonde exte. lit"
-	#define MSG_POSITION_UNKNOWN "Rev. dans XY av.Z"
-	#define MSG_ZPROBE_ZOFFSET "Offset Z"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Butee abandon"
-	#define MSG_CONTRAST "Contrast"
-
-#endif
-
-
-#if LANGUAGE_CHOICE == 4
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " Bereit."
-
-	#define MSG_SD_INSERTED      "SDKarte erkannt"
-	#define MSG_SD_REMOVED       "SDKarte entfernt"
-	#define MSG_MAIN             "Hauptmenü"
-	#define MSG_AUTOSTART        "Autostart"
-	#define MSG_DISABLE_STEPPERS "Stepper abschalt."
-	#define MSG_AUTO_HOME        "Auto Nullpunkt"
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN       "Setze Nullpunkt"
-	#define MSG_PREHEAT_PLA      "Vorwärmen PLA"
-	#define MSG_PREHEAT_PLA0     "Vorwärmen PLA 1"
-	#define MSG_PREHEAT_PLA1     "Vorwärmen PLA 2"
-	#define MSG_PREHEAT_PLA2     "Vorwärmen PLA 3"
-	#define MSG_PREHEAT_PLA012   "Vorw. PLA Alle"
-	#define MSG_PREHEAT_PLA_BEDONLY "Vorw. PLA Bett"
-	#define MSG_PREHEAT_PLA_SETTINGS "Vorwärm. PLA Ein."
-	#define MSG_PREHEAT_ABS      "Vorwärmen ABS"
-	#define MSG_PREHEAT_ABS0     "Vorwärmen ABS 1"
-	#define MSG_PREHEAT_ABS1     "Vorwärmen ABS 2"
-	#define MSG_PREHEAT_ABS2     "Vorwärmen ABS 3"
-	#define MSG_PREHEAT_ABS012   "Vorw. ABS Alle"
-	#define MSG_PREHEAT_ABS_BEDONLY "Vorw. ABS Bett"
-	#define MSG_PREHEAT_ABS_SETTINGS "Vorwärm. ABS Ein."
-	#define MSG_COOLDOWN         "Abkühlen"
-	#define MSG_SWITCH_PS_ON     "Switch Power On"
-	#define MSG_SWITCH_PS_OFF    "Switch Power Off"
-	#define MSG_EXTRUDE          "Extrude"
-	#define MSG_RETRACT          "Retract"
-	#define MSG_MOVE_AXIS        "Achsen bewegen"
-	#define MSG_MOVE_X           "X bewegen"
-	#define MSG_MOVE_Y           "Y bewegen"
-	#define MSG_MOVE_Z           "Z bewegen"
-	#define MSG_MOVE_E           "Extruder"
-	#define MSG_MOVE_E1 		 "Extruder2"
-	#define MSG_MOVE_E2 		 "Extruder3"
-	#define MSG_MOVE_01MM        "0.1mm bewegen"
-	#define MSG_MOVE_1MM         "1mm bewegen"
-	#define MSG_MOVE_10MM        "10mm bewegen"
-	#define MSG_SPEED            "Geschw"
-	#define MSG_NOZZLE           "Düse"
-	#define MSG_NOZZLE1          "Düse2"
-	#define MSG_NOZZLE2          "Düse3"
-	#define MSG_BED              "Bett"
-	#define MSG_FAN_SPEED        "Lüftergeschw."
-	#define MSG_FLOW             "Fluss"
-	#define MSG_FLOW0            "Fluss 0"
-	#define MSG_FLOW1            "Fluss 1"
-	#define MSG_FLOW2            "Fluss 2"
-	#define MSG_CONTROL          "Einstellungen"
-	#define MSG_MIN              "\002 Min"
-	#define MSG_MAX              "\002 Max"
-	#define MSG_FACTOR           "\002 Faktor"
-	#define MSG_AUTOTEMP         "AutoTemp"
-	#define MSG_ON               "Ein"
-	#define MSG_OFF              "Aus"
-	#define MSG_PID_P            "PID-P"
-	#define MSG_PID_I            "PID-I"
-	#define MSG_PID_D            "PID-D"
-	#define MSG_PID_C            "PID-C"
-	#define MSG_ACC              "Acc"
-	#define MSG_VXY_JERK         "Vxy-jerk"
-	#define MSG_VZ_JERK          "Vz-jerk"
-	#define MSG_VE_JERK          "Ve-jerk"
-	#define MSG_VMAX             "Vmax "
-	#define MSG_X                "x"
-	#define MSG_Y                "y"
-	#define MSG_Z                "z"
-	#define MSG_E                "e"
-	#define MSG_VMIN             "Vmin"
-	#define MSG_VTRAV_MIN        "VTrav min"
-	#define MSG_AMAX             "Amax "
-	#define MSG_A_RETRACT        "A-Retract"
-	#define MSG_XSTEPS           "Xsteps/mm"
-	#define MSG_YSTEPS           "Ysteps/mm"
-	#define MSG_ZSTEPS           "Zsteps/mm"
-	#define MSG_ESTEPS           "Esteps/mm"
-	#define MSG_RECTRACT_WIDE    "Rectract"
-	#define MSG_WATCH            "Beobachten"
-	#define MSG_TEMPERATURE      "Temperatur"
-	#define MSG_MOTION           "Bewegung"
-	#define MSG_CONTRAST "LCD contrast"
-	#define MSG_STORE_EPROM      "EPROM speichern"
-	#define MSG_LOAD_EPROM       "EPROM laden"
-	#define MSG_RESTORE_FAILSAFE "Standardkonfig."
-	#define MSG_REFRESH          "Aktualisieren"
-	#define MSG_PREPARE          "Vorbereitung"
-	#define MSG_CONTROL          "Einstellungen"
-	#define MSG_TUNE             "Justierung"
-	#define MSG_PAUSE_PRINT      "Druck anhalten"
-	#define MSG_RESUME_PRINT     "Druck fortsetz"
-	#define MSG_STOP_PRINT       "Druck stoppen"
-	#define MSG_CARD_MENU        "SDKarten Menü"
-	#define MSG_NO_CARD          "Keine SDKarte"
-	#define MSG_DWELL            "Warten..."
-	#define MSG_USERWAIT         "Warte auf Nutzer"
-	#define MSG_RESUMING         "Druck fortsetzung"
-	#define MSG_PRINT_ABORTED    "Print aborted"
-	#define MSG_NO_MOVE          "Kein Zug."
-	#define MSG_KILLED           "KILLED"
-	#define MSG_STOPPED          "GESTOPPT"
-	#define MSG_STEPPER_RELEASED "Stepper frei"
-	#define MSG_CONTROL_RETRACT  "Retract mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Wechs. Retract mm"
-	#define MSG_CONTROL_RETRACTF "Retract  V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Hop mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Wechs. UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "UnRet  V"
-	#define MSG_AUTORETRACT      "AutoRetr."
-	#define MSG_FILAMENTCHANGE "Filament wechseln"
-	#define MSG_INIT_SDCARD "Init. SD-Card"
-	#define MSG_CNG_SDCARD "Change SD-Card"
-	#define MSG_ZPROBE_OUT "Z probe out. bed"
-	#define MSG_POSITION_UNKNOWN "Home X/Y before Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-	#define MSG_CONTRAST "Contrast"
-
-#endif
-
-
-#if LANGUAGE_CHOICE == 5
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " lista."
-	#define MSG_SD_INSERTED "Tarjeta colocada"
-	#define MSG_SD_REMOVED "Tarjeta retirada"
-	#define MSG_MAIN "Menu principal"
-	#define MSG_AUTOSTART " Autostart"
-	#define MSG_DISABLE_STEPPERS "Apagar motores"
-	#define MSG_AUTO_HOME "Llevar al origen"
-	#define MSG_SET_HOME_OFFSETS "Ajustar offsets"
-	#define MSG_SET_ORIGIN "Establecer cero"
-	#define MSG_PREHEAT_PLA "Precalentar PLA"
-	#define MSG_PREHEAT_PLA0 "Precalentar PLA 1"
-	#define MSG_PREHEAT_PLA1 "Precalentar PLA 2"
-	#define MSG_PREHEAT_PLA2 "Precalentar PLA 3"
-	#define MSG_PREHEAT_PLA012 "Precal. PLA Todo"
-	#define MSG_PREHEAT_PLA_BEDONLY "Precal. PLA Base"
-	#define MSG_PREHEAT_PLA_SETTINGS "Ajustar temp. PLA"
-	#define MSG_PREHEAT_ABS "Precalentar ABS"
-	#define MSG_PREHEAT_ABS0 "Precalentar ABS 1"
-	#define MSG_PREHEAT_ABS1 "Precalentar ABS 2"
-	#define MSG_PREHEAT_ABS2 "Precalentar ABS 3"
-	#define MSG_PREHEAT_ABS012 "Precal. ABS Todo"
-	#define MSG_PREHEAT_ABS_BEDONLY "Precal. ABS Base"
-	#define MSG_PREHEAT_ABS_SETTINGS "Ajustar temp. ABS"
-	#define MSG_COOLDOWN "Enfriar"
-	#define MSG_SWITCH_PS_ON "Encender"
-	#define MSG_SWITCH_PS_OFF "Apagar"
-	#define MSG_EXTRUDE "Extruir"
-	#define MSG_RETRACT "Retraer"
-	#define MSG_MOVE_AXIS "Mover ejes"
-	#define MSG_MOVE_X "Mover X"
-	#define MSG_MOVE_Y "Mover Y"
-	#define MSG_MOVE_Z "Mover Z"
-	#define MSG_MOVE_E "Extrusor"
-	#define MSG_MOVE_E1 "Extrusor2"
-	#define MSG_MOVE_E2 "Extrusor3"
-	#define MSG_MOVE_01MM "Mover 0.1mm"
-	#define MSG_MOVE_1MM "Mover 1mm"
-	#define MSG_MOVE_10MM "Mover 10mm"
-	#define MSG_SPEED "Velocidad"
-	#define MSG_NOZZLE "Nozzle"
-	#define MSG_NOZZLE1 "Nozzle2"
-	#define MSG_NOZZLE2 "Nozzle3"
-	#define MSG_BED "Base"
-	#define MSG_FAN_SPEED "Ventilador"
-	#define MSG_FLOW "Flujo"
-	#define MSG_FLOW0 "Flujo 0"
-	#define MSG_FLOW1 "Flujo 1"
-	#define MSG_FLOW2 "Flujo 2"
-	#define MSG_CONTROL "Control"
-	#define MSG_MIN "\002 Min"
-	#define MSG_MAX "\002 Max"
-	#define MSG_FACTOR "\002 Fact"
-	#define MSG_AUTOTEMP "Autotemp"
-	#define MSG_ON "On"
-	#define MSG_OFF "Off"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Acel"
-	#define MSG_VXY_JERK "Vxy-jerk"
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ve-jerk"
-	#define MSG_VMAX "Vmax"
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "Vvacio min"
-	#define MSG_AMAX "Amax"
-	#define MSG_A_RETRACT "A-retrac."
-	#define MSG_XSTEPS "X pasos/mm"
-	#define MSG_YSTEPS "Y pasos/mm"
-	#define MSG_ZSTEPS "Z pasos/mm"
-	#define MSG_ESTEPS "E pasos/mm"
-	#define MSG_RECTRACT "Retraer"
-	#define MSG_TEMPERATURE "Temperatura"
-	#define MSG_MOTION "Movimiento"
-	#define MSG_STORE_EPROM "Guardar memoria"
-	#define MSG_LOAD_EPROM "Cargar memoria"
-	#define MSG_RESTORE_FAILSAFE "Rest. de emergen."
-	#define MSG_REFRESH "Volver a cargar"
-	#define MSG_WATCH "Monitorizar"
-	#define MSG_PREPARE "Preparar"
-	#define MSG_TUNE "Ajustar"
-	#define MSG_PAUSE_PRINT "Pausar impresion"
-	#define MSG_RESUME_PRINT "Reanudar impres."
-	#define MSG_STOP_PRINT "Detener impresion"
-	#define MSG_CARD_MENU "Menu de SD"
-	#define MSG_NO_CARD "No hay tarjeta SD"
-	#define MSG_DWELL "Reposo..."
-	#define MSG_USERWAIT "Esperando ordenes"
-	#define MSG_RESUMING "Resumiendo impre."
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Sin movimiento"
-	#define MSG_KILLED "PARADA DE EMERG."
-	#define MSG_STOPPED "PARADA"
-	#define MSG_CONTROL_RETRACT  "Retraer mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Interc. Retraer mm"
-	#define MSG_CONTROL_RETRACTF "Retraer  V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Levantar mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "DesRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Interc. DesRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "DesRet V"
-	#define MSG_AUTORETRACT "AutoRetr."
-	#define MSG_FILAMENTCHANGE "Cambiar filamento"
-	#define MSG_INIT_SDCARD "Iniciando tarjeta"
-	#define MSG_CNG_SDCARD "Cambiar tarjeta"
-	#define MSG_RECTRACT_WIDE "Retraer"
-	#define MSG_TEMPERATURE_WIDE "Temperatura"
-	#define MSG_TEMPERATURE_RTN  "Temperatura"
-	#define MSG_MAIN_WIDE "Menu principal"
-	#define MSG_MOTION_WIDE "Movimiento"
-	#define MSG_PREPARE_ALT "Preparar"
-	#define MSG_CONTROL_ARROW "Control"
-	#define MSG_RETRACT_ARROW "Retraer"
-	#define MSG_STEPPER_RELEASED "Desacoplada."
-	#define MSG_ZPROBE_OUT "sonda Z fuera"
-	#define MSG_POSITION_UNKNOWN "Reiniciar X/Y y Z"
-	#define MSG_ZPROBE_ZOFFSET "Offset Z"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-	#define MSG_CONTRAST "Contraste"
-
-#endif
-
-#if LANGUAGE_CHOICE == 6
-
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME			        "Готов."
-	#define MSG_SD_INSERTED						"Карта вставлена"
-	#define MSG_SD_REMOVED						"Карта извлечена"
-	#define MSG_MAIN							"Меню \003"
-	#define MSG_AUTOSTART						"Автостарт"
-	#define MSG_DISABLE_STEPPERS 				"Выкл. двигатели"
-	#define MSG_AUTO_HOME						"Парковка"
-	#define MSG_SET_HOME_OFFSETS				"Set home offsets"
-	#define MSG_SET_ORIGIN						"Запомнить ноль"
-	#define MSG_PREHEAT_PLA 					"Преднагрев PLA"
-	#define MSG_PREHEAT_PLA0					"Преднагрев PLA0"
-	#define MSG_PREHEAT_PLA1					"Преднагрев PLA1"
-	#define MSG_PREHEAT_PLA2					"Преднагрев PLA2"
-	#define MSG_PREHEAT_PLA012 					"Преднаг. PLA все"
-	#define MSG_PREHEAT_PLA_BEDONLY 			"Пред. PLA Кровать"
-	#define MSG_PREHEAT_PLA_SETTINGS  			"Настройки PLA"
-	#define MSG_PREHEAT_ABS						"Преднагрев ABS"
-	#define MSG_PREHEAT_ABS0					"Преднагрев ABS0"
-	#define MSG_PREHEAT_ABS1					"Преднагрев ABS1"
-	#define MSG_PREHEAT_ABS2					"Преднагрев ABS2"
-	#define MSG_PREHEAT_ABS012 					"Преднаг. ABS все "
-	#define MSG_PREHEAT_ABS_BEDONLY 			"Пред. ABS Кровать"
-	#define MSG_PREHEAT_ABS_SETTINGS  			"Настройки ABS"
-	#define MSG_COOLDOWN						"Охлаждение"
-	#define MSG_SWITCH_PS_ON					"Switch Power On"
-	#define MSG_SWITCH_PS_OFF					"Switch Power Off"
-	#define MSG_EXTRUDE							"Экструзия"
-	#define MSG_RETRACT							"Откат"
-	#define MSG_MOVE_AXIS  						"Движение по осям"
-	#define MSG_MOVE_X                          "Move X"
-	#define MSG_MOVE_Y                          "Move Y"
-	#define MSG_MOVE_Z                          "Move Z"
-	#define MSG_MOVE_E                          "Extruder"
-	#define MSG_MOVE_E1 						"Extruder2"
-	#define MSG_MOVE_E2 						"Extruder3"
-	#define MSG_MOVE_01MM                       "Move 0.1mm"
-	#define MSG_MOVE_1MM                        "Move 1mm"
-	#define MSG_MOVE_10MM                       "Move 10mm"
-	#define MSG_SPEED							"Скорость:"
-	#define MSG_NOZZLE							"\002 Фильера:"
-	#define MSG_NOZZLE1							"\002 Фильера2:"
-	#define MSG_NOZZLE2							"\002 Фильера3:"
-	#define MSG_BED								"\002 Кровать:"
-	#define MSG_FAN_SPEED						"Куллер:"
-	#define MSG_FLOW							"Поток:"
-	#define MSG_FLOW0 " Поток0:"
-	#define MSG_FLOW1 " Поток1:"
-	#define MSG_FLOW2 " Поток2:"
-	#define MSG_CONTROL							"Настройки \003"
-	#define MSG_MIN								"\002 Минимум:"
-	#define MSG_MAX								"\002 Максимум:"
-	#define MSG_FACTOR							"\002 Фактор:"
-	#define MSG_AUTOTEMP						"Autotemp:"
-	#define MSG_ON								"Вкл. "
-	#define MSG_OFF								"Выкл. "
-	#define MSG_PID_P							"PID-P: "
-	#define MSG_PID_I							"PID-I: "
-	#define MSG_PID_D							"PID-D: "
-	#define MSG_PID_C							"PID-C: "
-	#define MSG_ACC								"Acc:"
-	#define MSG_VXY_JERK						"Vxy-jerk: "
-	#define MSG_VZ_JERK                         "Vz-jerk"
-	#define MSG_VE_JERK                         "Ve-jerk"
-	#define MSG_VMAX							"Vmax "
-	#define MSG_X								"x:"
-	#define MSG_Y								"y:"
-	#define MSG_Z								"z:"
-	#define MSG_E								"e:"
-	#define MSG_VMIN							"Vmin:"
-	#define MSG_VTRAV_MIN						"VTrav min:"
-	#define MSG_AMAX							"Amax "
-	#define MSG_A_RETRACT						"A-retract:"
-	#define MSG_XSTEPS							"X шаг/mm:"
-	#define MSG_YSTEPS							"Y шаг/mm:"
-	#define MSG_ZSTEPS							"Z шаг/mm:"
-	#define MSG_ESTEPS							"E шаг/mm:"
-	#define MSG_RECTRACT    					"Откат подачи    \x7E"
-	#define MSG_TEMPERATURE  					"Температура     \x7E"
-	#define MSG_MOTION							"Скорости        \x7E"
-	#define MSG_CONTRAST  						"LCD contrast"
-	#define MSG_STORE_EPROM  					"Сохранить в EPROM"
-	#define MSG_LOAD_EPROM  					"Загруз. из EPROM"
-	#define MSG_RESTORE_FAILSAFE				"Сброс настроек"
-	#define MSG_REFRESH							"\004Обновить"
-	#define MSG_WATCH							"Обзор           \003"
-	#define MSG_PREPARE							"Действия        \x7E"
-	#define MSG_TUNE							"Настройки       \x7E"
-	#define MSG_PAUSE_PRINT  					"Продолжить печать"
-	#define MSG_RESUME_PRINT					"возобн. печать"
-	#define MSG_STOP_PRINT 						"Остановить печать"
-	#define MSG_CARD_MENU						"Меню карты      \x7E"
-	#define MSG_NO_CARD							"Нет карты"
-	#define MSG_DWELL							"Сон..."
-	#define MSG_USERWAIT  						"Ожиданиие"
-	#define MSG_RESUMING 						"Resuming print"
-	#define MSG_PRINT_ABORTED					"Print aborted"
-	#define MSG_NO_MOVE							"Нет движения."
-	#define MSG_KILLED							"УБИТО."
-	#define MSG_STOPPED							"ОСТАНОВЛЕНО."
-	#define MSG_CONTROL_RETRACT					"Откат mm:"
-	#define MSG_CONTROL_RETRACT_SWAP			"своп Откат mm:"
-	#define MSG_CONTROL_RETRACTF				"Откат  V:"
-	#define MSG_CONTROL_RETRACT_ZLIFT			"Прыжок mm:"
-	#define MSG_CONTROL_RETRACT_RECOVER			"Возврат +mm:"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP	"своп Возврат +mm:"
-	#define MSG_CONTROL_RETRACT_RECOVERF		"Возврат  V:"
-	#define MSG_AUTORETRACT						"АвтоОткат:"
-	#define MSG_FILAMENTCHANGE 					"Change filament"
-	#define MSG_INIT_SDCARD 					"Init. SD-Card"
-	#define MSG_CNG_SDCARD 						"Change SD-Card"
-	#define MSG_ZPROBE_OUT 						"Z probe out. bed"
-	#define MSG_POSITION_UNKNOWN 				"Home X/Y before Z"
-	#define MSG_ZPROBE_ZOFFSET 					"Z Offset"
-	#define MSG_BABYSTEP_X 						"Babystep X"
-	#define MSG_BABYSTEP_Y 						"Babystep Y"
-	#define MSG_BABYSTEP_Z 						"Babystep Z"
-	#define MSG_ENDSTOP_ABORT 					"Endstop abort"
-	#define MSG_CONTRAST 						"Contrast"
-
-#endif
-
-
-#if LANGUAGE_CHOICE == 7
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " pronto."
-	#define MSG_SD_INSERTED          "SD Card inserita"
-	#define MSG_SD_REMOVED           "SD Card rimossa"
-	#define MSG_MAIN                 "Menu principale"
-	#define MSG_AUTOSTART            "Autostart"
-	#define MSG_DISABLE_STEPPERS     "Disabilita Motori"
-	#define MSG_AUTO_HOME            "Auto Home"
-	#define MSG_SET_HOME_OFFSETS     "Set home offsets"
-	#define MSG_SET_ORIGIN           "Imposta Origine"
-	#define MSG_PREHEAT_PLA          "Preriscalda PLA"
-	#define MSG_PREHEAT_PLA0         "Preriscalda PLA 1"
-	#define MSG_PREHEAT_PLA1         "Preriscalda PLA 2"
-	#define MSG_PREHEAT_PLA2         "Preriscalda PLA 3"
-	#define MSG_PREHEAT_PLA012       "Preris. PLA Tutto"
-	#define MSG_PREHEAT_PLA_BEDONLY  "Preri. PLA Piatto"
-	#define MSG_PREHEAT_PLA_SETTINGS "Preris. PLA Conf"
-	#define MSG_PREHEAT_ABS          "Preriscalda ABS"
-	#define MSG_PREHEAT_ABS0         "Preriscalda ABS 1"
-	#define MSG_PREHEAT_ABS1         "Preriscalda ABS 2"
-	#define MSG_PREHEAT_ABS2         "Preriscalda ABS 3"
-	#define MSG_PREHEAT_ABS012       "Preris. ABS Tutto"
-	#define MSG_PREHEAT_ABS_BEDONLY  "Preri. ABS Piatto"
-	#define MSG_PREHEAT_ABS_SETTINGS "Preris. ABS Conf"
-	#define MSG_COOLDOWN             "Raffredda"
-	#define MSG_SWITCH_PS_ON         "Switch Power On"
-	#define MSG_SWITCH_PS_OFF        "Switch Power Off"
-	#define MSG_EXTRUDE              "Estrudi"
-	#define MSG_RETRACT              "Ritrai"
-	#define MSG_MOVE_AXIS            "Muovi Asse"
-	#define MSG_MOVE_X               "Move X"
-	#define MSG_MOVE_Y               "Move Y"
-	#define MSG_MOVE_Z               "Move Z"
-	#define MSG_MOVE_E               "Extruder"
-	#define MSG_MOVE_E1 			 "Extruder2"
-	#define MSG_MOVE_E2 			 "Extruder3"
-	#define MSG_MOVE_01MM            "Move 0.1mm"
-	#define MSG_MOVE_1MM             "Move 1mm"
-	#define MSG_MOVE_10MM            "Move 10mm"
-	#define MSG_SPEED                "Velcità"
-	#define MSG_NOZZLE               "Ugello"
-	#define MSG_NOZZLE1              "Ugello2"
-	#define MSG_NOZZLE2              "Ugello3"
-	#define MSG_BED                  "Piatto"
-	#define MSG_FAN_SPEED            "Ventola"
-	#define MSG_FLOW                 "Flusso"
-	#define MSG_FLOW0                "Flusso 0"
-	#define MSG_FLOW1                "Flusso 1"
-	#define MSG_FLOW2                "Flusso 2"
-	#define MSG_CONTROL              "Controllo"
-	#define MSG_MIN                  " \002 Min:"
-	#define MSG_MAX                  " \002 Max:"
-	#define MSG_FACTOR               " \002 Fact:"
-	#define MSG_AUTOTEMP             "Autotemp"
-	#define MSG_ON                   "On "
-	#define MSG_OFF                  "Off"
-	#define MSG_PID_P                "PID-P"
-	#define MSG_PID_I                "PID-I"
-	#define MSG_PID_D                "PID-D"
-	#define MSG_PID_C                "PID-C"
-	#define MSG_ACC                  "Accel"
-	#define MSG_VXY_JERK             "Vxy-jerk"
-	#define MSG_VZ_JERK              "Vz-jerk"
-	#define MSG_VE_JERK              "Ve-jerk"
-	#define MSG_VMAX                 "Vmax"
-	#define MSG_X                    "x"
-	#define MSG_Y                    "y"
-	#define MSG_Z                    "z"
-	#define MSG_E                    "e"
-	#define MSG_VMIN                 "Vmin"
-	#define MSG_VTRAV_MIN            "VTrav min"
-	#define MSG_AMAX                 "Amax"
-	#define MSG_A_RETRACT            "A-retract"
-	#define MSG_XSTEPS               "Xpassi/mm"
-	#define MSG_YSTEPS               "Ypassi/mm"
-	#define MSG_ZSTEPS               "Zpassi/mm"
-	#define MSG_ESTEPS               "Epassi/mm"
-	#define MSG_RECTRACT             "Ritrai"
-	#define MSG_TEMPERATURE          "Temperatura"
-	#define MSG_MOTION               "Movimento"
-	#define MSG_CONTRAST "LCD contrast"
-	#define MSG_STORE_EPROM          "Salva in EEPROM"
-	#define MSG_LOAD_EPROM           "Carica da EEPROM"
-	#define MSG_RESTORE_FAILSAFE     "Impostaz. default"
-	#define MSG_REFRESH              "Aggiorna"
-	#define MSG_WATCH                "Guarda"
-	#define MSG_PREPARE              "Prepara"
-	#define MSG_TUNE                 "Adatta"
-	#define MSG_PAUSE_PRINT          "Pausa"
-	#define MSG_RESUME_PRINT         "Riprendi Stampa"
-	#define MSG_STOP_PRINT           "Arresta Stampa"
-	#define MSG_CARD_MENU            "SD Card Menu"
-	#define MSG_NO_CARD              "No SD Card"
-	#define MSG_DWELL                "Sospensione..."
-	#define MSG_USERWAIT             "Attendi Utente..."
-	#define MSG_RESUMING             "Riprendi Stampa"
-	#define MSG_PRINT_ABORTED        "Print aborted"
-	#define MSG_NO_MOVE              "Nessun Movimento."
-	#define MSG_KILLED               "UCCISO. "
-	#define MSG_STOPPED              "ARRESTATO. "
-	#define MSG_CONTROL_RETRACT      "Ritrai mm"
-	#define MSG_CONTROL_RETRACT_SWAP "Scamb. Ritrai mm"
-	#define MSG_CONTROL_RETRACTF     "Ritrai  V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Salta mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Scamb. UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "UnRet  V"
-	#define MSG_AUTORETRACT          "AutoArretramento"
-	#define MSG_FILAMENTCHANGE       "Cambia filamento"
-	#define MSG_INIT_SDCARD          "Iniz. SD-Card"
-	#define MSG_CNG_SDCARD           "Cambia SD-Card"
-	#define MSG_ZPROBE_OUT "Z probe out. bed"
-	#define MSG_POSITION_UNKNOWN "Home X/Y before Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-	#define MSG_CONTRAST "Contrast"
-
-#endif
-
-
-#if LANGUAGE_CHOICE == 8
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " pronto."
-	#define MSG_SD_INSERTED "Cartao inserido"
-	#define MSG_SD_REMOVED "Cartao removido"
-	#define MSG_MAIN " Menu principal \003"
-	#define MSG_AUTOSTART "Autostart"
-	#define MSG_DISABLE_STEPPERS " Apagar motores"
-	#define MSG_AUTO_HOME "Ir para origen"
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN "Estabelecer orig."
-	#define MSG_PREHEAT_PLA "Pre-aquecer PLA"
-	#define MSG_PREHEAT_PLA0 " pre-aquecer PLA 1"
-	#define MSG_PREHEAT_PLA1 " pre-aquecer PLA 2"
-	#define MSG_PREHEAT_PLA2 " pre-aquecer PLA 3"
-	#define MSG_PREHEAT_PLA012 " pre-aq. PLA Tudo"
-	#define MSG_PREHEAT_PLA_BEDONLY  " pre-aq. PLA \002Base"
-	#define MSG_PREHEAT_PLA_SETTINGS "PLA setting"
-	#define MSG_PREHEAT_ABS "Pre-aquecer ABS"
-	#define MSG_PREHEAT_ABS0 " pre-aquecer ABS 1"
-	#define MSG_PREHEAT_ABS1 " pre-aquecer ABS 2"
-	#define MSG_PREHEAT_ABS2 " pre-aquecer ABS 3"
-	#define MSG_PREHEAT_ABS012 " pre-aq. ABS Tudo"
-	#define MSG_PREHEAT_ABS_BEDONLY  " pre-aq. ABS \002Base"
-	#define MSG_PREHEAT_ABS_SETTINGS "ABS setting"
-	#define MSG_COOLDOWN "Esfriar"
-	#define MSG_SWITCH_PS_ON "Switch Power On"
-	#define MSG_SWITCH_PS_OFF "Switch Power Off"
-	#define MSG_EXTRUDE "Extrudar"
-	#define MSG_RETRACT "Retrair"
-	#define MSG_PREHEAT_PLA "Pre-aquecer PLA"
-	#define MSG_PREHEAT_ABS "Pre-aquecer ABS"
-	#define MSG_MOVE_AXIS "Mover eixo      \x7E"
-	#define MSG_MOVE_X "Move X"
-	#define MSG_MOVE_Y "Move Y"
-	#define MSG_MOVE_Z "Move Z"
-	#define MSG_MOVE_E "Extruder"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Move 0.1mm"
-	#define MSG_MOVE_1MM "Move 1mm"
-	#define MSG_MOVE_10MM "Move 10mm"
-	#define MSG_SPEED "Velocidade:"
-	#define MSG_NOZZLE "\002Nozzle:"
-	#define MSG_NOZZLE1 "\002Nozzle2:"
-	#define MSG_NOZZLE2 "\002Nozzle3:"
-	#define MSG_BED "\002Base:"
-	#define MSG_FAN_SPEED "Velocidade vento."
-	#define MSG_FLOW "Fluxo:"
-	#define MSG_FLOW0 "Fluxo0:"
-	#define MSG_FLOW1 "Fluxo1:"
-	#define MSG_FLOW2 "Fluxo2:"
-	#define MSG_CONTROL "Controle \003"
-	#define MSG_MIN "\002 Min:"
-	#define MSG_MAX "\002 Max:"
-	#define MSG_FACTOR "\002 Fact:"
-	#define MSG_AUTOTEMP "Autotemp:"
-	#define MSG_ON "On "
-	#define MSG_OFF "Off"
-	#define MSG_PID_P "PID-P: "
-	#define MSG_PID_I "PID-I: "
-	#define MSG_PID_D "PID-D: "
-	#define MSG_PID_C "PID-C: "
-	#define MSG_ACC  "Acc:"
-	#define MSG_VXY_JERK "Vxy-jerk: "
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ve-jerk"
-	#define MSG_VMAX " Vmax "
-	#define MSG_X "x:"
-	#define MSG_Y "y:"
-	#define MSG_Z "z:"
-	#define MSG_E "e:"
-	#define MSG_VMIN "Vmin:"
-	#define MSG_VTRAV_MIN "VTrav min:"
-	#define MSG_AMAX "Amax "
-	#define MSG_A_RETRACT "A-retract:"
-	#define MSG_XSTEPS "Xpasso/mm:"
-	#define MSG_YSTEPS "Ypasso/mm:"
-	#define MSG_ZSTEPS "Zpasso/mm:"
-	#define MSG_ESTEPS "Epasso/mm:"
-	#define MSG_MAIN_WIDE "Menu Principal  \003"
-	#define MSG_RECTRACT "Retrair"
-	#define MSG_TEMPERATURE "Temperatura"
-	#define MSG_MOTION "Movimento"
-	#define MSG_STORE_EPROM "Guardar memoria"
-	#define MSG_LOAD_EPROM "Carregar memoria"
-	#define MSG_RESTORE_FAILSAFE "Rest. de emergen."
-	#define MSG_REFRESH "\004Recarregar"
-	#define MSG_WATCH "Monitorar   \003"
-	#define MSG_PREPARE "Preparar \x7E"
-	#define MSG_PREPARE_ALT "Preparar \003"
-	#define MSG_CONTROL_ARROW "Controle \x7E"
-	#define MSG_RETRACT_ARROW "Retrair \x7E"
-	#define MSG_TUNE "Tune    \x7E"
-	#define MSG_PAUSE_PRINT "Pausar impressao"
-	#define MSG_RESUME_PRINT "Resumir impressao"
-	#define MSG_STOP_PRINT "Parar impressao"
-	#define MSG_CARD_MENU "Menu cartao SD"
-	#define MSG_NO_CARD "Sem cartao SD"
-	#define MSG_DWELL "Repouso..."
-	#define MSG_USERWAIT "Esperando ordem"
-	#define MSG_RESUMING "Resuming print"
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Sem movimento"
-	#define MSG_KILLED "PARADA DE EMERG."
-	#define MSG_STOPPED "PARADA. "
-	#define MSG_STEPPER_RELEASED "Lancado."
-	#define MSG_CONTROL_RETRACT  " Retrair mm:"
-	#define MSG_CONTROL_RETRACT_SWAP  "Troca Retrair mm:"
-	#define MSG_CONTROL_RETRACTF " Retrair  V:"
-	#define MSG_CONTROL_RETRACT_ZLIFT " Levantar mm:"
-	#define MSG_CONTROL_RETRACT_RECOVER " DesRet +mm:"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Troca DesRet +mm:"
-	#define MSG_CONTROL_RETRACT_RECOVERF " DesRet  V:"
-	#define MSG_AUTORETRACT " AutoRetr.:"
-	#define MSG_FILAMENTCHANGE "Change filament"
-	#define MSG_INIT_SDCARD "Init. SD-Card"
-	#define MSG_CNG_SDCARD "Change SD-Card"
-	#define MSG_ZPROBE_OUT "Son. fora da mesa"
-	#define MSG_POSITION_UNKNOWN "XY antes de Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-	#define MSG_CONTRAST "Contrast"
-
-#endif
-
-
-
-#if LANGUAGE_CHOICE == 9
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " valmis."
-	#define MSG_SD_INSERTED "Kortti asetettu"
-	#define MSG_SD_REMOVED "Kortti poistettu"
-	#define MSG_MAIN "Palaa"
-	#define MSG_AUTOSTART "Automaatti"
-	#define MSG_DISABLE_STEPPERS "Vapauta moottorit"
-	#define MSG_AUTO_HOME "Aja referenssiin"
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN "Aseta origo"
-	#define MSG_PREHEAT_PLA "Esilammita PLA"
-	#define MSG_PREHEAT_PLA0 "Esilammita PLA 1"
-	#define MSG_PREHEAT_PLA1 "Esilammita PLA 2"
-	#define MSG_PREHEAT_PLA2 "Esilammita PLA 3"
-	#define MSG_PREHEAT_PLA012 "Esila. PLA Kaikki"
-	#define MSG_PREHEAT_PLA_BEDONLY  "Esila. PLA Alusta"
-	#define MSG_PREHEAT_PLA_SETTINGS "Esilamm. PLA konf"
-	#define MSG_PREHEAT_ABS "Esilammita ABS"
-	#define MSG_PREHEAT_ABS0 "Esilammita ABS 1"
-	#define MSG_PREHEAT_ABS1 "Esilammita ABS 2"
-	#define MSG_PREHEAT_ABS2 "Esilammita ABS 3"
-	#define MSG_PREHEAT_ABS012 "Esila. ABS Kaikki"
-	#define MSG_PREHEAT_ABS_BEDONLY  "Esila. ABS Alusta"
-	#define MSG_PREHEAT_ABS_SETTINGS "Esilamm. ABS konf"
-	#define MSG_COOLDOWN "Jaahdyta"
-	#define MSG_SWITCH_PS_ON "Virta paalle"
-	#define MSG_SWITCH_PS_OFF "Virta pois"
-	#define MSG_EXTRUDE "Pursota"
-	#define MSG_RETRACT "Veda takaisin"
-	#define MSG_MOVE_AXIS "Liikuta akseleita"
-	#define MSG_MOVE_X "Move X"
-	#define MSG_MOVE_Y "Move Y"
-	#define MSG_MOVE_Z "Move Z"
-	#define MSG_MOVE_E "Extruder"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Move 0.1mm"
-	#define MSG_MOVE_1MM "Move 1mm"
-	#define MSG_MOVE_10MM "Move 10mm"
-	#define MSG_SPEED "Nopeus"
-	#define MSG_NOZZLE "Suutin"
-	#define MSG_NOZZLE1 "Suutin2"
-	#define MSG_NOZZLE2 "Suutin3"
-	#define MSG_BED "Alusta"
-	#define MSG_FAN_SPEED "Tuul. nopeus"
-	#define MSG_FLOW "Virtaus"
-	#define MSG_FLOW0 "Virtaus 0"
-	#define MSG_FLOW1 "Virtaus 1"
-	#define MSG_FLOW2 "Virtaus 2"
-	#define MSG_CONTROL "Kontrolli"
-	#define MSG_MIN " \002 Min"
-	#define MSG_MAX " \002 Max"
-	#define MSG_FACTOR " \002 Kerr"
-	#define MSG_AUTOTEMP "Autotemp"
-	#define MSG_ON "On "
-	#define MSG_OFF "Off"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Kiihtyv"
-	#define MSG_VXY_JERK "Vxy-jerk"
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ve-jerk"
-	#define MSG_VMAX "Vmax "
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "VLiike min"
-	#define MSG_AMAX "Amax "
-	#define MSG_A_RETRACT "A-peruuta"
-	#define MSG_XSTEPS "Xsteps/mm"
-	#define MSG_YSTEPS "Ysteps/mm"
-	#define MSG_ZSTEPS "Zsteps/mm"
-	#define MSG_ESTEPS "Esteps/mm"
-	#define MSG_RECTRACT "Veda takaisin"
-	#define MSG_TEMPERATURE "Lampotila"
-	#define MSG_MOTION "Liike"
-	#define MSG_CONTRAST "LCD contrast"
-	#define MSG_STORE_EPROM "Tallenna muistiin"
-	#define MSG_LOAD_EPROM "Lataa muistista"
-	#define MSG_RESTORE_FAILSAFE "Palauta oletus"
-	#define MSG_REFRESH "Paivita"
-	#define MSG_WATCH "Seuraa"
-	#define MSG_PREPARE "Valmistele"
-	#define MSG_TUNE "Saada"
-	#define MSG_PAUSE_PRINT "Keskeyta tulostus"
-	#define MSG_RESUME_PRINT "Jatka tulostusta"
-	#define MSG_STOP_PRINT "Pysayta tulostus"
-	#define MSG_CARD_MENU "Korttivalikko"
-	#define MSG_NO_CARD "Ei korttia"
-	#define MSG_DWELL "Nukkumassa..."
-	#define MSG_USERWAIT "Odotet. valintaa"
-	#define MSG_RESUMING "Jatke. tulostusta"
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Ei liiketta."
-	#define MSG_KILLED "KILLED. "
-	#define MSG_STOPPED "STOPPED. "
-	#define MSG_CONTROL_RETRACT  "Veda mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Va. Veda mm"
-	#define MSG_CONTROL_RETRACTF "Veda V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Z mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Va. UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "UnRet  V"
-	#define MSG_AUTORETRACT "AutoVeto."
-	#define MSG_FILAMENTCHANGE "Change filament"
-	#define MSG_INIT_SDCARD "Init. SD-Card"
-	#define MSG_CNG_SDCARD "Change SD-Card"
-	#define MSG_ZPROBE_OUT "Z probe out. bed"
-	#define MSG_POSITION_UNKNOWN "Home X/Y before Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-
-#endif
-
-#if LANGUAGE_CHOICE == 10
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " parada."
-	#define MSG_SD_INSERTED "Tarcheta colocada"
-	#define MSG_SD_REMOVED "Tarcheta retirada"
-	#define MSG_MAIN "Menu prencipal"
-	#define MSG_AUTOSTART " Autostart"
-	#define MSG_DISABLE_STEPPERS "Amortar motors"
-	#define MSG_AUTO_HOME "Levar a l'orichen"
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN "Establir zero"
-	#define MSG_PREHEAT_PLA "Precalentar PLA"
-	#define MSG_PREHEAT_PLA0 "Precalentar PLA0"
-	#define MSG_PREHEAT_PLA1 "Precalentar PLA1"
-	#define MSG_PREHEAT_PLA2 "Precalentar PLA2"
-	#define MSG_PREHEAT_PLA012 "Precalentar PLA a"
-	#define MSG_PREHEAT_PLA_BEDONLY  "Prec. PLA Base"
-	#define MSG_PREHEAT_PLA_SETTINGS "Achustar tem. PLA"
-	#define MSG_PREHEAT_ABS "Precalentar ABS"
-	#define MSG_PREHEAT_ABS0 "Precalentar ABS0"
-	#define MSG_PREHEAT_ABS1 "Precalentar ABS1"
-	#define MSG_PREHEAT_ABS2 "Precalentar ABS2"
-	#define MSG_PREHEAT_ABS012 "Precalentar ABS a"
-	#define MSG_PREHEAT_ABS_BEDONLY  "Prec. ABS Base"
-	#define MSG_PREHEAT_ABS_SETTINGS "Achustar tem. ABS"
-	#define MSG_COOLDOWN "Enfriar"
-	#define MSG_SWITCH_PS_ON "Enchegar Fuent"
-	#define MSG_SWITCH_PS_OFF "Desenchegar Fuent"
-	#define MSG_EXTRUDE "Extruir"
-	#define MSG_RETRACT "Retraer"
-	#define MSG_MOVE_AXIS "Mover Eixes"
-	#define MSG_MOVE_X "Move X"
-	#define MSG_MOVE_Y "Move Y"
-	#define MSG_MOVE_Z "Move Z"
-	#define MSG_MOVE_E "Extruder"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Move 0.1mm"
-	#define MSG_MOVE_1MM "Move 1mm"
-	#define MSG_MOVE_10MM "Move 10mm"
-	#define MSG_SPEED "Velocidat"
-	#define MSG_NOZZLE "Nozzle"
-	#define MSG_NOZZLE1 "Nozzle2"
-	#define MSG_NOZZLE2 "Nozzle3"
-	#define MSG_BED "Base"
-	#define MSG_FAN_SPEED "Ixoriador"
-	#define MSG_FLOW "Fluxo"
-	#define MSG_FLOW0 "Fluxo 0"
-	#define MSG_FLOW1 "Fluxo 1"
-	#define MSG_FLOW2 "Fluxo 2"
-	#define MSG_CONTROL "Control"
-	#define MSG_MIN "\002 Min"
-	#define MSG_MAX "\002 Max"
-	#define MSG_FACTOR "\002 Fact"
-	#define MSG_AUTOTEMP "Autotemp"
-	#define MSG_ON "On"
-	#define MSG_OFF "Off"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Acel"
-	#define MSG_VXY_JERK "Vxy-jerk"
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ves-jerk"
-	#define MSG_VMAX "Vmax"
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "y"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "VTrav min"
-	#define MSG_AMAX "Amax"
-	#define MSG_A_RETRACT "A-retrac."
-	#define MSG_XSTEPS "X trangos/mm"
-	#define MSG_YSTEPS "Y trangos/mm"
-	#define MSG_ZSTEPS "Z trangos/mm"
-	#define MSG_ESTEPS "E trangos/mm"
-	#define MSG_RECTRACT "Retraer"
-	#define MSG_TEMPERATURE "Temperatura"
-	#define MSG_MOTION "Movimiento"
-	#define MSG_STORE_EPROM "Alzar Memoria"
-	#define MSG_LOAD_EPROM "Cargar Memoria"
-	#define MSG_RESTORE_FAILSAFE "Rest. d'emerchen."
-	#define MSG_REFRESH "Tornar a cargar"
-	#define MSG_WATCH "Monitorizar"
-	#define MSG_PREPARE "Preparar"
-	#define MSG_TUNE "Achustar"
-	#define MSG_PAUSE_PRINT "Pausar impresion"
-	#define MSG_RESUME_PRINT "Contin. impresion"
-	#define MSG_STOP_PRINT "Detener Impresion"
-	#define MSG_CARD_MENU "Menu de SD"
-	#define MSG_NO_CARD "No i hai tarcheta"
-	#define MSG_DWELL "Reposo..."
-	#define MSG_USERWAIT "Asperan. ordines"
-	#define MSG_RESUMING "Contin. impresion"
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Sin movimiento"
-	#define MSG_KILLED "ATURADA D'EMERCH."
-	#define MSG_STOPPED "ATURADA."
-	#define MSG_CONTROL_RETRACT  "Retraer mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Swap Retraer mm"
-	#define MSG_CONTROL_RETRACTF "Retraer  F"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Devantar mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "DesRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Swap DesRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "DesRet F"
-	#define MSG_AUTORETRACT "AutoRetr."
-	#define MSG_FILAMENTCHANGE "Cambear"
-	#define MSG_INIT_SDCARD "Encetan. tarcheta"
-	#define MSG_CNG_SDCARD "Cambiar tarcheta"
-	#define MSG_RECTRACT_WIDE "Retraer"
-	#define MSG_TEMPERATURE_WIDE "Temperatura"
-	#define MSG_TEMPERATURE_RTN  "Temperatura"
-	#define MSG_MAIN_WIDE "Menu Prencipal"
-	#define MSG_MOTION_WIDE "Movimiento"
-	#define MSG_PREPARE_ALT "Preparar"
-	#define MSG_CONTROL_ARROW "Control"
-	#define MSG_RETRACT_ARROW "Retraer"
-	#define MSG_STEPPER_RELEASED "Desacoplada."
-	#define MSG_ZPROBE_OUT "Z probe out. bed"
-	#define MSG_POSITION_UNKNOWN "Home X/Y before Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-	#define MSG_CONTRAST "Contrast"
-
-#endif
-
-#if LANGUAGE_CHOICE == 11 //Dutch
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " gereed."
-	#define MSG_SD_INSERTED "Kaart ingestoken"
-	#define MSG_SD_REMOVED "Kaart verwijderd"
-	#define MSG_MAIN "Main"
-	#define MSG_AUTOSTART "Autostart"
-	#define MSG_DISABLE_STEPPERS "Motoren uit"
-	#define MSG_AUTO_HOME "Auto home"
-	#define MSG_SET_HOME_OFFSETS "Set home offsets"
-	#define MSG_SET_ORIGIN "Nulpunt instellen"
-	#define MSG_PREHEAT_PLA "PLA voorverwarmen"
-	#define MSG_PREHEAT_PLA0 "PLA voorverw. 0"
-	#define MSG_PREHEAT_PLA1 "PLA voorverw. 1"
-	#define MSG_PREHEAT_PLA2 "PLA voorverw. 2"
-	#define MSG_PREHEAT_PLA012 "PLA voorverw. aan"
-	#define MSG_PREHEAT_PLA_BEDONLY  "PLA voorverw. Bed"
-	#define MSG_PREHEAT_PLA_SETTINGS "PLA verw. conf"
-	#define MSG_PREHEAT_ABS "ABS voorverwarmen"
-	#define MSG_PREHEAT_ABS0 "ABS voorverw. 0"
-	#define MSG_PREHEAT_ABS1 "ABS voorverw. 1"
-	#define MSG_PREHEAT_ABS2 "ABS voorverw. 2"
-	#define MSG_PREHEAT_ABS012 "ABS voorverw. aan"
-	#define MSG_PREHEAT_ABS_BEDONLY  "ABS voorverw. Bed"
-	#define MSG_PREHEAT_ABS_SETTINGS "ABS verw. conf"
-	#define MSG_COOLDOWN "Afkoelen"
-	#define MSG_SWITCH_PS_ON "Stroom aan"
-	#define MSG_SWITCH_PS_OFF "Stroom uit"
-	#define MSG_EXTRUDE "Extrude"
-	#define MSG_RETRACT "Retract"
-	#define MSG_MOVE_AXIS "As verplaatsen"
-	#define MSG_MOVE_X "Verplaats X"
-	#define MSG_MOVE_Y "Verplaats Y"
-	#define MSG_MOVE_Z "Verplaats Z"
-	#define MSG_MOVE_E "Extruder"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Verplaats 0.1mm"
-	#define MSG_MOVE_1MM "Verplaats 1mm"
-	#define MSG_MOVE_10MM "Verplaats 10mm"
-	#define MSG_SPEED "Snelheid"
-	#define MSG_NOZZLE "Nozzle"
-	#define MSG_NOZZLE1 "Nozzle2"
-	#define MSG_NOZZLE2 "Nozzle3"
-	#define MSG_BED "Bed"
-	#define MSG_FAN_SPEED "Fan snelheid"
-	#define MSG_FLOW "Flow"
-	#define MSG_FLOW0 "Flow 0"
-	#define MSG_FLOW1 "Flow 1"
-	#define MSG_FLOW2 "Flow 2"
-	#define MSG_CONTROL "Control"
-	#define MSG_MIN " \002 Min"
-	#define MSG_MAX " \002 Max"
-	#define MSG_FACTOR " \002 Fact"
-	#define MSG_AUTOTEMP "Autotemp"
-	#define MSG_ON "Aan "
-	#define MSG_OFF "Uit"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Versn"
-	#define MSG_VXY_JERK "Vxy-jerk"
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ve-jerk"
-	#define MSG_VMAX "Vmax "
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "VTrav min"
-	#define MSG_AMAX "Amax "
-	#define MSG_A_RETRACT "A-retract"
-	#define MSG_XSTEPS "Xsteps/mm"
-	#define MSG_YSTEPS "Ysteps/mm"
-	#define MSG_ZSTEPS "Zsteps/mm"
-	#define MSG_ESTEPS "Esteps/mm"
-	#define MSG_RECTRACT "Terugtrekken"
-	#define MSG_TEMPERATURE "Temperatuur"
-	#define MSG_MOTION "Beweging"
-	#define MSG_CONTRAST "LCD contrast"
-	#define MSG_STORE_EPROM "Geheugen opslaan"
-	#define MSG_LOAD_EPROM "Geheugen laden"
-	#define MSG_RESTORE_FAILSAFE "Noodstop reset"
-	#define MSG_REFRESH "Ververs"
-	#define MSG_WATCH "Info scherm"
-	#define MSG_PREPARE "Voorbereiden"
-	#define MSG_TUNE "Afstellen"
-	#define MSG_PAUSE_PRINT "Print pauzeren"
-	#define MSG_RESUME_PRINT "Print hervatten"
-	#define MSG_STOP_PRINT "Print stoppen"
-	#define MSG_CARD_MENU "Print van SD"
-	#define MSG_NO_CARD "Geen SD kaart"
-	#define MSG_DWELL "Slapen..."
-	#define MSG_USERWAIT "Wachten..."
-	#define MSG_RESUMING "Print hervatten"
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Geen beweging."
-	#define MSG_KILLED "AFGEBROKEN. "
-	#define MSG_STOPPED "GESTOPT. "
-	#define MSG_CONTROL_RETRACT  "Retract mm"
-	#define MSG_CONTROL_RETRACT_SWAP "Ruil Retract mm"
-	#define MSG_CONTROL_RETRACTF "Retract  F"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Hop mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Ruil UnRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "UnRet  F"
-	#define MSG_AUTORETRACT "AutoRetr."
-	#define MSG_FILAMENTCHANGE "Verv. Filament"
-	#define MSG_INIT_SDCARD "Init. SD kaart"
-	#define MSG_CNG_SDCARD "Verv. SD card"
-	#define MSG_ZPROBE_OUT "Z probe uit. bed"
-	#define MSG_POSITION_UNKNOWN "Home X/Y voor Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystap X"
-	#define MSG_BABYSTEP_Y "Babystap Y"
-	#define MSG_BABYSTEP_Z "Babystap Z"
-	#define MSG_ENDSTOP_ABORT "Endstop afbr."
-
-#endif
-
-
-#if LANGUAGE_CHOICE == 12
-
-// LCD Menu Messages
-
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " preparada."
-	#define MSG_SD_INSERTED "SD detectada."
-	#define MSG_SD_REMOVED "SD expulsada."
-	#define MSG_MAIN "Menu principal"
-	#define MSG_AUTOSTART "Inici automatic"
-	#define MSG_DISABLE_STEPPERS "Apagar motors"
-	#define MSG_AUTO_HOME "Home global"
-	#define MSG_SET_ORIGIN "Establir origen"
-	#define MSG_PREHEAT_PLA "Preescalfar PLA"
-	#define MSG_PREHEAT_PLA0 "Preescalfar PLA 1"
-	#define MSG_PREHEAT_PLA1 "Preescalfar PLA 2"
-	#define MSG_PREHEAT_PLA2 "Preescalfar PLA 3"
-	#define MSG_PREHEAT_PLA012 "Preesc. tot PLA"
-	#define MSG_PREHEAT_PLA_BEDONLY "Preesc. llit PLA"
-	#define MSG_PREHEAT_PLA_SETTINGS "Configuració PLA"
-	#define MSG_PREHEAT_ABS "Preescalfar ABS"
-	#define MSG_PREHEAT_ABS0 "Preescalfar ABS 1"
-	#define MSG_PREHEAT_ABS1 "Preescalfar ABS 2"
-	#define MSG_PREHEAT_ABS2 "Preescalfar ABS 3"
-	#define MSG_PREHEAT_ABS012 "Preesc. tot ABS"
-	#define MSG_PREHEAT_ABS_BEDONLY "Preesc. llit ABS"
-	#define MSG_PREHEAT_ABS_SETTINGS "Configuració ABS"
-	#define MSG_COOLDOWN "Refredar"
-	#define MSG_SWITCH_PS_ON "Switch power on"
-	#define MSG_SWITCH_PS_OFF "Switch power off"
-	#define MSG_EXTRUDE "Extruir"
-	#define MSG_RETRACT "Refredar"
-	#define MSG_MOVE_AXIS "Moure eixos"
-	#define MSG_MOVE_X "Moure X"
-	#define MSG_MOVE_Y "Moure Y"
-	#define MSG_MOVE_Z "Moure Z"
-	#define MSG_MOVE_E "Extrusor"
-	#define MSG_MOVE_E1 "Extruder2"
-	#define MSG_MOVE_E2 "Extruder3"
-	#define MSG_MOVE_01MM "Moure 0.1mm"
-	#define MSG_MOVE_1MM "Moure 1mm"
-	#define MSG_MOVE_10MM "Moure 10mm"
-	#define MSG_SPEED "Velocitat"
-	#define MSG_NOZZLE "Nozzle"
-	#define MSG_NOZZLE1 "Nozzle2"
-	#define MSG_NOZZLE2 "Nozzle3"
-	#define MSG_BED "Llit"
-	#define MSG_FAN_SPEED "Vel. Ventilador"
-	#define MSG_FLOW "Fluxe"
-	#define MSG_FLOW0 "Fluxe 0"
-	#define MSG_FLOW1 "Fluxe 1"
-	#define MSG_FLOW2 "Fluxe 2"
-	#define MSG_CONTROL "Control"
-	#define MSG_MIN " \002 Min"
-	#define MSG_MAX " \002 Max"
-	#define MSG_FACTOR " \002 Fact"
-	#define MSG_AUTOTEMP "Autotemp"
-	#define MSG_ON "On "
-	#define MSG_OFF "Off"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Accel"
-	#define MSG_VXY_JERK "Vxy-jerk"
-	#define MSG_VZ_JERK "Vz-jerk"
-	#define MSG_VE_JERK "Ve-jerk"
-	#define MSG_VMAX "Vmax "
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "VTrav min"
-	#define MSG_AMAX "Amax "
-	#define MSG_A_RETRACT "A-retract"
-	#define MSG_XSTEPS "Xpassos/mm"
-	#define MSG_YSTEPS "Ypassos/mm"
-	#define MSG_ZSTEPS "Zpassos/mm"
-	#define MSG_ESTEPS "Epassos/mm"
-	#define MSG_RECTRACT "Retreure"
-	#define MSG_TEMPERATURE "Temperatura"
-	#define MSG_MOTION "Moviment"
-	#define MSG_CONTRAST "Contrast de LCD"
-	#define MSG_STORE_EPROM "Desar a memoria"
-	#define MSG_LOAD_EPROM "Carregar de mem."
-	#define MSG_RESTORE_FAILSAFE "Rest. emergencia"
-	#define MSG_REFRESH "Refrescar"
-	#define MSG_WATCH "Pantalla Info."
-	#define MSG_PREPARE "Preparar"
-	#define MSG_TUNE "Calibrar"
-	#define MSG_PAUSE_PRINT "Pausa imp."
-	#define MSG_RESUME_PRINT "Reprendre imp."
-	#define MSG_STOP_PRINT "Parar inp."
-	#define MSG_CARD_MENU "Imprimir de SD"
-	#define MSG_NO_CARD "-Sense targeta SD"
-	#define MSG_DWELL "Repos..."
-	#define MSG_USERWAIT "Esperant usuari.."
-	#define MSG_RESUMING "Reprenent imp."
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Sense moviment."
-	#define MSG_KILLED "PARADA DE EMERG. "
-	#define MSG_STOPPED "ATURAT. "
-	#define MSG_CONTROL_RETRACT  "Retreure mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Swap Retreure mm"
-	#define MSG_CONTROL_RETRACTF "Retreure  F"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Aixecar mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "DesRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Swap DesRet +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "DesRet  F"
-	#define MSG_AUTORETRACT "AutoRetr."
-	#define MSG_FILAMENTCHANGE "Canviar filament"
-	#define MSG_INIT_SDCARD "Iniciant SD"
-	#define MSG_CNG_SDCARD "Canviar SD"
-	#define MSG_ZPROBE_OUT "Z probe out. bed"
-	#define MSG_POSITION_UNKNOWN "Home X/Y abans Z"
-	#define MSG_ZPROBE_ZOFFSET "Z Offset"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop abort"
-
-#endif
-
-//Basque-Euskera
-#if LANGUAGE_CHOICE == 13
-
-// LCD Menu Messages
-// Please note these are limited to 17 characters!
-
-	#define WELCOME_MSG MACHINE_NAME " prest."
-	#define MSG_SD_INSERTED "Txartela sartuta"
-	#define MSG_SD_REMOVED "Txartela kenduta"
-	#define MSG_MAIN "Menu nagusia"
-	#define MSG_AUTOSTART "Auto hasiera"
-	#define MSG_DISABLE_STEPPERS "Itzali motoreak"
-	#define MSG_AUTO_HOME "Hasierara joan"
-	#define MSG_SET_ORIGIN "Hasiera ipini"
-	#define MSG_PREHEAT_PLA "Aurreberotu PLA"
-	#define MSG_PREHEAT_PLA0 "Aurreberotu PLA1"
-	#define MSG_PREHEAT_PLA1 "Aurreberotu PLA2"
-	#define MSG_PREHEAT_PLA2 "Aurreberotu PLA3"
-	#define MSG_PREHEAT_PLA012 "Berotu PLA Guztia"
-	#define MSG_PREHEAT_PLA_BEDONLY "Berotu PLA Ohea"
-	#define MSG_PREHEAT_PLA_SETTINGS "Berotu PLA Konfig"
-	#define MSG_PREHEAT_ABS "Aurreberotu ABS"
-	#define MSG_PREHEAT_ABS0 "Aurreberotu ABS 1"
-	#define MSG_PREHEAT_ABS1 "Aurreberotu ABS 2"
-	#define MSG_PREHEAT_ABS2 "Aurreberotu ABS 3"
-	#define MSG_PREHEAT_ABS012 "Berotu ABS Guztia"
-	#define MSG_PREHEAT_ABS_BEDONLY "Berotu ABS Ohea"
-	#define MSG_PREHEAT_ABS_SETTINGS "Berotu ABS Konfig"
-	#define MSG_COOLDOWN "Hoztu"
-	#define MSG_SWITCH_PS_ON "Energia piztu"
-	#define MSG_SWITCH_PS_OFF "Energia itzali"
-	#define MSG_EXTRUDE "Estruitu"
-	#define MSG_RETRACT "Atzera eragin"
-	#define MSG_MOVE_AXIS "Ardatzak mugitu"
-	#define MSG_MOVE_X "Mugitu X"
-	#define MSG_MOVE_Y "Mugitu Y"
-	#define MSG_MOVE_Z "Mugitu Z"
-	#define MSG_MOVE_E "Estrusorea"
-	#define MSG_MOVE_E1 "Estrusorea2"
-	#define MSG_MOVE_E2 "Estrusorea3"
-	#define MSG_MOVE_01MM "Mugitu 0.1mm"
-	#define MSG_MOVE_1MM "Mugitu 1mm"
-	#define MSG_MOVE_10MM "Mugitu 10mm"
-	#define MSG_SPEED "Abiadura"
-	#define MSG_NOZZLE "Pita"
-	#define MSG_NOZZLE1 "Pita2"
-	#define MSG_NOZZLE2 "Pita3"
-	#define MSG_BED "Ohea"
-	#define MSG_FAN_SPEED "Haizagailua"
-	#define MSG_FLOW "Fluxua"
-	#define MSG_FLOW0 "Fluxua 0"
-	#define MSG_FLOW1 "Fluxua 1"
-	#define MSG_FLOW2 "Fluxua 2"
-	#define MSG_CONTROL "Kontrola"
-	#define MSG_MIN " \002 Min"
-	#define MSG_MAX " \002 Max"
-	#define MSG_FACTOR " \002 Faktorea"
-	#define MSG_AUTOTEMP "Auto tenperatura"
-	#define MSG_ON "On "
-	#define MSG_OFF "Off"
-	#define MSG_PID_P "PID-P"
-	#define MSG_PID_I "PID-I"
-	#define MSG_PID_D "PID-D"
-	#define MSG_PID_C "PID-C"
-	#define MSG_ACC  "Azelerazioa"
-	#define MSG_VXY_JERK "Vxy-astindua"
-	#define MSG_VZ_JERK "Vz-astindua"
-	#define MSG_VE_JERK "Ve-astindua"
-	#define MSG_VMAX "Vmax "
-	#define MSG_X "x"
-	#define MSG_Y "y"
-	#define MSG_Z "z"
-	#define MSG_E "e"
-	#define MSG_VMIN "Vmin"
-	#define MSG_VTRAV_MIN "VTrav min"
-	#define MSG_AMAX "Amax "
-	#define MSG_A_RETRACT "A-retrakt"
-	#define MSG_XSTEPS "X pausoak/mm"
-	#define MSG_YSTEPS "Y pausoak/mm"
-	#define MSG_ZSTEPS "Z pausoak/mm"
-	#define MSG_ESTEPS "E pausoak/mm"
-	#define MSG_RECTRACT "Atzera eragin"
-	#define MSG_TEMPERATURE "Tenperatura"
-	#define MSG_MOTION "Mugimendua"
-	#define MSG_CONTRAST "LCD kontrastea"
-	#define MSG_STORE_EPROM "Gorde memoria"
-	#define MSG_LOAD_EPROM "Kargatu memoria"
-	#define MSG_RESTORE_FAILSAFE "Larri. berriz."
-	#define MSG_REFRESH "Berriz kargatu"
-	#define MSG_WATCH "Pantaila info"
-	#define MSG_PREPARE "Prestatu"
-	#define MSG_TUNE "Doitu"
-	#define MSG_PAUSE_PRINT "Pausatu inprimak."
-	#define MSG_RESUME_PRINT "Jarraitu inprima."
-	#define MSG_STOP_PRINT "Gelditu inprima."
-	#define MSG_CARD_MENU "SD-tik inprimatu"
-	#define MSG_NO_CARD "Ez dago txartelik"
-	#define MSG_DWELL "Lo egin..."
-	#define MSG_USERWAIT "Aginduak zain..."
-	#define MSG_RESUMING "Jarraitzen inpri."
-	#define MSG_PRINT_ABORTED "Print aborted"
-	#define MSG_NO_MOVE "Mugimendu gabe"
-	#define MSG_KILLED "LARRIALDI GELDIA"
-	#define MSG_STOPPED "GELDITUTA. "
-	#define MSG_CONTROL_RETRACT  "Atzera egin mm"
-	#define MSG_CONTROL_RETRACT_SWAP  "Swap Atzera egin mm"
-	#define MSG_CONTROL_RETRACTF "Atzera egin V"
-	#define MSG_CONTROL_RETRACT_ZLIFT "Igo mm"
-	#define MSG_CONTROL_RETRACT_RECOVER "Atzera egin +mm"
-	#define MSG_CONTROL_RETRACT_RECOVER_SWAP "Swap Atzera egin +mm"
-	#define MSG_CONTROL_RETRACT_RECOVERF "Atzera egin V"
-	#define MSG_AUTORETRACT "Atzera egin"
-	#define MSG_FILAMENTCHANGE "Aldatu filament."
-	#define MSG_INIT_SDCARD "Hasieratu txartela"
-	#define MSG_CNG_SDCARD "Aldatu txartela"
-	#define MSG_ZPROBE_OUT "Z ohe hasiera"
-	#define MSG_POSITION_UNKNOWN "Posizio ezezaguna"
-	#define MSG_ZPROBE_ZOFFSET "Z konpentsatu"
-	#define MSG_BABYSTEP_X "Babystep X"
-	#define MSG_BABYSTEP_Y "Babystep Y"
-	#define MSG_BABYSTEP_Z "Babystep Z"
-	#define MSG_ENDSTOP_ABORT "Endstop deuseztat"
-	
-#endif
 
-#endif // ifndef LANGUAGE_H
+#if   LANGUAGE_CHOICE == en // English
+  #include "language_en.h"
+#elif LANGUAGE_CHOICE == pl // Polish
+  #include "language_pl.h"
+#elif LANGUAGE_CHOICE == fr // French
+  #include "language_fr.h"
+#elif LANGUAGE_CHOICE == de // German
+  #include "language_de.h"
+#elif LANGUAGE_CHOICE == es // Spanish
+  #include "language_es.h"
+#elif LANGUAGE_CHOICE == ru // Russian
+  #include "language_ru.h"
+#elif LANGUAGE_CHOICE == it // Italian
+  #include "language_it.h"
+#elif LANGUAGE_CHOICE == pt // Portuguese
+  #include "language_pt.h"
+#elif LANGUAGE_CHOICE == fi // Finnish
+  #include "language_fi.h"
+#elif LANGUAGE_CHOICE == an // Aragonese
+  #include "language_an.h"
+#elif LANGUAGE_CHOICE == nl // Dutch
+  #include "language_nl.h"
+#elif LANGUAGE_CHOICE == ca // Catalan
+  #include "language_ca.h"
+#elif LANGUAGE_CHOICE == eu // Basque-Euskera
+  #include "language_eu.h"
+#endif
+
+#endif //__LANGUAGE_H
diff --git a/Marlin/language_an.h b/Marlin/language_an.h
new file mode 100644
index 0000000..8c6820e
--- /dev/null
+++ b/Marlin/language_an.h
@@ -0,0 +1,139 @@
+/**
+ * Aragonese
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_AN_H
+#define LANGUAGE_AN_H
+
+#define WELCOME_MSG                         MACHINE_NAME " parada."
+#define MSG_SD_INSERTED                     "Tarcheta colocada"
+#define MSG_SD_REMOVED                      "Tarcheta retirada"
+#define MSG_MAIN                            "Menu prencipal"
+#define MSG_AUTOSTART                       " Autostart"
+#define MSG_DISABLE_STEPPERS                "Amortar motors"
+#define MSG_AUTO_HOME                       "Levar a l'orichen"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Establir zero"
+#define MSG_PREHEAT_PLA                     "Precalentar PLA"
+#define MSG_PREHEAT_PLA0                    "Precalentar PLA0"
+#define MSG_PREHEAT_PLA1                    "Precalentar PLA1"
+#define MSG_PREHEAT_PLA2                    "Precalentar PLA2"
+#define MSG_PREHEAT_PLA012                  "Precalentar PLA a"
+#define MSG_PREHEAT_PLA_BEDONLY             "Prec. PLA Base"
+#define MSG_PREHEAT_PLA_SETTINGS            "Achustar tem. PLA"
+#define MSG_PREHEAT_ABS                     "Precalentar ABS"
+#define MSG_PREHEAT_ABS0                    "Precalentar ABS0"
+#define MSG_PREHEAT_ABS1                    "Precalentar ABS1"
+#define MSG_PREHEAT_ABS2                    "Precalentar ABS2"
+#define MSG_PREHEAT_ABS012                  "Precalentar ABS a"
+#define MSG_PREHEAT_ABS_BEDONLY             "Prec. ABS Base"
+#define MSG_PREHEAT_ABS_SETTINGS            "Achustar tem. ABS"
+#define MSG_COOLDOWN                        "Enfriar"
+#define MSG_SWITCH_PS_ON                    "Enchegar Fuent"
+#define MSG_SWITCH_PS_OFF                   "Desenchegar Fuent"
+#define MSG_EXTRUDE                         "Extruir"
+#define MSG_RETRACT                         "Retraer"
+#define MSG_MOVE_AXIS                       "Mover Eixes"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           "Velocidat"
+#define MSG_NOZZLE                          "Nozzle"
+#define MSG_NOZZLE1                         "Nozzle2"
+#define MSG_NOZZLE2                         "Nozzle3"
+#define MSG_BED                             "Base"
+#define MSG_FAN_SPEED                       "Ixoriador"
+#define MSG_FLOW                            "Fluxo"
+#define MSG_FLOW0                           "Fluxo 0"
+#define MSG_FLOW1                           "Fluxo 1"
+#define MSG_FLOW2                           "Fluxo 2"
+#define MSG_CONTROL                         "Control"
+#define MSG_MIN                             "\002 Min"
+#define MSG_MAX                             "\002 Max"
+#define MSG_FACTOR                          "\002 Fact"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "On"
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Acel"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ves-jerk"
+#define MSG_VMAX                            "Vmax"
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "y"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax"
+#define MSG_A_RETRACT                       "A-retrac."
+#define MSG_XSTEPS                          "X trangos/mm"
+#define MSG_YSTEPS                          "Y trangos/mm"
+#define MSG_ZSTEPS                          "Z trangos/mm"
+#define MSG_ESTEPS                          "E trangos/mm"
+#define MSG_TEMPERATURE                     "Temperatura"
+#define MSG_MOTION                          "Movimiento"
+#define MSG_CONTRAST                        "Contrast"
+#define MSG_STORE_EPROM                     "Alzar Memoria"
+#define MSG_LOAD_EPROM                      "Cargar Memoria"
+#define MSG_RESTORE_FAILSAFE                "Rest. d'emerchen."
+#define MSG_REFRESH                         "Tornar a cargar"
+#define MSG_WATCH                           "Monitorizar"
+#define MSG_PREPARE                         "Preparar"
+#define MSG_TUNE                            "Achustar"
+#define MSG_PAUSE_PRINT                     "Pausar impresion"
+#define MSG_RESUME_PRINT                    "Contin. impresion"
+#define MSG_STOP_PRINT                      "Detener Impresion"
+#define MSG_CARD_MENU                       "Menu de SD"
+#define MSG_NO_CARD                         "No i hai tarcheta"
+#define MSG_DWELL                           "Reposo..."
+#define MSG_USERWAIT                        "Asperan. ordines"
+#define MSG_RESUMING                        "Contin. impresion"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Sin movimiento"
+#define MSG_KILLED                          "ATURADA D'EMERCH."
+#define MSG_STOPPED                         "ATURADA."
+#define MSG_CONTROL_RETRACT                 "Retraer mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Swap Retraer mm"
+#define MSG_CONTROL_RETRACTF                "Retraer  F"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Devantar mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Swap DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "DesRet F"
+#define MSG_AUTORETRACT                     "AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Cambear"
+#define MSG_INIT_SDCARD                     "Encetan. tarcheta"
+#define MSG_CNG_SDCARD                      "Cambiar tarcheta"
+#define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y before Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Retraer"
+#define MSG_RECTRACT_WIDE                   "Retraer"
+#define MSG_TEMPERATURE_WIDE                "Temperatura"
+#define MSG_TEMPERATURE_RTN                 "Temperatura"
+#define MSG_MAIN_WIDE                       "Menu Prencipal"
+#define MSG_MOTION_WIDE                     "Movimiento"
+#define MSG_PREPARE_ALT                     "Preparar"
+#define MSG_CONTROL_ARROW                   "Control \x7E"
+#define MSG_RETRACT_ARROW                   "Retraer \x7E"
+#define MSG_STEPPER_RELEASED                "Desacoplada."
+
+#endif // LANGUAGE_AN_H
diff --git a/Marlin/language_ca.h b/Marlin/language_ca.h
new file mode 100644
index 0000000..680c6ee
--- /dev/null
+++ b/Marlin/language_ca.h
@@ -0,0 +1,130 @@
+/**
+ * Catalan
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_CA_H
+#define LANGUAGE_CA_H
+
+#define WELCOME_MSG                         MACHINE_NAME " preparada."
+#define MSG_SD_INSERTED                     "SD detectada."
+#define MSG_SD_REMOVED                      "SD expulsada."
+#define MSG_MAIN                            "Menu principal"
+#define MSG_AUTOSTART                       "Inici automatic"
+#define MSG_DISABLE_STEPPERS                "Apagar motors"
+#define MSG_AUTO_HOME                       "Home global"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Establir origen"
+#define MSG_PREHEAT_PLA                     "Preescalfar PLA"
+#define MSG_PREHEAT_PLA0                    "Preescalfar PLA 1"
+#define MSG_PREHEAT_PLA1                    "Preescalfar PLA 2"
+#define MSG_PREHEAT_PLA2                    "Preescalfar PLA 3"
+#define MSG_PREHEAT_PLA012                  "Preesc. tot PLA"
+#define MSG_PREHEAT_PLA_BEDONLY             "Preesc. llit PLA"
+#define MSG_PREHEAT_PLA_SETTINGS            "Configuració PLA"
+#define MSG_PREHEAT_ABS                     "Preescalfar ABS"
+#define MSG_PREHEAT_ABS0                    "Preescalfar ABS 1"
+#define MSG_PREHEAT_ABS1                    "Preescalfar ABS 2"
+#define MSG_PREHEAT_ABS2                    "Preescalfar ABS 3"
+#define MSG_PREHEAT_ABS012                  "Preesc. tot ABS"
+#define MSG_PREHEAT_ABS_BEDONLY             "Preesc. llit ABS"
+#define MSG_PREHEAT_ABS_SETTINGS            "Configuració ABS"
+#define MSG_COOLDOWN                        "Refredar"
+#define MSG_SWITCH_PS_ON                    "Switch power on"
+#define MSG_SWITCH_PS_OFF                   "Switch power off"
+#define MSG_EXTRUDE                         "Extruir"
+#define MSG_RETRACT                         "Refredar"
+#define MSG_MOVE_AXIS                       "Moure eixos"
+#define MSG_MOVE_X                          "Moure X"
+#define MSG_MOVE_Y                          "Moure Y"
+#define MSG_MOVE_Z                          "Moure Z"
+#define MSG_MOVE_E                          "Extrusor"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Moure 0.1mm"
+#define MSG_MOVE_1MM                        "Moure 1mm"
+#define MSG_MOVE_10MM                       "Moure 10mm"
+#define MSG_SPEED                           "Velocitat"
+#define MSG_NOZZLE                          "Nozzle"
+#define MSG_NOZZLE1                         "Nozzle2"
+#define MSG_NOZZLE2                         "Nozzle3"
+#define MSG_BED                             "Llit"
+#define MSG_FAN_SPEED                       "Vel. Ventilador"
+#define MSG_FLOW                            "Fluxe"
+#define MSG_FLOW0                           "Fluxe 0"
+#define MSG_FLOW1                           "Fluxe 1"
+#define MSG_FLOW2                           "Fluxe 2"
+#define MSG_CONTROL                         "Control"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Fact"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "On "
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Accel"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax "
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "Xpassos/mm"
+#define MSG_YSTEPS                          "Ypassos/mm"
+#define MSG_ZSTEPS                          "Zpassos/mm"
+#define MSG_ESTEPS                          "Epassos/mm"
+#define MSG_TEMPERATURE                     "Temperatura"
+#define MSG_MOTION                          "Moviment"
+#define MSG_CONTRAST                        "Contrast de LCD"
+#define MSG_STORE_EPROM                     "Desar a memoria"
+#define MSG_LOAD_EPROM                      "Carregar de mem."
+#define MSG_RESTORE_FAILSAFE                "Rest. emergencia"
+#define MSG_REFRESH                         "Refrescar"
+#define MSG_WATCH                           "Pantalla Info."
+#define MSG_PREPARE                         "Preparar"
+#define MSG_TUNE                            "Calibrar"
+#define MSG_PAUSE_PRINT                     "Pausa imp."
+#define MSG_RESUME_PRINT                    "Reprendre imp."
+#define MSG_STOP_PRINT                      "Parar inp."
+#define MSG_CARD_MENU                       "Imprimir de SD"
+#define MSG_NO_CARD                         "-Sense targeta SD"
+#define MSG_DWELL                           "Repos..."
+#define MSG_USERWAIT                        "Esperant usuari.."
+#define MSG_RESUMING                        "Reprenent imp."
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Sense moviment."
+#define MSG_KILLED                          "PARADA DE EMERG. "
+#define MSG_STOPPED                         "ATURAT. "
+#define MSG_CONTROL_RETRACT                 "Retreure mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Swap Retreure mm"
+#define MSG_CONTROL_RETRACTF                "Retreure  F"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Aixecar mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Swap DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "DesRet  F"
+#define MSG_AUTORETRACT                     "AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Canviar filament"
+#define MSG_INIT_SDCARD                     "Iniciant SD"
+#define MSG_CNG_SDCARD                      "Canviar SD"
+#define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y abans Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Retreure"
+
+#endif // LANGUAGE_CA_H
diff --git a/Marlin/language_de.h b/Marlin/language_de.h
new file mode 100644
index 0000000..801250b
--- /dev/null
+++ b/Marlin/language_de.h
@@ -0,0 +1,131 @@
+/**
+ * German
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_DE_H
+#define LANGUAGE_DE_H
+
+#define WELCOME_MSG                         MACHINE_NAME " Bereit."
+#define MSG_SD_INSERTED                     "SDKarte erkannt"
+#define MSG_SD_REMOVED                      "SDKarte entfernt"
+#define MSG_MAIN                            "Hauptmenü"
+#define MSG_AUTOSTART                       "Autostart"
+#define MSG_DISABLE_STEPPERS                "Stepper abschalt."
+#define MSG_AUTO_HOME                       "Auto Nullpunkt"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Setze Nullpunkt"
+#define MSG_PREHEAT_PLA                     "Vorwärmen PLA"
+#define MSG_PREHEAT_PLA0                    "Vorwärmen PLA 1"
+#define MSG_PREHEAT_PLA1                    "Vorwärmen PLA 2"
+#define MSG_PREHEAT_PLA2                    "Vorwärmen PLA 3"
+#define MSG_PREHEAT_PLA012                  "Vorw. PLA Alle"
+#define MSG_PREHEAT_PLA_BEDONLY             "Vorw. PLA Bett"
+#define MSG_PREHEAT_PLA_SETTINGS            "Vorwärm. PLA Ein."
+#define MSG_PREHEAT_ABS                     "Vorwärmen ABS"
+#define MSG_PREHEAT_ABS0                    "Vorwärmen ABS 1"
+#define MSG_PREHEAT_ABS1                    "Vorwärmen ABS 2"
+#define MSG_PREHEAT_ABS2                    "Vorwärmen ABS 3"
+#define MSG_PREHEAT_ABS012                  "Vorw. ABS Alle"
+#define MSG_PREHEAT_ABS_BEDONLY             "Vorw. ABS Bett"
+#define MSG_PREHEAT_ABS_SETTINGS            "Vorwärm. ABS Ein."
+#define MSG_COOLDOWN                        "Abkühlen"
+#define MSG_SWITCH_PS_ON                    "Switch Power On"
+#define MSG_SWITCH_PS_OFF                   "Switch Power Off"
+#define MSG_EXTRUDE                         "Extrude"
+#define MSG_RETRACT                         "Retract"
+#define MSG_MOVE_AXIS                       "Achsen bewegen"
+#define MSG_MOVE_X                          "X bewegen"
+#define MSG_MOVE_Y                          "Y bewegen"
+#define MSG_MOVE_Z                          "Z bewegen"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "0.1mm bewegen"
+#define MSG_MOVE_1MM                        "1mm bewegen"
+#define MSG_MOVE_10MM                       "10mm bewegen"
+#define MSG_SPEED                           "Geschw"
+#define MSG_NOZZLE                          "Düse"
+#define MSG_NOZZLE1                         "Düse2"
+#define MSG_NOZZLE2                         "Düse3"
+#define MSG_BED                             "Bett"
+#define MSG_FAN_SPEED                       "Lüftergeschw."
+#define MSG_FLOW                            "Fluss"
+#define MSG_FLOW0                           "Fluss 0"
+#define MSG_FLOW1                           "Fluss 1"
+#define MSG_FLOW2                           "Fluss 2"
+#define MSG_CONTROL                         "Einstellungen"
+#define MSG_MIN                             "\002 Min"
+#define MSG_MAX                             "\002 Max"
+#define MSG_FACTOR                          "\002 Faktor"
+#define MSG_AUTOTEMP                        "AutoTemp"
+#define MSG_ON                              "Ein"
+#define MSG_OFF                             "Aus"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Acc"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax "
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-Retract"
+#define MSG_XSTEPS                          "Xsteps/mm"
+#define MSG_YSTEPS                          "Ysteps/mm"
+#define MSG_ZSTEPS                          "Zsteps/mm"
+#define MSG_ESTEPS                          "Esteps/mm"
+#define MSG_TEMPERATURE                     "Temperatur"
+#define MSG_MOTION                          "Bewegung"
+#define MSG_CONTRAST                        "LCD contrast"
+#define MSG_STORE_EPROM                     "EPROM speichern"
+#define MSG_LOAD_EPROM                      "EPROM laden"
+#define MSG_RESTORE_FAILSAFE                "Standardkonfig."
+#define MSG_REFRESH                         "Aktualisieren"
+#define MSG_WATCH                           "Beobachten"
+#define MSG_PREPARE                         "Vorbereitung"
+#define MSG_TUNE                            "Justierung"
+#define MSG_PAUSE_PRINT                     "Druck anhalten"
+#define MSG_RESUME_PRINT                    "Druck fortsetz"
+#define MSG_STOP_PRINT                      "Druck stoppen"
+#define MSG_CARD_MENU                       "SDKarten Menü"
+#define MSG_NO_CARD                         "Keine SDKarte"
+#define MSG_DWELL                           "Warten..."
+#define MSG_USERWAIT                        "Warte auf Nutzer"
+#define MSG_RESUMING                        "Druck fortsetzung"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Kein Zug."
+#define MSG_KILLED                          "KILLED"
+#define MSG_STOPPED                         "GESTOPPT"
+#define MSG_CONTROL_RETRACT                 "Retract mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Wechs. Retract mm"
+#define MSG_CONTROL_RETRACTF                "Retract  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Hop mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Wechs. UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"
+#define MSG_AUTORETRACT                     "AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Filament wechseln"
+#define MSG_INIT_SDCARD                     "Init. SD-Card"
+#define MSG_CNG_SDCARD                      "Change SD-Card"
+#define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y before Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_STEPPER_RELEASED                "Stepper frei"
+#define MSG_RECTRACT_WIDE                   "Rectract"
+
+#endif // LANGUAGE_DE_H
diff --git a/Marlin/language_en.h b/Marlin/language_en.h
new file mode 100644
index 0000000..c094ff6
--- /dev/null
+++ b/Marlin/language_en.h
@@ -0,0 +1,130 @@
+/**
+ * English
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_EN_H
+#define LANGUAGE_EN_H
+
+#define WELCOME_MSG                         MACHINE_NAME " ready."
+#define MSG_SD_INSERTED                     "Card inserted"
+#define MSG_SD_REMOVED                      "Card removed"
+#define MSG_MAIN                            "Main"
+#define MSG_AUTOSTART                       "Autostart"
+#define MSG_DISABLE_STEPPERS                "Disable steppers"
+#define MSG_AUTO_HOME                       "Auto home"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Set origin"
+#define MSG_PREHEAT_PLA                     "Preheat PLA"
+#define MSG_PREHEAT_PLA0                    "Preheat PLA 1"
+#define MSG_PREHEAT_PLA1                    "Preheat PLA 2"
+#define MSG_PREHEAT_PLA2                    "Preheat PLA 3"
+#define MSG_PREHEAT_PLA012                  "Preheat PLA All"
+#define MSG_PREHEAT_PLA_BEDONLY             "Preheat PLA Bed"
+#define MSG_PREHEAT_PLA_SETTINGS            "Preheat PLA conf"
+#define MSG_PREHEAT_ABS                     "Preheat ABS"
+#define MSG_PREHEAT_ABS0                    "Preheat ABS 1"
+#define MSG_PREHEAT_ABS1                    "Preheat ABS 2"
+#define MSG_PREHEAT_ABS2                    "Preheat ABS 3"
+#define MSG_PREHEAT_ABS012                  "Preheat ABS All"
+#define MSG_PREHEAT_ABS_BEDONLY             "Preheat ABS Bed"
+#define MSG_PREHEAT_ABS_SETTINGS            "Preheat ABS conf"
+#define MSG_COOLDOWN                        "Cooldown"
+#define MSG_SWITCH_PS_ON                    "Switch power on"
+#define MSG_SWITCH_PS_OFF                   "Switch power off"
+#define MSG_EXTRUDE                         "Extrude"
+#define MSG_RETRACT                         "Retract"
+#define MSG_MOVE_AXIS                       "Move axis"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           "Speed"
+#define MSG_NOZZLE                          "Nozzle"
+#define MSG_NOZZLE1                         "Nozzle2"
+#define MSG_NOZZLE2                         "Nozzle3"
+#define MSG_BED                             "Bed"
+#define MSG_FAN_SPEED                       "Fan speed"
+#define MSG_FLOW                            "Flow"
+#define MSG_FLOW0                           "Flow 0"
+#define MSG_FLOW1                           "Flow 1"
+#define MSG_FLOW2                           "Flow 2"
+#define MSG_CONTROL                         "Control"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Fact"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "On "
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Accel"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax "
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "Xsteps/mm"
+#define MSG_YSTEPS                          "Ysteps/mm"
+#define MSG_ZSTEPS                          "Zsteps/mm"
+#define MSG_ESTEPS                          "Esteps/mm"
+#define MSG_TEMPERATURE                     "Temperature"
+#define MSG_MOTION                          "Motion"
+#define MSG_CONTRAST                        "LCD contrast"
+#define MSG_STORE_EPROM                     "Store memory"
+#define MSG_LOAD_EPROM                      "Load memory"
+#define MSG_RESTORE_FAILSAFE                "Restore failsafe"
+#define MSG_REFRESH                         "Refresh"
+#define MSG_WATCH                           "Info screen"
+#define MSG_PREPARE                         "Prepare"
+#define MSG_TUNE                            "Tune"
+#define MSG_PAUSE_PRINT                     "Pause print"
+#define MSG_RESUME_PRINT                    "Resume print"
+#define MSG_STOP_PRINT                      "Stop print"
+#define MSG_CARD_MENU                       "Print from SD"
+#define MSG_NO_CARD                         "No SD card"
+#define MSG_DWELL                           "Sleep..."
+#define MSG_USERWAIT                        "Wait for user..."
+#define MSG_RESUMING                        "Resuming print"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "No move."
+#define MSG_KILLED                          "KILLED. "
+#define MSG_STOPPED                         "STOPPED. "
+#define MSG_CONTROL_RETRACT                 "Retract mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Swap Re.mm"
+#define MSG_CONTROL_RETRACTF                "Retract  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Hop mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "S UnRet+mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"
+#define MSG_AUTORETRACT                     "AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Change filament"
+#define MSG_INIT_SDCARD                     "Init. SD card"
+#define MSG_CNG_SDCARD                      "Change SD card"
+#define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y before Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Rectract"
+
+#endif // LANGUAGE_EN_H
diff --git a/Marlin/language_es.h b/Marlin/language_es.h
new file mode 100644
index 0000000..eff9d6a
--- /dev/null
+++ b/Marlin/language_es.h
@@ -0,0 +1,139 @@
+/**
+ * Spanish
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_ES_H
+#define LANGUAGE_ES_H
+
+#define WELCOME_MSG                         MACHINE_NAME " lista."
+#define MSG_SD_INSERTED                     "Tarjeta colocada"
+#define MSG_SD_REMOVED                      "Tarjeta retirada"
+#define MSG_MAIN                            "Menu principal"
+#define MSG_AUTOSTART                       " Autostart"
+#define MSG_DISABLE_STEPPERS                "Apagar motores"
+#define MSG_AUTO_HOME                       "Llevar al origen"
+#define MSG_SET_HOME_OFFSETS                "Ajustar offsets"
+#define MSG_SET_ORIGIN                      "Establecer cero"
+#define MSG_PREHEAT_PLA                     "Precalentar PLA"
+#define MSG_PREHEAT_PLA0                    "Precalentar PLA 1"
+#define MSG_PREHEAT_PLA1                    "Precalentar PLA 2"
+#define MSG_PREHEAT_PLA2                    "Precalentar PLA 3"
+#define MSG_PREHEAT_PLA012                  "Precal. PLA Todo"
+#define MSG_PREHEAT_PLA_BEDONLY             "Precal. PLA Base"
+#define MSG_PREHEAT_PLA_SETTINGS            "Ajustar temp. PLA"
+#define MSG_PREHEAT_ABS                     "Precalentar ABS"
+#define MSG_PREHEAT_ABS0                    "Precalentar ABS 1"
+#define MSG_PREHEAT_ABS1                    "Precalentar ABS 2"
+#define MSG_PREHEAT_ABS2                    "Precalentar ABS 3"
+#define MSG_PREHEAT_ABS012                  "Precal. ABS Todo"
+#define MSG_PREHEAT_ABS_BEDONLY             "Precal. ABS Base"
+#define MSG_PREHEAT_ABS_SETTINGS            "Ajustar temp. ABS"
+#define MSG_COOLDOWN                        "Enfriar"
+#define MSG_SWITCH_PS_ON                    "Encender"
+#define MSG_SWITCH_PS_OFF                   "Apagar"
+#define MSG_EXTRUDE                         "Extruir"
+#define MSG_RETRACT                         "Retraer"
+#define MSG_MOVE_AXIS                       "Mover ejes"
+#define MSG_MOVE_X                          "Mover X"
+#define MSG_MOVE_Y                          "Mover Y"
+#define MSG_MOVE_Z                          "Mover Z"
+#define MSG_MOVE_E                          "Extrusor"
+#define MSG_MOVE_E1                         "Extrusor2"
+#define MSG_MOVE_E2                         "Extrusor3"
+#define MSG_MOVE_01MM                       "Mover 0.1mm"
+#define MSG_MOVE_1MM                        "Mover 1mm"
+#define MSG_MOVE_10MM                       "Mover 10mm"
+#define MSG_SPEED                           "Velocidad"
+#define MSG_NOZZLE                          "Nozzle"
+#define MSG_NOZZLE1                         "Nozzle2"
+#define MSG_NOZZLE2                         "Nozzle3"
+#define MSG_BED                             "Base"
+#define MSG_FAN_SPEED                       "Ventilador"
+#define MSG_FLOW                            "Flujo"
+#define MSG_FLOW0                           "Flujo 0"
+#define MSG_FLOW1                           "Flujo 1"
+#define MSG_FLOW2                           "Flujo 2"
+#define MSG_CONTROL                         "Control"
+#define MSG_MIN                             "\002 Min"
+#define MSG_MAX                             "\002 Max"
+#define MSG_FACTOR                          "\002 Fact"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "On"
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Acel"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax"
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "Vvacio min"
+#define MSG_AMAX                            "Amax"
+#define MSG_A_RETRACT                       "A-retrac."
+#define MSG_XSTEPS                          "X pasos/mm"
+#define MSG_YSTEPS                          "Y pasos/mm"
+#define MSG_ZSTEPS                          "Z pasos/mm"
+#define MSG_ESTEPS                          "E pasos/mm"
+#define MSG_TEMPERATURE                     "Temperatura"
+#define MSG_MOTION                          "Movimiento"
+#define MSG_CONTRAST                        "Contraste"
+#define MSG_STORE_EPROM                     "Guardar memoria"
+#define MSG_LOAD_EPROM                      "Cargar memoria"
+#define MSG_RESTORE_FAILSAFE                "Rest. de emergen."
+#define MSG_REFRESH                         "Volver a cargar"
+#define MSG_WATCH                           "Monitorizar"
+#define MSG_PREPARE                         "Preparar"
+#define MSG_TUNE                            "Ajustar"
+#define MSG_PAUSE_PRINT                     "Pausar impresion"
+#define MSG_RESUME_PRINT                    "Reanudar impres."
+#define MSG_STOP_PRINT                      "Detener impresion"
+#define MSG_CARD_MENU                       "Menu de SD"
+#define MSG_NO_CARD                         "No hay tarjeta SD"
+#define MSG_DWELL                           "Reposo..."
+#define MSG_USERWAIT                        "Esperando ordenes"
+#define MSG_RESUMING                        "Resumiendo impre."
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Sin movimiento"
+#define MSG_KILLED                          "PARADA DE EMERG."
+#define MSG_STOPPED                         "PARADA"
+#define MSG_CONTROL_RETRACT                 "Retraer mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Interc. Retraer mm"
+#define MSG_CONTROL_RETRACTF                "Retraer  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Levantar mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Interc. DesRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "DesRet V"
+#define MSG_AUTORETRACT                     "AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Cambiar filamento"
+#define MSG_INIT_SDCARD                     "Iniciando tarjeta"
+#define MSG_CNG_SDCARD                      "Cambiar tarjeta"
+#define MSG_ZPROBE_OUT                      "sonda Z fuera"
+#define MSG_POSITION_UNKNOWN                "Reiniciar X/Y y Z"
+#define MSG_ZPROBE_ZOFFSET                  "Offset Z"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Retraer"
+#define MSG_RECTRACT_WIDE                   "Retraer"
+#define MSG_TEMPERATURE_WIDE                "Temperatura"
+#define MSG_TEMPERATURE_RTN                 "Temperatura"
+#define MSG_MAIN_WIDE                       "Menu principal"
+#define MSG_MOTION_WIDE                     "Movimiento"
+#define MSG_PREPARE_ALT                     "Preparar"
+#define MSG_CONTROL_ARROW                   "Control \x7E"
+#define MSG_RETRACT_ARROW                   "Retraer \x7E"
+#define MSG_STEPPER_RELEASED                "Desacoplada."
+
+#endif // LANGUAGE_ES_H
diff --git a/Marlin/language_eu.h b/Marlin/language_eu.h
new file mode 100644
index 0000000..4b31b65
--- /dev/null
+++ b/Marlin/language_eu.h
@@ -0,0 +1,130 @@
+/**
+ * Basque-Euskera
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_EU_H
+#define LANGUAGE_EU_H
+
+#define WELCOME_MSG                         MACHINE_NAME " prest."
+#define MSG_SD_INSERTED                     "Txartela sartuta"
+#define MSG_SD_REMOVED                      "Txartela kenduta"
+#define MSG_MAIN                            "Menu nagusia"
+#define MSG_AUTOSTART                       "Auto hasiera"
+#define MSG_DISABLE_STEPPERS                "Itzali motoreak"
+#define MSG_AUTO_HOME                       "Hasierara joan"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Hasiera ipini"
+#define MSG_PREHEAT_PLA                     "Aurreberotu PLA"
+#define MSG_PREHEAT_PLA0                    "Aurreberotu PLA1"
+#define MSG_PREHEAT_PLA1                    "Aurreberotu PLA2"
+#define MSG_PREHEAT_PLA2                    "Aurreberotu PLA3"
+#define MSG_PREHEAT_PLA012                  "Berotu PLA Guztia"
+#define MSG_PREHEAT_PLA_BEDONLY             "Berotu PLA Ohea"
+#define MSG_PREHEAT_PLA_SETTINGS            "Berotu PLA Konfig"
+#define MSG_PREHEAT_ABS                     "Aurreberotu ABS"
+#define MSG_PREHEAT_ABS0                    "Aurreberotu ABS 1"
+#define MSG_PREHEAT_ABS1                    "Aurreberotu ABS 2"
+#define MSG_PREHEAT_ABS2                    "Aurreberotu ABS 3"
+#define MSG_PREHEAT_ABS012                  "Berotu ABS Guztia"
+#define MSG_PREHEAT_ABS_BEDONLY             "Berotu ABS Ohea"
+#define MSG_PREHEAT_ABS_SETTINGS            "Berotu ABS Konfig"
+#define MSG_COOLDOWN                        "Hoztu"
+#define MSG_SWITCH_PS_ON                    "Energia piztu"
+#define MSG_SWITCH_PS_OFF                   "Energia itzali"
+#define MSG_EXTRUDE                         "Estruitu"
+#define MSG_RETRACT                         "Atzera eragin"
+#define MSG_MOVE_AXIS                       "Ardatzak mugitu"
+#define MSG_MOVE_X                          "Mugitu X"
+#define MSG_MOVE_Y                          "Mugitu Y"
+#define MSG_MOVE_Z                          "Mugitu Z"
+#define MSG_MOVE_E                          "Estrusorea"
+#define MSG_MOVE_E1                         "Estrusorea2"
+#define MSG_MOVE_E2                         "Estrusorea3"
+#define MSG_MOVE_01MM                       "Mugitu 0.1mm"
+#define MSG_MOVE_1MM                        "Mugitu 1mm"
+#define MSG_MOVE_10MM                       "Mugitu 10mm"
+#define MSG_SPEED                           "Abiadura"
+#define MSG_NOZZLE                          "Pita"
+#define MSG_NOZZLE1                         "Pita2"
+#define MSG_NOZZLE2                         "Pita3"
+#define MSG_BED                             "Ohea"
+#define MSG_FAN_SPEED                       "Haizagailua"
+#define MSG_FLOW                            "Fluxua"
+#define MSG_FLOW0                           "Fluxua 0"
+#define MSG_FLOW1                           "Fluxua 1"
+#define MSG_FLOW2                           "Fluxua 2"
+#define MSG_CONTROL                         "Kontrola"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Faktorea"
+#define MSG_AUTOTEMP                        "Auto tenperatura"
+#define MSG_ON                              "On "
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Azelerazioa"
+#define MSG_VXY_JERK                        "Vxy-astindua"
+#define MSG_VZ_JERK                         "Vz-astindua"
+#define MSG_VE_JERK                         "Ve-astindua"
+#define MSG_VMAX                            "Vmax "
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retrakt"
+#define MSG_XSTEPS                          "X pausoak/mm"
+#define MSG_YSTEPS                          "Y pausoak/mm"
+#define MSG_ZSTEPS                          "Z pausoak/mm"
+#define MSG_ESTEPS                          "E pausoak/mm"
+#define MSG_TEMPERATURE                     "Tenperatura"
+#define MSG_MOTION                          "Mugimendua"
+#define MSG_CONTRAST                        "LCD kontrastea"
+#define MSG_STORE_EPROM                     "Gorde memoria"
+#define MSG_LOAD_EPROM                      "Kargatu memoria"
+#define MSG_RESTORE_FAILSAFE                "Larri. berriz."
+#define MSG_REFRESH                         "Berriz kargatu"
+#define MSG_WATCH                           "Pantaila info"
+#define MSG_PREPARE                         "Prestatu"
+#define MSG_TUNE                            "Doitu"
+#define MSG_PAUSE_PRINT                     "Pausatu inprimak."
+#define MSG_RESUME_PRINT                    "Jarraitu inprima."
+#define MSG_STOP_PRINT                      "Gelditu inprima."
+#define MSG_CARD_MENU                       "SD-tik inprimatu"
+#define MSG_NO_CARD                         "Ez dago txartelik"
+#define MSG_DWELL                           "Lo egin..."
+#define MSG_USERWAIT                        "Aginduak zain..."
+#define MSG_RESUMING                        "Jarraitzen inpri."
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Mugimendu gabe"
+#define MSG_KILLED                          "LARRIALDI GELDIA"
+#define MSG_STOPPED                         "GELDITUTA. "
+#define MSG_CONTROL_RETRACT                 "Atzera egin mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Swap Atzera egin mm"
+#define MSG_CONTROL_RETRACTF                "Atzera egin V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Igo mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "Atzera egin +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Swap Atzera egin +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "Atzera egin V"
+#define MSG_AUTORETRACT                     "Atzera egin"
+#define MSG_FILAMENTCHANGE                  "Aldatu filament."
+#define MSG_INIT_SDCARD                     "Hasieratu txartela"
+#define MSG_CNG_SDCARD                      "Aldatu txartela"
+#define MSG_ZPROBE_OUT                      "Z ohe hasiera"
+#define MSG_POSITION_UNKNOWN                "Posizio ezezaguna"
+#define MSG_ZPROBE_ZOFFSET                  "Z konpentsatu"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop deuseztat"
+
+#define MSG_RECTRACT                        "Atzera eragin"
+
+#endif // LANGUAGE_EU_H
diff --git a/Marlin/language_fi.h b/Marlin/language_fi.h
new file mode 100644
index 0000000..b88c375
--- /dev/null
+++ b/Marlin/language_fi.h
@@ -0,0 +1,130 @@
+/**
+ * Finnish
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_FI_H
+#define LANGUAGE_FI_H
+
+#define WELCOME_MSG                         MACHINE_NAME " valmis."
+#define MSG_SD_INSERTED                     "Kortti asetettu"
+#define MSG_SD_REMOVED                      "Kortti poistettu"
+#define MSG_MAIN                            "Palaa"
+#define MSG_AUTOSTART                       "Automaatti"
+#define MSG_DISABLE_STEPPERS                "Vapauta moottorit"
+#define MSG_AUTO_HOME                       "Aja referenssiin"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Aseta origo"
+#define MSG_PREHEAT_PLA                     "Esilammita PLA"
+#define MSG_PREHEAT_PLA0                    "Esilammita PLA 1"
+#define MSG_PREHEAT_PLA1                    "Esilammita PLA 2"
+#define MSG_PREHEAT_PLA2                    "Esilammita PLA 3"
+#define MSG_PREHEAT_PLA012                  "Esila. PLA Kaikki"
+#define MSG_PREHEAT_PLA_BEDONLY             "Esila. PLA Alusta"
+#define MSG_PREHEAT_PLA_SETTINGS            "Esilamm. PLA konf"
+#define MSG_PREHEAT_ABS                     "Esilammita ABS"
+#define MSG_PREHEAT_ABS0                    "Esilammita ABS 1"
+#define MSG_PREHEAT_ABS1                    "Esilammita ABS 2"
+#define MSG_PREHEAT_ABS2                    "Esilammita ABS 3"
+#define MSG_PREHEAT_ABS012                  "Esila. ABS Kaikki"
+#define MSG_PREHEAT_ABS_BEDONLY             "Esila. ABS Alusta"
+#define MSG_PREHEAT_ABS_SETTINGS            "Esilamm. ABS konf"
+#define MSG_COOLDOWN                        "Jaahdyta"
+#define MSG_SWITCH_PS_ON                    "Virta paalle"
+#define MSG_SWITCH_PS_OFF                   "Virta pois"
+#define MSG_EXTRUDE                         "Pursota"
+#define MSG_RETRACT                         "Veda takaisin"
+#define MSG_MOVE_AXIS                       "Liikuta akseleita"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           "Nopeus"
+#define MSG_NOZZLE                          "Suutin"
+#define MSG_NOZZLE1                         "Suutin2"
+#define MSG_NOZZLE2                         "Suutin3"
+#define MSG_BED                             "Alusta"
+#define MSG_FAN_SPEED                       "Tuul. nopeus"
+#define MSG_FLOW                            "Virtaus"
+#define MSG_FLOW0                           "Virtaus 0"
+#define MSG_FLOW1                           "Virtaus 1"
+#define MSG_FLOW2                           "Virtaus 2"
+#define MSG_CONTROL                         "Kontrolli"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Kerr"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "On "
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Kiihtyv"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax "
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VLiike min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-peruuta"
+#define MSG_XSTEPS                          "Xsteps/mm"
+#define MSG_YSTEPS                          "Ysteps/mm"
+#define MSG_ZSTEPS                          "Zsteps/mm"
+#define MSG_ESTEPS                          "Esteps/mm"
+#define MSG_TEMPERATURE                     "Lampotila"
+#define MSG_MOTION                          "Liike"
+#define MSG_CONTRAST                        "LCD contrast"
+#define MSG_STORE_EPROM                     "Tallenna muistiin"
+#define MSG_LOAD_EPROM                      "Lataa muistista"
+#define MSG_RESTORE_FAILSAFE                "Palauta oletus"
+#define MSG_REFRESH                         "Paivita"
+#define MSG_WATCH                           "Seuraa"
+#define MSG_PREPARE                         "Valmistele"
+#define MSG_TUNE                            "Saada"
+#define MSG_PAUSE_PRINT                     "Keskeyta tulostus"
+#define MSG_RESUME_PRINT                    "Jatka tulostusta"
+#define MSG_STOP_PRINT                      "Pysayta tulostus"
+#define MSG_CARD_MENU                       "Korttivalikko"
+#define MSG_NO_CARD                         "Ei korttia"
+#define MSG_DWELL                           "Nukkumassa..."
+#define MSG_USERWAIT                        "Odotet. valintaa"
+#define MSG_RESUMING                        "Jatke. tulostusta"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Ei liiketta."
+#define MSG_KILLED                          "KILLED. "
+#define MSG_STOPPED                         "STOPPED. "
+#define MSG_CONTROL_RETRACT                 "Veda mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Va. Veda mm"
+#define MSG_CONTROL_RETRACTF                "Veda V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Z mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Va. UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"
+#define MSG_AUTORETRACT                     "AutoVeto."
+#define MSG_FILAMENTCHANGE                  "Change filament"
+#define MSG_INIT_SDCARD                     "Init. SD-Card"
+#define MSG_CNG_SDCARD                      "Change SD-Card"
+#define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y before Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Veda takaisin"
+
+#endif // LANGUAGE_FI_H
diff --git a/Marlin/language_fr.h b/Marlin/language_fr.h
new file mode 100644
index 0000000..ffcfeb4
--- /dev/null
+++ b/Marlin/language_fr.h
@@ -0,0 +1,131 @@
+/**
+ * French
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_FR_H
+#define LANGUAGE_FR_H
+
+#define WELCOME_MSG                         MACHINE_NAME " prete."
+#define MSG_SD_INSERTED                     "Carte inseree"
+#define MSG_SD_REMOVED                      "Carte retiree"
+#define MSG_MAIN                            "Menu principal"
+#define MSG_AUTOSTART                       "Demarrage auto"
+#define MSG_DISABLE_STEPPERS                "Arreter moteurs"
+#define MSG_AUTO_HOME                       "Home auto."
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Regler origine"
+#define MSG_PREHEAT_PLA                     "Prechauffage PLA"
+#define MSG_PREHEAT_PLA0                    "Prechauff. PLA 1"
+#define MSG_PREHEAT_PLA1                    "Prechauff. PLA 2"
+#define MSG_PREHEAT_PLA2                    "Prechauff. PLA 3"
+#define MSG_PREHEAT_PLA012                  "Prech. PLA Tout"
+#define MSG_PREHEAT_PLA_BEDONLY             "Prech. PLA Plateau"
+#define MSG_PREHEAT_PLA_SETTINGS            "Regl. prech. PLA"
+#define MSG_PREHEAT_ABS                     "Prechauffage ABS"
+#define MSG_PREHEAT_ABS0                    "Prechauff. ABS 1"
+#define MSG_PREHEAT_ABS1                    "Prechauff. ABS 2"
+#define MSG_PREHEAT_ABS2                    "Prechauff. ABS 3"
+#define MSG_PREHEAT_ABS012                  "Prech. ABS Tout"
+#define MSG_PREHEAT_ABS_BEDONLY             "Prech. ABS Plateau"
+#define MSG_PREHEAT_ABS_SETTINGS            "Regl. prech. ABS"
+#define MSG_COOLDOWN                        "Refroidir"
+#define MSG_SWITCH_PS_ON                    "Allumer alim."
+#define MSG_SWITCH_PS_OFF                   "Eteindre alim."
+#define MSG_EXTRUDE                         "Extrusion"
+#define MSG_RETRACT                         "Retraction"
+#define MSG_MOVE_AXIS                       "Deplacer un axe"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           " Vitesse"
+#define MSG_NOZZLE                          "Buse"
+#define MSG_NOZZLE1                         "Buse2"
+#define MSG_NOZZLE2                         "Buse3"
+#define MSG_BED                             "Plateau"
+#define MSG_FAN_SPEED                       "Vite. ventilateur"
+#define MSG_FLOW                            "Flux"
+#define MSG_FLOW0                           "Flux 0"
+#define MSG_FLOW1                           "Flux 1"
+#define MSG_FLOW2                           "Flux 2"
+#define MSG_CONTROL                         "Controler"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Facteur"
+#define MSG_AUTOTEMP                        "Temp. Auto."
+#define MSG_ON                              "Marche "
+#define MSG_OFF                             "Arret"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Accel"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax"
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "Vdepl min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "Xpas/mm"
+#define MSG_YSTEPS                          "Ypas/mm"
+#define MSG_ZSTEPS                          "Zpas/mm"
+#define MSG_ESTEPS                          "Epas/mm"
+#define MSG_TEMPERATURE                     "Temperature"
+#define MSG_MOTION                          "Mouvement"
+#define MSG_CONTRAST                        "Contraste LCD"
+#define MSG_STORE_EPROM                     "Sauver config"
+#define MSG_LOAD_EPROM                      "Lire config"
+#define MSG_RESTORE_FAILSAFE                "Restaurer defauts"
+#define MSG_REFRESH                         "Actualiser"
+#define MSG_WATCH                           "Surveiller"
+#define MSG_PREPARE                         "Preparer"
+#define MSG_TUNE                            "Regler"
+#define MSG_PAUSE_PRINT                     "Interrompre impr."
+#define MSG_RESUME_PRINT                    "Reprendre impr."
+#define MSG_STOP_PRINT                      "Arreter impr."
+#define MSG_CARD_MENU                       "Impr. depuis SD"
+#define MSG_NO_CARD                         "Pas de carte"
+#define MSG_DWELL                           "Repos..."
+#define MSG_USERWAIT                        "Atten. de l'util."
+#define MSG_RESUMING                        "Repri. de l'impr."
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Aucun mouvement."
+#define MSG_KILLED                          "MORT."
+#define MSG_STOPPED                         "STOPPE."
+#define MSG_CONTROL_RETRACT                 "Retraction mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Ech. Retr. mm"
+#define MSG_CONTROL_RETRACTF                "Retraction V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Hop mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Ech. UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet V"
+#define MSG_AUTORETRACT                     "Retract. Auto."
+#define MSG_FILAMENTCHANGE                  "Changer filament"
+#define MSG_INIT_SDCARD                     "Init. la carte SD"
+#define MSG_CNG_SDCARD                      "Changer de carte"
+#define MSG_ZPROBE_OUT                      "Z sonde exte. lit"
+#define MSG_POSITION_UNKNOWN                "Rev. dans XY av.Z"
+#define MSG_ZPROBE_ZOFFSET                  "Offset Z"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Butee abandon"
+
+#define MSG_RECTRACT                        "Rectract"
+#define MSG_STEPPER_RELEASED                "RELACHE."
+
+#endif // LANGUAGE_FR_H
diff --git a/Marlin/language_it.h b/Marlin/language_it.h
new file mode 100644
index 0000000..b70a084
--- /dev/null
+++ b/Marlin/language_it.h
@@ -0,0 +1,130 @@
+/**
+ * Italian
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_IT_H
+#define LANGUAGE_IT_H
+
+#define WELCOME_MSG                         MACHINE_NAME " pronto."
+#define MSG_SD_INSERTED                     "SD Card inserita"
+#define MSG_SD_REMOVED                      "SD Card rimossa"
+#define MSG_MAIN                            "Menu principale"
+#define MSG_AUTOSTART                       "Autostart"
+#define MSG_DISABLE_STEPPERS                "Disabilita Motori"
+#define MSG_AUTO_HOME                       "Auto Home"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Imposta Origine"
+#define MSG_PREHEAT_PLA                     "Preriscalda PLA"
+#define MSG_PREHEAT_PLA0                    "Preriscalda PLA 1"
+#define MSG_PREHEAT_PLA1                    "Preriscalda PLA 2"
+#define MSG_PREHEAT_PLA2                    "Preriscalda PLA 3"
+#define MSG_PREHEAT_PLA012                  "Preris. PLA Tutto"
+#define MSG_PREHEAT_PLA_BEDONLY             "Preri. PLA Piatto"
+#define MSG_PREHEAT_PLA_SETTINGS            "Preris. PLA Conf"
+#define MSG_PREHEAT_ABS                     "Preriscalda ABS"
+#define MSG_PREHEAT_ABS0                    "Preriscalda ABS 1"
+#define MSG_PREHEAT_ABS1                    "Preriscalda ABS 2"
+#define MSG_PREHEAT_ABS2                    "Preriscalda ABS 3"
+#define MSG_PREHEAT_ABS012                  "Preris. ABS Tutto"
+#define MSG_PREHEAT_ABS_BEDONLY             "Preri. ABS Piatto"
+#define MSG_PREHEAT_ABS_SETTINGS            "Preris. ABS Conf"
+#define MSG_COOLDOWN                        "Raffredda"
+#define MSG_SWITCH_PS_ON                    "Switch Power On"
+#define MSG_SWITCH_PS_OFF                   "Switch Power Off"
+#define MSG_EXTRUDE                         "Estrudi"
+#define MSG_RETRACT                         "Ritrai"
+#define MSG_MOVE_AXIS                       "Muovi Asse"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           "Velcità"
+#define MSG_NOZZLE                          "Ugello"
+#define MSG_NOZZLE1                         "Ugello2"
+#define MSG_NOZZLE2                         "Ugello3"
+#define MSG_BED                             "Piatto"
+#define MSG_FAN_SPEED                       "Ventola"
+#define MSG_FLOW                            "Flusso"
+#define MSG_FLOW0                           "Flusso 0"
+#define MSG_FLOW1                           "Flusso 1"
+#define MSG_FLOW2                           "Flusso 2"
+#define MSG_CONTROL                         "Controllo"
+#define MSG_MIN                             " \002 Min:"
+#define MSG_MAX                             " \002 Max:"
+#define MSG_FACTOR                          " \002 Fact:"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "On "
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Accel"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax"
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax"
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "Xpassi/mm"
+#define MSG_YSTEPS                          "Ypassi/mm"
+#define MSG_ZSTEPS                          "Zpassi/mm"
+#define MSG_ESTEPS                          "Epassi/mm"
+#define MSG_TEMPERATURE                     "Temperatura"
+#define MSG_MOTION                          "Movimento"
+#define MSG_CONTRAST                        "LCD contrast"
+#define MSG_STORE_EPROM                     "Salva in EEPROM"
+#define MSG_LOAD_EPROM                      "Carica da EEPROM"
+#define MSG_RESTORE_FAILSAFE                "Impostaz. default"
+#define MSG_REFRESH                         "Aggiorna"
+#define MSG_WATCH                           "Guarda"
+#define MSG_PREPARE                         "Prepara"
+#define MSG_TUNE                            "Adatta"
+#define MSG_PAUSE_PRINT                     "Pausa"
+#define MSG_RESUME_PRINT                    "Riprendi Stampa"
+#define MSG_STOP_PRINT                      "Arresta Stampa"
+#define MSG_CARD_MENU                       "SD Card Menu"
+#define MSG_NO_CARD                         "No SD Card"
+#define MSG_DWELL                           "Sospensione..."
+#define MSG_USERWAIT                        "Attendi Utente..."
+#define MSG_RESUMING                        "Riprendi Stampa"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Nessun Movimento."
+#define MSG_KILLED                          "UCCISO. "
+#define MSG_STOPPED                         "ARRESTATO. "
+#define MSG_CONTROL_RETRACT                 "Ritrai mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Scamb. Ritrai mm"
+#define MSG_CONTROL_RETRACTF                "Ritrai  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Salta mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Scamb. UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"
+#define MSG_AUTORETRACT                     "AutoArretramento"
+#define MSG_FILAMENTCHANGE                  "Cambia filamento"
+#define MSG_INIT_SDCARD                     "Iniz. SD-Card"
+#define MSG_CNG_SDCARD                      "Cambia SD-Card"
+#define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y before Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Ritrai"
+
+#endif // LANGUAGE_IT_H
diff --git a/Marlin/language_nl.h b/Marlin/language_nl.h
new file mode 100644
index 0000000..56162d3
--- /dev/null
+++ b/Marlin/language_nl.h
@@ -0,0 +1,130 @@
+/**
+ * Dutch
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_NL_H
+#define LANGUAGE_NL_H
+
+#define WELCOME_MSG                         MACHINE_NAME " gereed."
+#define MSG_SD_INSERTED                     "Kaart ingestoken"
+#define MSG_SD_REMOVED                      "Kaart verwijderd"
+#define MSG_MAIN                            "Main"
+#define MSG_AUTOSTART                       "Autostart"
+#define MSG_DISABLE_STEPPERS                "Motoren uit"
+#define MSG_AUTO_HOME                       "Auto home"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Nulpunt instellen"
+#define MSG_PREHEAT_PLA                     "PLA voorverwarmen"
+#define MSG_PREHEAT_PLA0                    "PLA voorverw. 0"
+#define MSG_PREHEAT_PLA1                    "PLA voorverw. 1"
+#define MSG_PREHEAT_PLA2                    "PLA voorverw. 2"
+#define MSG_PREHEAT_PLA012                  "PLA voorverw. aan"
+#define MSG_PREHEAT_PLA_BEDONLY             "PLA voorverw. Bed"
+#define MSG_PREHEAT_PLA_SETTINGS            "PLA verw. conf"
+#define MSG_PREHEAT_ABS                     "ABS voorverwarmen"
+#define MSG_PREHEAT_ABS0                    "ABS voorverw. 0"
+#define MSG_PREHEAT_ABS1                    "ABS voorverw. 1"
+#define MSG_PREHEAT_ABS2                    "ABS voorverw. 2"
+#define MSG_PREHEAT_ABS012                  "ABS voorverw. aan"
+#define MSG_PREHEAT_ABS_BEDONLY             "ABS voorverw. Bed"
+#define MSG_PREHEAT_ABS_SETTINGS            "ABS verw. conf"
+#define MSG_COOLDOWN                        "Afkoelen"
+#define MSG_SWITCH_PS_ON                    "Stroom aan"
+#define MSG_SWITCH_PS_OFF                   "Stroom uit"
+#define MSG_EXTRUDE                         "Extrude"
+#define MSG_RETRACT                         "Retract"
+#define MSG_MOVE_AXIS                       "As verplaatsen"
+#define MSG_MOVE_X                          "Verplaats X"
+#define MSG_MOVE_Y                          "Verplaats Y"
+#define MSG_MOVE_Z                          "Verplaats Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Verplaats 0.1mm"
+#define MSG_MOVE_1MM                        "Verplaats 1mm"
+#define MSG_MOVE_10MM                       "Verplaats 10mm"
+#define MSG_SPEED                           "Snelheid"
+#define MSG_NOZZLE                          "Nozzle"
+#define MSG_NOZZLE1                         "Nozzle2"
+#define MSG_NOZZLE2                         "Nozzle3"
+#define MSG_BED                             "Bed"
+#define MSG_FAN_SPEED                       "Fan snelheid"
+#define MSG_FLOW                            "Flow"
+#define MSG_FLOW0                           "Flow 0"
+#define MSG_FLOW1                           "Flow 1"
+#define MSG_FLOW2                           "Flow 2"
+#define MSG_CONTROL                         "Control"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Fact"
+#define MSG_AUTOTEMP                        "Autotemp"
+#define MSG_ON                              "Aan "
+#define MSG_OFF                             "Uit"
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Versn"
+#define MSG_VXY_JERK                        "Vxy-jerk"
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax "
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "VTrav min"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retract"
+#define MSG_XSTEPS                          "Xsteps/mm"
+#define MSG_YSTEPS                          "Ysteps/mm"
+#define MSG_ZSTEPS                          "Zsteps/mm"
+#define MSG_ESTEPS                          "Esteps/mm"
+#define MSG_TEMPERATURE                     "Temperatuur"
+#define MSG_MOTION                          "Beweging"
+#define MSG_CONTRAST                        "LCD contrast"
+#define MSG_STORE_EPROM                     "Geheugen opslaan"
+#define MSG_LOAD_EPROM                      "Geheugen laden"
+#define MSG_RESTORE_FAILSAFE                "Noodstop reset"
+#define MSG_REFRESH                         "Ververs"
+#define MSG_WATCH                           "Info scherm"
+#define MSG_PREPARE                         "Voorbereiden"
+#define MSG_TUNE                            "Afstellen"
+#define MSG_PAUSE_PRINT                     "Print pauzeren"
+#define MSG_RESUME_PRINT                    "Print hervatten"
+#define MSG_STOP_PRINT                      "Print stoppen"
+#define MSG_CARD_MENU                       "Print van SD"
+#define MSG_NO_CARD                         "Geen SD kaart"
+#define MSG_DWELL                           "Slapen..."
+#define MSG_USERWAIT                        "Wachten..."
+#define MSG_RESUMING                        "Print hervatten"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Geen beweging."
+#define MSG_KILLED                          "AFGEBROKEN. "
+#define MSG_STOPPED                         "GESTOPT. "
+#define MSG_CONTROL_RETRACT                 "Retract mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Ruil Retract mm"
+#define MSG_CONTROL_RETRACTF                "Retract  F"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Hop mm"
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Ruil UnRet +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  F"
+#define MSG_AUTORETRACT                     "AutoRetr."
+#define MSG_FILAMENTCHANGE                  "Verv. Filament"
+#define MSG_INIT_SDCARD                     "Init. SD kaart"
+#define MSG_CNG_SDCARD                      "Verv. SD card"
+#define MSG_ZPROBE_OUT                      "Z probe uit. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y voor Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystap X"
+#define MSG_BABYSTEP_Y                      "Babystap Y"
+#define MSG_BABYSTEP_Z                      "Babystap Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop afbr."
+
+#define MSG_RECTRACT                        "Terugtrekken"
+
+#endif // LANGUAGE_NL_H
diff --git a/Marlin/language_pl.h b/Marlin/language_pl.h
new file mode 100644
index 0000000..430b900
--- /dev/null
+++ b/Marlin/language_pl.h
@@ -0,0 +1,131 @@
+/**
+ * Polish
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_PL_H
+#define LANGUAGE_PL_H
+
+#define WELCOME_MSG                         MACHINE_NAME " gotowy."
+#define MSG_SD_INSERTED                     "Karta wlozona"
+#define MSG_SD_REMOVED                      "Karta usunieta"
+#define MSG_MAIN                            "Menu glowne"
+#define MSG_AUTOSTART                       "Autostart"
+#define MSG_DISABLE_STEPPERS                "Wylacz silniki"
+#define MSG_AUTO_HOME                       "Auto. poz. zerowa"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Ustaw punkt zero"
+#define MSG_PREHEAT_PLA                     "Rozgrzej PLA"
+#define MSG_PREHEAT_PLA0                    "Rozgrzej PLA 1"
+#define MSG_PREHEAT_PLA1                    "Rozgrzej PLA 2"
+#define MSG_PREHEAT_PLA2                    "Rozgrzej PLA 3"
+#define MSG_PREHEAT_PLA012                  "Roz. PLA Wszystko"
+#define MSG_PREHEAT_PLA_BEDONLY             "Rozgrzej PLA Loze"
+#define MSG_PREHEAT_PLA_SETTINGS            "Ustaw. rozg. PLA"
+#define MSG_PREHEAT_ABS                     "Rozgrzej ABS"
+#define MSG_PREHEAT_ABS0                    "Rozgrzej ABS 1"
+#define MSG_PREHEAT_ABS1                    "Rozgrzej ABS 2"
+#define MSG_PREHEAT_ABS2                    "Rozgrzej ABS 3"
+#define MSG_PREHEAT_ABS012                  "Roz. ABS Wszystko"
+#define MSG_PREHEAT_ABS_BEDONLY             "Rozgrzej ABS Loze"
+#define MSG_PREHEAT_ABS_SETTINGS            "Ustaw. rozg. ABS"
+#define MSG_COOLDOWN                        "Chlodzenie"
+#define MSG_SWITCH_PS_ON                    "Wlacz zasilacz"
+#define MSG_SWITCH_PS_OFF                   "Wylacz zasilacz"
+#define MSG_EXTRUDE                         "Ekstruzja"
+#define MSG_RETRACT                         "Cofanie"
+#define MSG_MOVE_AXIS                       "Ruch osi"
+#define MSG_MOVE_X                          "Przesun w X"
+#define MSG_MOVE_Y                          "Przesun w Y"
+#define MSG_MOVE_Z                          "Przesun w Z"
+#define MSG_MOVE_E                          "Ekstruzja (os E)"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Przesuwaj co .1mm"
+#define MSG_MOVE_1MM                        "Przesuwaj co 1mm"
+#define MSG_MOVE_10MM                       "Przesuwaj co 10mm"
+#define MSG_SPEED                           "Predkosc"
+#define MSG_NOZZLE                          "Dysza"
+#define MSG_NOZZLE1                         "Dysza 2"
+#define MSG_NOZZLE2                         "Dysza 3"
+#define MSG_BED                             "Loze"
+#define MSG_FAN_SPEED                       "Obroty wiatraka"
+#define MSG_FLOW                            "Przeplyw"
+#define MSG_FLOW0                           "Przeplyw 0"
+#define MSG_FLOW1                           "Przeplyw 1"
+#define MSG_FLOW2                           "Przeplyw 2"
+#define MSG_CONTROL                         "Ustawienia"
+#define MSG_MIN                             " \002 Min"
+#define MSG_MAX                             " \002 Max"
+#define MSG_FACTOR                          " \002 Mnoznik"
+#define MSG_AUTOTEMP                        "Auto. temperatura"
+#define MSG_ON                              "Wl. "
+#define MSG_OFF                             "Wyl."
+#define MSG_PID_P                           "PID-P"
+#define MSG_PID_I                           "PID-I"
+#define MSG_PID_D                           "PID-D"
+#define MSG_PID_C                           "PID-C"
+#define MSG_ACC                             "Przyspieszenie"
+#define MSG_VXY_JERK                        "Zryw Vxy"
+#define MSG_VZ_JERK                         "Zryw Vz"
+#define MSG_VE_JERK                         "Zryw Ve"
+#define MSG_VMAX                            "Vmax"
+#define MSG_X                               "x"
+#define MSG_Y                               "y"
+#define MSG_Z                               "z"
+#define MSG_E                               "e"
+#define MSG_VMIN                            "Vmin"
+#define MSG_VTRAV_MIN                       "Vskok min"
+#define MSG_AMAX                            "Amax"
+#define MSG_A_RETRACT                       "A-wycofanie"
+#define MSG_XSTEPS                          "krokiX/mm"
+#define MSG_YSTEPS                          "krokiY/mm"
+#define MSG_ZSTEPS                          "krokiZ/mm"
+#define MSG_ESTEPS                          "krokiE/mm"
+#define MSG_TEMPERATURE                     "Temperatura"
+#define MSG_MOTION                          "Ruch"
+#define MSG_CONTRAST                        "Kontrast LCD"
+#define MSG_STORE_EPROM                     "Zapisz w pamieci"
+#define MSG_LOAD_EPROM                      "Wczytaj z pamieci"
+#define MSG_RESTORE_FAILSAFE                "Ustaw. fabryczne"
+#define MSG_REFRESH                         "\004Odswiez"
+#define MSG_WATCH                           "Ekran glowny"
+#define MSG_PREPARE                         "Przygotuj"
+#define MSG_TUNE                            "Strojenie"
+#define MSG_PAUSE_PRINT                     "Pauza"
+#define MSG_RESUME_PRINT                    "Wznowienie"
+#define MSG_STOP_PRINT                      "Stop"
+#define MSG_CARD_MENU                       "Menu karty SD"
+#define MSG_NO_CARD                         "Brak karty"
+#define MSG_DWELL                           "Uspij..."
+#define MSG_USERWAIT                        "Oczekiwanie..."
+#define MSG_RESUMING                        "Wznawianie druku"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Brak ruchu"
+#define MSG_KILLED                          "Ubity. "
+#define MSG_STOPPED                         "Zatrzymany. "
+#define MSG_CONTROL_RETRACT                 "Wycofaj mm"
+#define MSG_CONTROL_RETRACT_SWAP            "Z Wycof. mm"
+#define MSG_CONTROL_RETRACTF                "Wycofaj  V"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Skok Z mm:"
+#define MSG_CONTROL_RETRACT_RECOVER         "Cof. wycof. +mm"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Z Cof. wyc. +mm"
+#define MSG_CONTROL_RETRACT_RECOVERF        "Cof. wycof.  V"
+#define MSG_AUTORETRACT                     "Auto. wycofanie"
+#define MSG_FILAMENTCHANGE                  "Zmien filament"
+#define MSG_INIT_SDCARD                     "Inicjal. karty SD"
+#define MSG_CNG_SDCARD                      "Zmiana karty SD"
+#define MSG_ZPROBE_OUT                      "Sonda Z za lozem"
+#define MSG_POSITION_UNKNOWN                "Wroc w XY przed Z"
+#define MSG_ZPROBE_ZOFFSET                  "Offset Z"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Blad wyl. kranc."
+
+#define MSG_RECTRACT                        "Wycofanie"
+#define MSG_STEPPER_RELEASED                "Zwolniony."
+
+#endif // LANGUAGE_PL_H
diff --git a/Marlin/language_pt.h b/Marlin/language_pt.h
new file mode 100644
index 0000000..5c6f4fe
--- /dev/null
+++ b/Marlin/language_pt.h
@@ -0,0 +1,135 @@
+/**
+ * Portuguese
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_PT_H
+#define LANGUAGE_PT_H
+
+#define WELCOME_MSG							MACHINE_NAME " pronto."
+#define MSG_SD_INSERTED                     "Cartao inserido"
+#define MSG_SD_REMOVED                      "Cartao removido"
+#define MSG_MAIN                            " Menu principal \003"
+#define MSG_AUTOSTART                       "Autostart"
+#define MSG_DISABLE_STEPPERS                " Apagar motores"
+#define MSG_AUTO_HOME                       "Ir para origen"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Estabelecer orig."
+#define MSG_PREHEAT_PLA                     "Pre-aquecer PLA"
+#define MSG_PREHEAT_PLA0                    " pre-aquecer PLA 1"
+#define MSG_PREHEAT_PLA1                    " pre-aquecer PLA 2"
+#define MSG_PREHEAT_PLA2                    " pre-aquecer PLA 3"
+#define MSG_PREHEAT_PLA012                  " pre-aq. PLA Tudo"
+#define MSG_PREHEAT_PLA_BEDONLY             " pre-aq. PLA \002Base"
+#define MSG_PREHEAT_PLA_SETTINGS            "PLA setting"
+#define MSG_PREHEAT_ABS                     "Pre-aquecer ABS"
+#define MSG_PREHEAT_ABS0                    " pre-aquecer ABS 1"
+#define MSG_PREHEAT_ABS1                    " pre-aquecer ABS 2"
+#define MSG_PREHEAT_ABS2                    " pre-aquecer ABS 3"
+#define MSG_PREHEAT_ABS012                  " pre-aq. ABS Tudo"
+#define MSG_PREHEAT_ABS_BEDONLY             " pre-aq. ABS \002Base"
+#define MSG_PREHEAT_ABS_SETTINGS            "ABS setting"
+#define MSG_COOLDOWN                        "Esfriar"
+#define MSG_SWITCH_PS_ON                    "Switch Power On"
+#define MSG_SWITCH_PS_OFF                   "Switch Power Off"
+#define MSG_EXTRUDE                         "Extrudar"
+#define MSG_RETRACT                         "Retrair"
+#define MSG_MOVE_AXIS                       "Mover eixo      \x7E"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           "Velocidade:"
+#define MSG_NOZZLE                          "\002Nozzle:"
+#define MSG_NOZZLE1                         "\002Nozzle2:"
+#define MSG_NOZZLE2                         "\002Nozzle3:"
+#define MSG_BED                             "\002Base:"
+#define MSG_FAN_SPEED                       "Velocidade vento."
+#define MSG_FLOW                            "Fluxo:"
+#define MSG_FLOW0                           "Fluxo0:"
+#define MSG_FLOW1                           "Fluxo1:"
+#define MSG_FLOW2                           "Fluxo2:"
+#define MSG_CONTROL                         "Controle \003"
+#define MSG_MIN                             "\002 Min:"
+#define MSG_MAX                             "\002 Max:"
+#define MSG_FACTOR                          "\002 Fact:"
+#define MSG_AUTOTEMP                        "Autotemp:"
+#define MSG_ON                              "On "
+#define MSG_OFF                             "Off"
+#define MSG_PID_P                           "PID-P: "
+#define MSG_PID_I                           "PID-I: "
+#define MSG_PID_D                           "PID-D: "
+#define MSG_PID_C                           "PID-C: "
+#define MSG_ACC                             "Acc:"
+#define MSG_VXY_JERK                        "Vxy-jerk: "
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            " Vmax "
+#define MSG_X                               "x:"
+#define MSG_Y                               "y:"
+#define MSG_Z                               "z:"
+#define MSG_E                               "e:"
+#define MSG_VMIN                            "Vmin:"
+#define MSG_VTRAV_MIN                       "VTrav min:"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retract:"
+#define MSG_XSTEPS                          "Xpasso/mm:"
+#define MSG_YSTEPS                          "Ypasso/mm:"
+#define MSG_ZSTEPS                          "Zpasso/mm:"
+#define MSG_ESTEPS                          "Epasso/mm:"
+#define MSG_TEMPERATURE                     "Temperatura"
+#define MSG_MOTION                          "Movimento"
+#define MSG_CONTRAST                        "Contrast"
+#define MSG_STORE_EPROM                     "Guardar memoria"
+#define MSG_LOAD_EPROM                      "Carregar memoria"
+#define MSG_RESTORE_FAILSAFE                "Rest. de emergen."
+#define MSG_REFRESH                         "\004Recarregar"
+#define MSG_WATCH                           "Monitorar   \003"
+#define MSG_PREPARE                         "Preparar \x7E"
+#define MSG_TUNE                            "Tune    \x7E"
+#define MSG_PAUSE_PRINT                     "Pausar impressao"
+#define MSG_RESUME_PRINT                    "Resumir impressao"
+#define MSG_STOP_PRINT                      "Parar impressao"
+#define MSG_CARD_MENU                       "Menu cartao SD"
+#define MSG_NO_CARD                         "Sem cartao SD"
+#define MSG_DWELL                           "Repouso..."
+#define MSG_USERWAIT                        "Esperando ordem"
+#define MSG_RESUMING                        "Resuming print"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Sem movimento"
+#define MSG_KILLED                          "PARADA DE EMERG."
+#define MSG_STOPPED                         "PARADA. "
+#define MSG_CONTROL_RETRACT                 " Retrair mm:"
+#define MSG_CONTROL_RETRACT_SWAP            "Troca Retrair mm:"
+#define MSG_CONTROL_RETRACTF                " Retrair  V:"
+#define MSG_CONTROL_RETRACT_ZLIFT           " Levantar mm:"
+#define MSG_CONTROL_RETRACT_RECOVER         " DesRet +mm:"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "Troca DesRet +mm:"
+#define MSG_CONTROL_RETRACT_RECOVERF        " DesRet  V:"
+#define MSG_AUTORETRACT                     " AutoRetr.:"
+#define MSG_FILAMENTCHANGE                  "Change filament"
+#define MSG_INIT_SDCARD                     "Init. SD-Card"
+#define MSG_CNG_SDCARD                      "Change SD-Card"
+#define MSG_ZPROBE_OUT                      "Son. fora da mesa"
+#define MSG_POSITION_UNKNOWN                "XY antes de Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Retrair"
+#define MSG_MAIN_WIDE                       "Menu Principal  \003"
+#define MSG_PREPARE_ALT                     "Preparar \003"
+#define MSG_CONTROL_ARROW                   "Controle \x7E"
+#define MSG_RETRACT_ARROW                   "Retrair \x7E"
+#define MSG_STEPPER_RELEASED                "Lancado."
+
+#endif // LANGUAGE_PT_H
diff --git a/Marlin/language_ru.h b/Marlin/language_ru.h
new file mode 100644
index 0000000..844b377
--- /dev/null
+++ b/Marlin/language_ru.h
@@ -0,0 +1,130 @@
+/**
+ * Russian
+ *
+ * LCD Menu Messages
+ * Please note these are limited to 17 characters!
+ *
+ */
+#ifndef LANGUAGE_RU_H
+#define LANGUAGE_RU_H
+
+#define WELCOME_MSG                         MACHINE_NAME "Готов."
+#define MSG_SD_INSERTED                     "Карта вставлена"
+#define MSG_SD_REMOVED                      "Карта извлечена"
+#define MSG_MAIN                            "Меню \003"
+#define MSG_AUTOSTART                       "Автостарт"
+#define MSG_DISABLE_STEPPERS                "Выкл. двигатели"
+#define MSG_AUTO_HOME                       "Парковка"
+#define MSG_SET_HOME_OFFSETS                "Set home offsets"
+#define MSG_SET_ORIGIN                      "Запомнить ноль"
+#define MSG_PREHEAT_PLA                     "Преднагрев PLA"
+#define MSG_PREHEAT_PLA0                    "Преднагрев PLA0"
+#define MSG_PREHEAT_PLA1                    "Преднагрев PLA1"
+#define MSG_PREHEAT_PLA2                    "Преднагрев PLA2"
+#define MSG_PREHEAT_PLA012                  "Преднаг. PLA все"
+#define MSG_PREHEAT_PLA_BEDONLY             "Пред. PLA Кровать"
+#define MSG_PREHEAT_PLA_SETTINGS            "Настройки PLA"
+#define MSG_PREHEAT_ABS                     "Преднагрев ABS"
+#define MSG_PREHEAT_ABS0                    "Преднагрев ABS0"
+#define MSG_PREHEAT_ABS1                    "Преднагрев ABS1"
+#define MSG_PREHEAT_ABS2                    "Преднагрев ABS2"
+#define MSG_PREHEAT_ABS012                  "Преднаг. ABS все "
+#define MSG_PREHEAT_ABS_BEDONLY             "Пред. ABS Кровать"
+#define MSG_PREHEAT_ABS_SETTINGS            "Настройки ABS"
+#define MSG_COOLDOWN                        "Охлаждение"
+#define MSG_SWITCH_PS_ON                    "Switch Power On"
+#define MSG_SWITCH_PS_OFF                   "Switch Power Off"
+#define MSG_EXTRUDE                         "Экструзия"
+#define MSG_RETRACT                         "Откат"
+#define MSG_MOVE_AXIS                       "Движение по осям"
+#define MSG_MOVE_X                          "Move X"
+#define MSG_MOVE_Y                          "Move Y"
+#define MSG_MOVE_Z                          "Move Z"
+#define MSG_MOVE_E                          "Extruder"
+#define MSG_MOVE_E1                         "Extruder2"
+#define MSG_MOVE_E2                         "Extruder3"
+#define MSG_MOVE_01MM                       "Move 0.1mm"
+#define MSG_MOVE_1MM                        "Move 1mm"
+#define MSG_MOVE_10MM                       "Move 10mm"
+#define MSG_SPEED                           "Скорость:"
+#define MSG_NOZZLE                          "\002 Фильера:"
+#define MSG_NOZZLE1                         "\002 Фильера2:"
+#define MSG_NOZZLE2                         "\002 Фильера3:"
+#define MSG_BED                             "\002 Кровать:"
+#define MSG_FAN_SPEED                       "Куллер:"
+#define MSG_FLOW                            "Поток:"
+#define MSG_FLOW0                           " Поток0:"
+#define MSG_FLOW1                           " Поток1:"
+#define MSG_FLOW2                           " Поток2:"
+#define MSG_CONTROL                         "Настройки \003"
+#define MSG_MIN                             "\002 Минимум:"
+#define MSG_MAX                             "\002 Максимум:"
+#define MSG_FACTOR                          "\002 Фактор:"
+#define MSG_AUTOTEMP                        "Autotemp:"
+#define MSG_ON                              "Вкл. "
+#define MSG_OFF                             "Выкл. "
+#define MSG_PID_P                           "PID-P: "
+#define MSG_PID_I                           "PID-I: "
+#define MSG_PID_D                           "PID-D: "
+#define MSG_PID_C                           "PID-C: "
+#define MSG_ACC                             "Acc:"
+#define MSG_VXY_JERK                        "Vxy-jerk: "
+#define MSG_VZ_JERK                         "Vz-jerk"
+#define MSG_VE_JERK                         "Ve-jerk"
+#define MSG_VMAX                            "Vmax "
+#define MSG_X                               "x:"
+#define MSG_Y                               "y:"
+#define MSG_Z                               "z:"
+#define MSG_E                               "e:"
+#define MSG_VMIN                            "Vmin:"
+#define MSG_VTRAV_MIN                       "VTrav min:"
+#define MSG_AMAX                            "Amax "
+#define MSG_A_RETRACT                       "A-retract:"
+#define MSG_XSTEPS                          "X шаг/mm:"
+#define MSG_YSTEPS                          "Y шаг/mm:"
+#define MSG_ZSTEPS                          "Z шаг/mm:"
+#define MSG_ESTEPS                          "E шаг/mm:"
+#define MSG_TEMPERATURE                     "Температура     \x7E"
+#define MSG_MOTION                          "Скорости        \x7E"
+#define MSG_CONTRAST                        "LCD contrast"
+#define MSG_STORE_EPROM                     "Сохранить в EPROM"
+#define MSG_LOAD_EPROM                      "Загруз. из EPROM"
+#define MSG_RESTORE_FAILSAFE                "Сброс настроек"
+#define MSG_REFRESH                         "\004Обновить"
+#define MSG_WATCH                           "Обзор           \003"
+#define MSG_PREPARE                         "Действия        \x7E"
+#define MSG_TUNE                            "Настройки       \x7E"
+#define MSG_PAUSE_PRINT                     "Продолжить печать"
+#define MSG_RESUME_PRINT                    "возобн. печать"
+#define MSG_STOP_PRINT                      "Остановить печать"
+#define MSG_CARD_MENU                       "Меню карты      \x7E"
+#define MSG_NO_CARD                         "Нет карты"
+#define MSG_DWELL                           "Сон..."
+#define MSG_USERWAIT                        "Ожиданиие"
+#define MSG_RESUMING                        "Resuming print"
+#define MSG_PRINT_ABORTED                   "Print aborted"
+#define MSG_NO_MOVE                         "Нет движения."
+#define MSG_KILLED                          "УБИТО."
+#define MSG_STOPPED                         "ОСТАНОВЛЕНО."
+#define MSG_CONTROL_RETRACT                 "Откат mm:"
+#define MSG_CONTROL_RETRACT_SWAP            "своп Откат mm:"
+#define MSG_CONTROL_RETRACTF                "Откат  V:"
+#define MSG_CONTROL_RETRACT_ZLIFT           "Прыжок mm:"
+#define MSG_CONTROL_RETRACT_RECOVER         "Возврат +mm:"
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "своп Возврат +mm:"
+#define MSG_CONTROL_RETRACT_RECOVERF        "Возврат  V:"
+#define MSG_AUTORETRACT                     "АвтоОткат:"
+#define MSG_FILAMENTCHANGE                  "Change filament"
+#define MSG_INIT_SDCARD                     "Init. SD-Card"
+#define MSG_CNG_SDCARD                      "Change SD-Card"
+#define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_POSITION_UNKNOWN                "Home X/Y before Z"
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
+#define MSG_BABYSTEP_X                      "Babystep X"
+#define MSG_BABYSTEP_Y                      "Babystep Y"
+#define MSG_BABYSTEP_Z                      "Babystep Z"
+#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+
+#define MSG_RECTRACT                        "Откат подачи    \x7E"
+
+#endif // LANGUAGE_RU_H
diff --git a/Marlin/pins.h b/Marlin/pins.h
index 13cb905..906522b 100644
--- a/Marlin/pins.h
+++ b/Marlin/pins.h
@@ -1,7 +1,9 @@
 #ifndef PINS_H
 #define PINS_H
 
-#if MOTHERBOARD != 88
+#include "boards.h"
+
+#if !MB(5DPRINT)
 #define X_MS1_PIN -1
 #define X_MS2_PIN -1
 #define Y_MS1_PIN -1
@@ -20,7 +22,7 @@
 * https://bitbucket.org/makible/5dprint-d8-controller-board
 ****************************************************************************************/
 
-#if MOTHERBOARD == 88
+#if MB(5DPRINT)
 
 #define KNOWN_BOARD 1
 #define AT90USB 1286  // Disable MarlinSerial etc.
@@ -92,13 +94,13 @@
 #define E0_MS1_PIN 5
 #define E0_MS2_PIN 4
 
-#endif /* 88 */
+#endif // 5DPRINT
 
 /****************************************************************************************
 * Leapfrog Driver board
 * 
 ****************************************************************************************/
-#if MOTHERBOARD == 999  // Leapfrog board
+#if MB(LEAPFROG)  // Leapfrog board
 #define KNOWN_BOARD 1
 
 #ifndef __AVR_ATmega1280__
@@ -162,14 +164,14 @@
 /*  Unused (1) (2) (3) 4 5 6 7 8 9 10 11 12 13 (14) (15) (16) 17 (18) (19) (20) (21) (22) (23) 24 (25) (26) (27) 28 (29) (30) (31)  */
 
 
-#endif
+#endif // LEAPFROG
 
 /****************************************************************************************
 *
 *
 ****************************************************************************************/
 
-#if MOTHERBOARD == 99
+#if MB(99)
 #define KNOWN_BOARD 1
 
 #define X_STEP_PIN          2
@@ -207,14 +209,14 @@
 #define HEATER_BED_PIN      4
 #define TEMP_BED_PIN       10
 
-#endif /* 99 */
+#endif // 99
 
 /****************************************************************************************
 * Sethi 3D_1 pin assignment - www.sethi3d.com.br
 *
 ****************************************************************************************/
 
-#if MOTHERBOARD == 20
+#if MB(SETHI)
 #define KNOWN_BOARD
 
 #if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
@@ -285,7 +287,7 @@
 #define TX_ENABLE_PIN 12
 #define RX_ENABLE_PIN 13
 
-#endif
+#endif // SETHI
 
 /****************************************************************************************
 * Gen7 v1.1, v1.2, v1.3 pin assignment
@@ -293,12 +295,12 @@
 ****************************************************************************************/
 
 
-#if MOTHERBOARD == 12
-#define MOTHERBOARD 11
+#if MB(GEN7_13)
+#define MOTHERBOARD BOARD_GEN7_12
 #define GEN7_VERSION 13 // v1.3
 #endif
 
-#if MOTHERBOARD == 11
+#if MB(GEN7_12)
 #define KNOWN_BOARD
 
 #if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
@@ -376,11 +378,11 @@
 *
 ****************************************************************************************/
 
-#if MOTHERBOARD == 13
+#if MB(GEN7_14)
 #define GEN7_VERSION 14 // v1.4
 #endif
 
-#if MOTHERBOARD == 13
+#if MB(GEN7_14)
 #define KNOWN_BOARD
 
 #if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
@@ -442,22 +444,19 @@
 #define TX_ENABLE_PIN 12
 #define RX_ENABLE_PIN 13
 
-#endif
+#endif // GEN7
 
-/*******************************************************************************
-*********
+/******************************************************************************
 * Gen7 Alfons3  pin assignment
 *
-********************************************************************************
-********/
+******************************************************************************/
 /* These Pins are assigned for the modified GEN7 Board from Alfons3 Please review the pins and adjust it for your needs*/
 
-#if MOTHERBOARD == 10
+#if MB(GEN7_CUSTOM)
 #define KNOWN_BOARD
 
 #if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__) && !defined(__AVR_ATmega1284P__)
     #error Oops!  Make sure you have 'Gen7' selected from the 'Tools -> Boards' menu.
-
 #endif
 
 //x axis pins
@@ -525,13 +524,13 @@
     #define BTN_EN2 10
     #define BTN_ENC 12  //the click
 
-#endif
+#endif // GEN7_CUSTOM
 
 /****************************************************************************************
 * Arduino Mega pin assignment
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 3 || MOTHERBOARD == 33 || MOTHERBOARD == 34 || MOTHERBOARD == 35 || MOTHERBOARD == 36 || MOTHERBOARD == 77 || MOTHERBOARD == 67 || MOTHERBOARD == 68
+#if IS_RAMPS || MB(3DRAG) || MB(AZTEEG_X3) || MB(AZTEEG_X3_PRO)
 #define KNOWN_BOARD 1
 
 //////////////////FIX THIS//////////////
@@ -547,11 +546,11 @@
 // #define RAMPS_V_1_0
 
 
-#if MOTHERBOARD == 33 || MOTHERBOARD == 34 || MOTHERBOARD == 35 || MOTHERBOARD == 36 ||  MOTHERBOARD == 77 || MOTHERBOARD == 67 || MOTHERBOARD == 68
+#if (IS_RAMPS && !MB(RAMPS_OLD)) || MB(3DRAG) || MB(AZTEEG_X3) || MB(AZTEEG_X3_PRO)
 
   #define LARGE_FLASH true
 
-  #if MOTHERBOARD == 77
+  #if MB(3DRAG)
     #define X_STEP_PIN         54
     #define X_DIR_PIN          55
     #define X_ENABLE_PIN       38
@@ -628,16 +627,16 @@
     #define E1_DIR_PIN         34
     #define E1_ENABLE_PIN      30
 
-#if MOTHERBOARD == 34  //FMM added for Filament Extruder
+#if MB(RAMPS_13_EEB)  //FMM added for Filament Extruder
 #ifdef FILAMENT_SENSOR
-	  //define analog pin for the filament width sensor input
-	  //Use the RAMPS 1.4 Analog input 5 on the AUX2 connector
+    //define analog pin for the filament width sensor input
+    //Use the RAMPS 1.4 Analog input 5 on the AUX2 connector
       #define FILWIDTH_PIN        5
 #endif
 #endif
 
 
-    #if MOTHERBOARD == 68
+    #if MB(AZTEEG_X3_PRO)
       #define E2_STEP_PIN        23
       #define E2_DIR_PIN         25
       #define E2_ENABLE_PIN      40
@@ -656,17 +655,17 @@
     #define LED_PIN            13
   #endif
 
-  #if MOTHERBOARD == 33 || MOTHERBOARD == 35 || MOTHERBOARD == 67 || MOTHERBOARD == 68
+  #if MB(RAMPS_13_EFB) || MB(RAMPS_13_EFF) || MB(AZTEEG_X3) || MB(AZTEEG_X3_PRO)
     #define FAN_PIN            9 // (Sprinter config)
   #else
     #define FAN_PIN            4 // IO pin. Buffer needed
   #endif
 
-  #if MOTHERBOARD == 77 || MOTHERBOARD == 36
+  #if MB(3DRAG) || MB(RAMPS_13_EEF)
     #define FAN_PIN            8
   #endif
 
-  #if MOTHERBOARD == 35
+  #if MB(RAMPS_13_EFF)
     #define CONTROLLERFAN_PIN  -1 //Pin used for the fan to cool controller
   #endif
 
@@ -678,24 +677,24 @@
     #define KILL_PIN           -1
   #endif
 
-  #if MOTHERBOARD == 35
+  #if MB(RAMPS_13_EFF)
     #define HEATER_0_PIN       8
   #else
     #define HEATER_0_PIN       10   // EXTRUDER 1
   #endif
 
-  #if MOTHERBOARD == 33 || MOTHERBOARD == 67
+  #if MB(RAMPS_13_EFB) || MB(AZTEEG_X3)
     #define HEATER_1_PIN       -1
   #else
     #define HEATER_1_PIN       9    // EXTRUDER 2 (FAN On Sprinter)
   #endif
 
 
-  #if MOTHERBOARD == 77
+  #if MB(3DRAG)
     #define HEATER_0_PIN       10
     #define HEATER_1_PIN       12
     #define HEATER_2_PIN       6
-  #elif MOTHERBOARD == 68
+  #elif MB(AZTEEG_X3_PRO)
     #define HEATER_2_PIN       16
     #define HEATER_3_PIN       17
     #define HEATER_4_PIN       4
@@ -708,7 +707,7 @@
 
   #define TEMP_0_PIN         13   // ANALOG NUMBERING
   #define TEMP_1_PIN         15   // ANALOG NUMBERING
-  #if MOTHERBOARD == 68
+  #if MB(AZTEEG_X3_PRO)
     #define TEMP_2_PIN         12   // ANALOG NUMBERING
     #define TEMP_3_PIN         11   // ANALOG NUMBERING
     #define TEMP_4_PIN         10   // ANALOG NUMBERING
@@ -718,10 +717,10 @@
     #define TEMP_2_PIN         -1   // ANALOG NUMBERING
   #endif
 
-  #if MOTHERBOARD == 35 || MOTHERBOARD == 36
+  #if MB(RAMPS_13_EFF) || MB(RAMPS_13_EEF)
     #define HEATER_BED_PIN     -1    // NO BED
   #else
-    #if MOTHERBOARD == 77
+    #if MB(3DRAG)
       #define HEATER_BED_PIN     9    // BED
     #else
       #define HEATER_BED_PIN     8    // BED
@@ -746,12 +745,12 @@
     #endif
   #endif
 
-  #if MOTHERBOARD == 68
+  #if MB(AZTEEG_X3_PRO)
     #define BEEPER 33
   #endif
 
   #ifdef TEMP_STAT_LEDS
-    #if MOTHERBOARD == 67
+    #if MB(AZTEEG_X3)
       #define STAT_LED_RED       6
       #define STAT_LED_BLUE     11
     #endif
@@ -814,7 +813,7 @@
 
       #endif
 
-      #if MOTHERBOARD == 77
+      #if MB(3DRAG)
         #define BEEPER -1
 
         #define LCD_PINS_RS 27
@@ -832,10 +831,10 @@
     #endif
     #else //old style panel with shift register
       //arduino pin witch triggers an piezzo beeper
-      #define BEEPER 33		//No Beeper added
+      #define BEEPER 33   //No Beeper added
 
       //buttons are attached to a shift register
-	// Not wired this yet
+  // Not wired this yet
       //#define SHIFT_CLK 38
       //#define SHIFT_LD 42
       //#define SHIFT_OUT 40
@@ -850,7 +849,7 @@
     #endif
   #endif //ULTRA_LCD
 
-#else // RAMPS_V_1_1 or RAMPS_V_1_2 as default (MOTHERBOARD == 3)
+#else // RAMPS_V_1_1 or RAMPS_V_1_2 as default (BOARD_RAMPS_OLD)
 
 #define X_STEP_PIN         26
 #define X_DIR_PIN          28
@@ -896,7 +895,7 @@
 #define TEMP_2_PIN          -1
 #define TEMP_BED_PIN        1    // MUST USE ANALOG INPUT NUMBERING NOT DIGITAL OUTPUT NUMBERING!!!!!!!!!
 
-#endif // MOTHERBOARD == 33 || MOTHERBOARD == 34 || MOTHERBOARD == 35 || MOTHERBOARD == 77
+#endif // RAMPS_13_EFB || RAMPS_13_EEB || RAMPS_13_EFF || 3DRAG
 
 // SPI for Max6675 Thermocouple
 
@@ -910,13 +909,13 @@
   #define MAX6675_SS       49
 #endif
 
-#endif //MOTHERBOARD == 3 || MOTHERBOARD == 33 || MOTHERBOARD == 34 || MOTHERBOARD == 35 || MOTHERBOARD == 77
+#endif // RAMPS_OLD || RAMPS_13_EFB || RAMPS_13_EEB || RAMPS_13_EFF || 3DRAG
 
 /****************************************************************************************
 * Duemilanove w/ ATMega328P pin assignment
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 4
+#if MB(DUEMILANOVE_328P)
 #define KNOWN_BOARD 1
 
 #ifndef __AVR_ATmega328P__
@@ -958,25 +957,25 @@
 #define HEATER_BED_PIN      -1
 #define TEMP_BED_PIN        -1
 
-#endif
+#endif // DUEMILANOVE_328P
 
 /****************************************************************************************
 * Elefu RA Board Pin Assignments
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 21
-#define	KNOWN_BOARD 1
+#if MB(ELEFU_3)
+#define KNOWN_BOARD 1
 
 #ifndef __AVR_ATmega2560__
  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
 #endif
 
 
-#define X_STEP_PIN		     49
-#define X_DIR_PIN			     13
-#define X_ENABLE_PIN		   48
-#define X_MIN_PIN			     35
-#define X_MAX_PIN			     -1 //34
+#define X_STEP_PIN         49
+#define X_DIR_PIN          13
+#define X_ENABLE_PIN       48
+#define X_MIN_PIN          35
+#define X_MAX_PIN          -1 //34
 
 #define Y_STEP_PIN         11
 #define Y_DIR_PIN          9
@@ -1008,18 +1007,18 @@
 #define FAN_PIN            16 //5V PWM
 
 #define PS_ON_PIN          10 //Set to -1 if using a manual switch on the PWRSW Connector
-#define SLEEP_WAKE_PIN		 26 //This feature still needs work
+#define SLEEP_WAKE_PIN     26 //This feature still needs work
 
-#define HEATER_0_PIN       45	//12V PWM1
-#define HEATER_1_PIN       46	//12V PWM2
-#define HEATER_2_PIN       17	//12V PWM3
-#define HEATER_BED_PIN     44	//DOUBLE 12V PWM
-#define TEMP_0_PIN         3	//ANALOG NUMBERING
-#define TEMP_1_PIN         2 	//ANALOG NUMBERING
-#define TEMP_2_PIN         1 	//ANALOG NUMBERING
-#define TEMP_BED_PIN       0	//ANALOG NUMBERING
+#define HEATER_0_PIN       45 //12V PWM1
+#define HEATER_1_PIN       46 //12V PWM2
+#define HEATER_2_PIN       17 //12V PWM3
+#define HEATER_BED_PIN     44 //DOUBLE 12V PWM
+#define TEMP_0_PIN         3  //ANALOG NUMBERING
+#define TEMP_1_PIN         2  //ANALOG NUMBERING
+#define TEMP_2_PIN         1  //ANALOG NUMBERING
+#define TEMP_BED_PIN       0  //ANALOG NUMBERING
 
-#define BEEPER 		         36
+#define BEEPER             36
 
 #define KILL_PIN           -1
 
@@ -1082,14 +1081,14 @@
 #endif //RA_LIGHTING
 
 
-#endif /* Ra Board */
+#endif // ELEFU_3
 
 
 /****************************************************************************************
 * Gen6 pin assignment
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 5 || MOTHERBOARD == 51
+#if MB(GEN6) || MB(GEN6_DELUXE)
 #define KNOWN_BOARD 1
 
 #ifndef __AVR_ATmega644P__
@@ -1128,7 +1127,7 @@
     #define HEATER_0_PIN    14    //changed @ rkoeppl 20110410
     #define HEATER_1_PIN    -1
     #define HEATER_2_PIN    -1
-    #if MOTHERBOARD == 5
+    #if MB(GEN6)
     #define HEATER_BED_PIN  -1    //changed @ rkoeppl 20110410
     #define TEMP_BED_PIN    -1    //changed @ rkoeppl 20110410
     #else
@@ -1149,32 +1148,32 @@
     #define TX_ENABLE_PIN 12
     #define RX_ENABLE_PIN 13
 
-
-#endif
+#endif // GEN6 || GEN6_DELUXE
 
 /****************************************************************************************
 * Sanguinololu pin assignment
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 64
+#if MB(STB_11)
 #define STB
 #endif
-#if MOTHERBOARD == 63 || MOTHERBOARD == 66
+#if MB(MELZI) || MB(MELZI_1284)
 #define MELZI
 #endif
-#if MOTHERBOARD == 65
+#if MB(AZTEEG_X1)
 #define AZTEEG_X1
 #endif
-#if MOTHERBOARD == 62 || MOTHERBOARD == 63 || MOTHERBOARD == 64 || MOTHERBOARD == 65 || MOTHERBOARD == 66
+#if MB(SANGUINOLOLU_12) || MB(MELZI) || MB(STB_11) || MB(AZTEEG_X1) || MB(MELZI_1284)
 #undef MOTHERBOARD
-#define MOTHERBOARD 6
+#define MOTHERBOARD BOARD_SANGUINOLOLU_11
 #define SANGUINOLOLU_V_1_2
 
 #if defined(__AVR_ATmega1284P__)
-	#define LARGE_FLASH true
+  #define LARGE_FLASH true
 #endif
 #endif
-#if MOTHERBOARD == 6
+
+#if MB(SANGUINOLOLU_11)
 #define KNOWN_BOARD 1
 #ifndef __AVR_ATmega644P__
 #ifndef __AVR_ATmega1284P__
@@ -1211,7 +1210,7 @@
 
 #ifdef STB
  #define FAN_PIN            4
-	//  Uncomment this if you have the first generation (V1.10) of STBs board
+  //  Uncomment this if you have the first generation (V1.10) of STBs board
  #define LCD_PIN_BL         17 // LCD backlight LED
 #endif
 
@@ -1322,7 +1321,7 @@
      // Pins for DOGM SPI LCD Support
      #define DOGLCD_A0  30
      #define DOGLCD_CS  17
-     #define LCD_PIN_BL	28	// backlight LED on PA3
+     #define LCD_PIN_BL 28  // backlight LED on PA3
      // GLCD features
      #define LCD_CONTRAST 1
      // Uncomment screen orientation
@@ -1338,15 +1337,16 @@
      #define SDCARDDETECT -1
  #endif //Makrpanel
 
-#endif
+#endif // SANGUINOLOLU_11
 
 
-#if MOTHERBOARD == 7
-#define KNOWN_BOARD
 /*****************************************************************
 * Ultimaker pin assignment
 ******************************************************************/
 
+#if MB(ULTIMAKER)
+#define KNOWN_BOARD
+
 #ifndef __AVR_ATmega1280__
  #ifndef __AVR_ATmega2560__
  #error Oops!  Make sure you have 'Arduino Mega' selected from the 'Tools -> Boards' menu.
@@ -1442,9 +1442,9 @@
   #endif
 #endif //ULTRA_LCD
 
-#endif
+#endif // ULTIMAKER
 
-#if MOTHERBOARD == 71
+#if MB(ULTIMAKER_OLD)
 #define KNOWN_BOARD
 /*****************************************************************
 * Ultimaker pin assignment (Old electronics)
@@ -1511,9 +1511,9 @@
 #define LCD_PINS_D6 32
 #define LCD_PINS_D7 30
 
-#endif
+#endif // ULTIMAKER_OLD
 
-#if MOTHERBOARD == 72
+#if MB(ULTIMAIN_2)
 #define KNOWN_BOARD
 /*****************************************************************
 * Ultiboard v2.0 pin assignment
@@ -1596,13 +1596,13 @@
 
 #define SDCARDDETECT 39
 
-#endif//MOTHERBOARD == 72
+#endif // ULTIMAIN_2
 
 /****************************************************************************************
 * RUMBA pin assignment
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 80
+#if MB(RUMBA)
 #define KNOWN_BOARD 1
 
 #ifndef __AVR_ATmega2560__
@@ -1712,7 +1712,7 @@
 #define BTN_EN2            12
 #define BTN_ENC            43
 
-#endif //MOTHERBOARD==80
+#endif // RUMBA
 
 
 /****************************************************************************************
@@ -1721,7 +1721,7 @@
   http://www.pjrc.com/teensy/teensyduino.html
 * See http://reprap.org/wiki/Printrboard for more info
 ****************************************************************************************/
-#if MOTHERBOARD == 8 || MOTHERBOARD == 81
+#if MB(TEENSYLU) || MB(PRINTRBOARD)
 #define KNOWN_BOARD 1
 #define AT90USB 1286  // Disable MarlinSerial etc.
 
@@ -1759,7 +1759,7 @@
 // You may need to change FAN_PIN to 16 because Marlin isn't using fastio.h
 // for the fan and Teensyduino uses a different pin mapping.
 
-#if MOTHERBOARD == 8  // Teensylu
+#if MB(TEENSYLU)  // Teensylu
   #define X_STOP_PIN         13
   #define Y_STOP_PIN         14
   #define Z_STOP_PIN         15
@@ -1793,14 +1793,14 @@
   #define MOSI_PIN         10
 #endif
 
-#endif  // MOTHERBOARD == 8 (Teensylu) or 81 (Printrboard)
+#endif // TEENSYLU || PRINTRBOARD
 
 /****************************************************************************************
  * Brainwave 1.0 pin assignments (AT90USB646)
  * Requires hardware bundle for Arduino:
    https://github.com/unrepentantgeek/brainwave-arduino
  ****************************************************************************************/
-#if MOTHERBOARD == 82
+#if MB(BRAINWAVE)
 #define KNOWN_BOARD 1
 #define AT90USB 646  // Disable MarlinSerial etc.
 
@@ -1856,7 +1856,7 @@
   #define MOSI_PIN         10
 #endif
 
-#endif  // MOTHERBOARD == 82 (Brainwave)
+#endif // BRAINWAVE
 
 //
 // SAV Mk-I
@@ -1867,7 +1867,7 @@
   http://www.pjrc.com/teensy/teensyduino.html
    RepRap Clone Wars project board.
 ****************************************************************************************/
-#if MOTHERBOARD == 83  // SAV Mk-I
+#if MB(SAV_MKI)  // SAV Mk-I
 #define KNOWN_BOARD 1
 #define AT90USB 1286  // Disable MarlinSerial etc.
 
@@ -1941,7 +1941,7 @@
 #define SR_DATA_PIN         0
 #define SR_CLK_PIN          1
 
-#endif  // MOTHERBOARD == 83
+#endif // SAV_MKI
 
 /****************************************************************************************
 * Teensy++ 2.0 Breadboard pin assignments (AT90USB1286)
@@ -1951,7 +1951,7 @@
 * CLI build: DEFINES=AT90USBxx_TEENSYPP_ASSIGNMENTS HARDWARE_MOTHERBOARD=84  make
 * 
 ****************************************************************************************/
-#if MOTHERBOARD == 84
+#if MB(TEENSY2)
 #define KNOWN_BOARD 1
 #define AT90USB 1286  // Disable MarlinSerial etc.
 
@@ -2036,7 +2036,7 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #define TEMP_2_PIN         -1
 
 #define SDPOWER            -1
-#define SDCARDDETECT       -1		
+#define SDCARDDETECT       -1   
 #define SDSS               20 // 8
 #define LED_PIN             6
 #define PS_ON_PIN          27
@@ -2062,15 +2062,15 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #define BTN_ENC            40
 #endif
 
-#endif  // MOTHERBOARD == 84 (Teensy++2.0 Breadboard)
+#endif // TEENSY2
 
 
 /****************************************************************************************
 * Gen3+ pin assignment
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 9
-#define MOTHERBOARD 6   /*TODO: Figure out, Why is this done?*/
+#if MB(GEN3_PLUS)
+#define MOTHERBOARD BOARD_SANGUINOLOLU_11   /*TODO: Figure out, Why is this done?*/
 #define KNOWN_BOARD 1
 #ifndef __AVR_ATmega644P__
 #ifndef __AVR_ATmega1284P__
@@ -2116,13 +2116,13 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #define SDSS               4
 #define HEATER_2_PIN       -1
 
-#endif
+#endif // GEN3_PLUS
 
 /****************************************************************************************
 * Gen3  Monolithic Electronics
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 22
+#if MB(GEN3_MONOLITHIC)
 #define KNOWN_BOARD 1
 
 #ifndef __AVR_ATmega644P__
@@ -2170,12 +2170,12 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #define TEMP_BED_PIN -1
 
 
-#define SDSS		 -1
+#define SDSS     -1
 #define SDPOWER          -1
 #define LED_PIN          -1
 
 //pin for controlling the PSU.
-#define PS_ON_PIN       14	//Alex, Do this work on the card?
+#define PS_ON_PIN       14  //Alex, Do this work on the card?
 
 //Alex extras from Gen3+
 #define KILL_PIN           -1
@@ -2183,7 +2183,7 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #define TEMP_2_PIN         -1
 #define HEATER_2_PIN       -1
 
-#endif
+#endif // GEN3_MONOLITHIC
 
 /****************************************************************************************
 * Open Motion controller with enable based extruders
@@ -2214,7 +2214,7 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 *                        +--------+
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 90 //Alpha OMCA board
+#if MB(OMCA_A) //Alpha OMCA board
 #define KNOWN_BOARD 1
 
 #ifndef __AVR_ATmega644__
@@ -2266,9 +2266,9 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #define TEMP_BED_PIN       -1 // 1,2 or I2C
 /*  Unused (1) (2) (3) 4 5 6 7 8 9 10 11 12 13 (14) (15) (16) 17 (18) (19) (20) (21) (22) (23) 24 (25) (26) (27) 28 (29) (30) (31)  */
 
-#endif
+#endif // OMCA_A
 
-#if MOTHERBOARD == 91  // Final OMCA board -- REF http://sanguino.cc/hardware
+#if MB(OMCA)  // Final OMCA board -- REF http://sanguino.cc/hardware
 #define KNOWN_BOARD 1
 
 #if !defined(__AVR_ATmega644P__) && !defined(__AVR_ATmega644__)
@@ -2332,14 +2332,13 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #define I2C_SCL       16
 #define I2C_SDA       17
 
-#endif
+#endif // OMCA
 
-#if MOTHERBOARD == 301
-#define KNOWN_BOARD
 /*****************************************************************
 * Rambo Pin Assignments
 ******************************************************************/
-
+#if MB(RAMBO)
+#define KNOWN_BOARD
 #ifndef __AVR_ATmega2560__
 #error Oops!  Make sure you have 'Arduino Mega 2560' selected from the 'Tools -> Boards' menu.
 #endif
@@ -2478,13 +2477,13 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
   #define FILWIDTH_PIN        3
 #endif //FILAMENT_SENSOR
 
-#endif
+#endif // RAMBO
 
 /****************************************************************************************
 * MegaTronics
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 70
+#if MB(MEGATRONICS)
 #define KNOWN_BOARD 1
 
 
@@ -2570,7 +2569,7 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
     #define BLEN_B 1
     #define BLEN_A 0
 
-    #define SDCARDDETECT -1		// Ramps does not use this port
+    #define SDCARDDETECT -1   // Ramps does not use this port
 
       //encoder rotation values
     #define encrot0 0
@@ -2580,13 +2579,13 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
 #endif
 #endif //ULTRA_LCD
 
-#endif
+#endif // MEGATRONICS
 
 /****************************************************************************************
 * MegaTronics v2.0
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 701
+#if MB(MEGATRONICS_2)
  #define KNOWN_BOARD 1
 
 
@@ -2682,7 +2681,7 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
  #define BLEN_B 1
  #define BLEN_A 0
 
- #define SDCARDDETECT -1	// Megatronics does not use this port
+ #define SDCARDDETECT -1  // Megatronics does not use this port
 
    //encoder rotation values
  #define encrot0 0
@@ -2690,14 +2689,14 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
  #define encrot2 3
  #define encrot3 1
 
-#endif
+#endif // MEGATRONICS_2
 
 
 /****************************************************************************************
 * Minitronics v1.0
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 702
+#if MB(MEGATRONICS_1)
  #define KNOWN_BOARD 1
 
 
@@ -2778,7 +2777,7 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
  #define BLEN_B 1
  #define BLEN_A 0
 
- #define SDCARDDETECT -1	// Megatronics does not use this port
+ #define SDCARDDETECT -1  // Megatronics does not use this port
 
    //encoder rotation values
  #define encrot0 0
@@ -2786,13 +2785,13 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
  #define encrot2 3
  #define encrot3 1
 
-#endif
+#endif // MEGATRONICS_1
 
 /****************************************************************************************
 * Cheaptronic v1.0
 *
 ****************************************************************************************/
-#if MOTHERBOARD == 2
+#if MB(CHEAPTRONIC)
  #define KNOWN_BOARD 1
 
  #ifndef __AVR_ATmega2560__
@@ -2887,7 +2886,7 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
  #define encrot2 3
  #define encrot3 1
 
-#endif
+#endif // CHEAPTRONIC
 
 
 
@@ -2954,5 +2953,5 @@ DaveX plan for Teensylu/printrboard-type pinouts (ref teensylu & sprinter) for a
                         HEATER_BED_PIN, FAN_PIN,                  \
                         _E0_PINS _E1_PINS _E2_PINS             \
                         analogInputToDigitalPin(TEMP_0_PIN), analogInputToDigitalPin(TEMP_1_PIN), analogInputToDigitalPin(TEMP_2_PIN), analogInputToDigitalPin(TEMP_BED_PIN) }
-#endif
 
+#endif //__PINS_H
diff --git a/Marlin/planner.cpp b/Marlin/planner.cpp
index fe61750..c894225 100644
--- a/Marlin/planner.cpp
+++ b/Marlin/planner.cpp
@@ -63,9 +63,9 @@
 //===========================================================================
 
 unsigned long minsegmenttime;
-float max_feedrate[4]; // set the max speeds
-float axis_steps_per_unit[4];
-unsigned long max_acceleration_units_per_sq_second[4]; // Use M201 to override by software
+float max_feedrate[NUM_AXIS]; // set the max speeds
+float axis_steps_per_unit[NUM_AXIS];
+unsigned long max_acceleration_units_per_sq_second[NUM_AXIS]; // Use M201 to override by software
 float minimumfeedrate;
 float acceleration;         // Normal acceleration mm/s^2  THIS IS THE DEFAULT ACCELERATION for all moves. M204 SXXXX
 float retract_acceleration; //  mm/s^2   filament pull-pack and push-forward  while standing still in the other axis M204 TXXXX
@@ -85,8 +85,8 @@ matrix_3x3 plan_bed_level_matrix = {
 #endif // #ifdef ENABLE_AUTO_BED_LEVELING
 
 // The current position of the tool in absolute steps
-long position[4];   //rescaled from extern when axis_steps_per_unit are changed by gcode
-static float previous_speed[4]; // Speed of previous path line segment
+long position[NUM_AXIS];   //rescaled from extern when axis_steps_per_unit are changed by gcode
+static float previous_speed[NUM_AXIS]; // Speed of previous path line segment
 static float previous_nominal_speed; // Nominal speed of previous path line segment
 
 #ifdef AUTOTEMP
@@ -989,7 +989,7 @@ block->steps_y = labs((target[X_AXIS]-position[X_AXIS]) - (target[Y_AXIS]-positi
   else {
     long acc_dist = estimate_acceleration_distance(0, block->nominal_rate, block->acceleration_st);
     float advance = (STEPS_PER_CUBIC_MM_E * EXTRUDER_ADVANCE_K) * 
-      (current_speed[E_AXIS] * current_speed[E_AXIS] * EXTRUTION_AREA * EXTRUTION_AREA)*256;
+      (current_speed[E_AXIS] * current_speed[E_AXIS] * EXTRUSION_AREA * EXTRUSION_AREA)*256;
     block->advance = advance;
     if(acc_dist == 0) {
       block->advance_rate = 0;
diff --git a/Marlin/planner.h b/Marlin/planner.h
index 837199e..0952b9d 100644
--- a/Marlin/planner.h
+++ b/Marlin/planner.h
@@ -106,9 +106,9 @@ void check_axes_activity();
 uint8_t movesplanned(); //return the nr of buffered moves
 
 extern unsigned long minsegmenttime;
-extern float max_feedrate[4]; // set the max speeds
-extern float axis_steps_per_unit[4];
-extern unsigned long max_acceleration_units_per_sq_second[4]; // Use M201 to override by software
+extern float max_feedrate[NUM_AXIS]; // set the max speeds
+extern float axis_steps_per_unit[NUM_AXIS];
+extern unsigned long max_acceleration_units_per_sq_second[NUM_AXIS]; // Use M201 to override by software
 extern float minimumfeedrate;
 extern float acceleration;         // Normal acceleration mm/s^2  THIS IS THE DEFAULT ACCELERATION for all moves. M204 SXXXX
 extern float retract_acceleration; //  mm/s^2   filament pull-pack and push-forward  while standing still in the other axis M204 TXXXX
@@ -152,14 +152,7 @@ FORCE_INLINE block_t *plan_get_current_block()
 }
 
 // Returns true if the buffer has a queued block, false otherwise
-FORCE_INLINE bool blocks_queued() 
-{
-  if (block_buffer_head == block_buffer_tail) { 
-    return false; 
-  }
-  else
-    return true;
-}
+FORCE_INLINE bool blocks_queued() { return (block_buffer_head != block_buffer_tail); }
 
 #ifdef PREVENT_DANGEROUS_EXTRUDE
 void set_extrude_min_temp(float temp);
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index af5d8c1..5dc55df 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -768,7 +768,7 @@ return(filament_width_nominal/temp*100);
 
 void tp_init()
 {
-#if (MOTHERBOARD == 80) && ((TEMP_SENSOR_0==-1)||(TEMP_SENSOR_1==-1)||(TEMP_SENSOR_2==-1)||(TEMP_SENSOR_BED==-1))
+#if MB(RUMBA) && ((TEMP_SENSOR_0==-1)||(TEMP_SENSOR_1==-1)||(TEMP_SENSOR_2==-1)||(TEMP_SENSOR_BED==-1))
   //disable RUMBA JTAG in case the thermocouple extension is plugged on top of JTAG connector
   MCUCR=(1<<JTD); 
   MCUCR=(1<<JTD);
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 195d52b..fe12761 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -184,6 +184,14 @@ menuFunc_t callbackFunc;
 // place-holders for Ki and Kd edits
 float raw_Ki, raw_Kd;
 
+static void lcd_goto_menu(menuFunc_t menu, const uint32_t encoder=0, const bool feedback=true) {
+  if (currentMenu != menu) {
+    currentMenu = menu;
+    encoderPosition = encoder;
+    if (feedback) lcd_quick_feedback();
+  }
+}
+
 /* Main status screen. It's up to the implementation specific part to show what is needed. As this is very display dependent */
 static void lcd_status_screen()
 {
@@ -218,9 +226,7 @@ static void lcd_status_screen()
 
     if (current_click)
     {
-        currentMenu = lcd_main_menu;
-        encoderPosition = 0;
-        lcd_quick_feedback();
+        lcd_goto_menu(lcd_main_menu);
         lcd_implementation_init(); // to maybe revive the LCD if static electricity killed it.
 #ifdef FILAMENT_LCD_DISPLAY
         message_millis=millis();  //get status message to show up for a while
@@ -255,7 +261,7 @@ static void lcd_status_screen()
 
     if (feedmultiply < 10)
         feedmultiply = 10;
-    if (feedmultiply > 999)
+    else if (feedmultiply > 999)
         feedmultiply = 999;
 #endif//ULTIPANEL
 }
@@ -263,10 +269,8 @@ static void lcd_status_screen()
 #ifdef ULTIPANEL
 static void lcd_return_to_status()
 {
-    encoderPosition = 0;
-    currentMenu = lcd_status_screen;
+    lcd_goto_menu(lcd_status_screen, 0, false);
 }
-
 static void lcd_sdcard_pause()
 {
     card.pauseSDPrint();
@@ -357,65 +361,20 @@ void lcd_set_home_offsets()
 
 
 #ifdef BABYSTEPPING
-static void lcd_babystep_x()
-{
-    if (encoderPosition != 0)
-    {
-        babystepsTodo[X_AXIS]+=(int)encoderPosition;
-        encoderPosition=0;
-        lcdDrawUpdate = 1;
-    }
-    if (lcdDrawUpdate)
-    {
-        lcd_implementation_drawedit(PSTR(MSG_BABYSTEPPING_X),"");
-    }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_tune_menu;
-        encoderPosition = 0;
-    }
-}
 
-static void lcd_babystep_y()
-{
-    if (encoderPosition != 0)
-    {
-        babystepsTodo[Y_AXIS]+=(int)encoderPosition;
-        encoderPosition=0;
-        lcdDrawUpdate = 1;
-    }
-    if (lcdDrawUpdate)
-    {
-        lcd_implementation_drawedit(PSTR(MSG_BABYSTEPPING_Y),"");
+  static void _lcd_babystep(int axis, const char *msg) {
+    if (encoderPosition != 0) {
+      babystepsTodo[axis] += (int)encoderPosition;
+      encoderPosition = 0;
+      lcdDrawUpdate = 1;
     }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_tune_menu;
-        encoderPosition = 0;
-    }
-}
+    if (lcdDrawUpdate) lcd_implementation_drawedit(PSTR(msg), "");
+    if (LCD_CLICKED) lcd_goto_menu(lcd_tune_menu);
+  }
+  static void lcd_babystep_x() { _lcd_babystep(X_AXIS, MSG_BABYSTEPPING_X); }
+  static void lcd_babystep_y() { _lcd_babystep(Y_AXIS, MSG_BABYSTEPPING_Y); }
+  static void lcd_babystep_z() { _lcd_babystep(Z_AXIS, MSG_BABYSTEPPING_Z); }
 
-static void lcd_babystep_z()
-{
-    if (encoderPosition != 0)
-    {
-        babystepsTodo[Z_AXIS]+=BABYSTEP_Z_MULTIPLICATOR*(int)encoderPosition;
-        encoderPosition=0;
-        lcdDrawUpdate = 1;
-    }
-    if (lcdDrawUpdate)
-    {
-        lcd_implementation_drawedit(PSTR(MSG_BABYSTEPPING_Z),"");
-    }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_tune_menu;
-        encoderPosition = 0;
-    }
-}
 #endif //BABYSTEPPING
 
 static void lcd_tune_menu()
@@ -644,96 +603,28 @@ static void lcd_prepare_menu()
 float move_menu_scale;
 static void lcd_move_menu_axis();
 
-static void lcd_move_x()
-{
-    if (encoderPosition != 0)
-    {
-        refresh_cmd_timeout();
-        current_position[X_AXIS] += float((int)encoderPosition) * move_menu_scale;
-        if (min_software_endstops && current_position[X_AXIS] < X_MIN_POS)
-            current_position[X_AXIS] = X_MIN_POS;
-        if (max_software_endstops && current_position[X_AXIS] > X_MAX_POS)
-            current_position[X_AXIS] = X_MAX_POS;
-        encoderPosition = 0;
-        #ifdef DELTA
-        calculate_delta(current_position);
-        plan_buffer_line(delta[X_AXIS], delta[Y_AXIS], delta[Z_AXIS], current_position[E_AXIS], manual_feedrate[X_AXIS]/60, active_extruder);
-        #else
-        plan_buffer_line(current_position[X_AXIS], current_position[Y_AXIS], current_position[Z_AXIS], current_position[E_AXIS], manual_feedrate[X_AXIS]/60, active_extruder);
-        #endif
-        lcdDrawUpdate = 1;
-    }
-    if (lcdDrawUpdate)
-    {
-        lcd_implementation_drawedit(PSTR("X"), ftostr31(current_position[X_AXIS]));
-    }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_move_menu_axis;
-        encoderPosition = 0;
-    }
-}
-static void lcd_move_y()
-{
-    if (encoderPosition != 0)
-    {
-        refresh_cmd_timeout();
-        current_position[Y_AXIS] += float((int)encoderPosition) * move_menu_scale;
-        if (min_software_endstops && current_position[Y_AXIS] < Y_MIN_POS)
-            current_position[Y_AXIS] = Y_MIN_POS;
-        if (max_software_endstops && current_position[Y_AXIS] > Y_MAX_POS)
-            current_position[Y_AXIS] = Y_MAX_POS;
-        encoderPosition = 0;
-        #ifdef DELTA
-        calculate_delta(current_position);
-        plan_buffer_line(delta[X_AXIS], delta[Y_AXIS], delta[Z_AXIS], current_position[E_AXIS], manual_feedrate[Y_AXIS]/60, active_extruder);
-        #else
-        plan_buffer_line(current_position[X_AXIS], current_position[Y_AXIS], current_position[Z_AXIS], current_position[E_AXIS], manual_feedrate[Y_AXIS]/60, active_extruder);
-        #endif
-        lcdDrawUpdate = 1;
-    }
-    if (lcdDrawUpdate)
-    {
-        lcd_implementation_drawedit(PSTR("Y"), ftostr31(current_position[Y_AXIS]));
-    }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_move_menu_axis;
-        encoderPosition = 0;
-    }
-}
-static void lcd_move_z()
-{
-    if (encoderPosition != 0)
-    {
-        refresh_cmd_timeout();
-        current_position[Z_AXIS] += float((int)encoderPosition) * move_menu_scale;
-        if (min_software_endstops && current_position[Z_AXIS] < Z_MIN_POS)
-            current_position[Z_AXIS] = Z_MIN_POS;
-        if (max_software_endstops && current_position[Z_AXIS] > Z_MAX_POS)
-            current_position[Z_AXIS] = Z_MAX_POS;
-        encoderPosition = 0;
-        #ifdef DELTA
-        calculate_delta(current_position);
-        plan_buffer_line(delta[X_AXIS], delta[Y_AXIS], delta[Z_AXIS], current_position[E_AXIS], manual_feedrate[Z_AXIS]/60, active_extruder);
-        #else
-        plan_buffer_line(current_position[X_AXIS], current_position[Y_AXIS], current_position[Z_AXIS], current_position[E_AXIS], manual_feedrate[Z_AXIS]/60, active_extruder);
-        #endif
-        lcdDrawUpdate = 1;
-    }
-    if (lcdDrawUpdate)
-    {
-        lcd_implementation_drawedit(PSTR("Z"), ftostr31(current_position[Z_AXIS]));
-    }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_move_menu_axis;
-        encoderPosition = 0;
-    }
+static void _lcd_move(const char *name, int axis, int min, int max) {
+  if (encoderPosition != 0) {
+    refresh_cmd_timeout();
+    current_position[axis] += float((int)encoderPosition) * move_menu_scale;
+    if (min_software_endstops && current_position[axis] < min) current_position[axis] = min;
+    if (max_software_endstops && current_position[axis] > max) current_position[axis] = max;
+    encoderPosition = 0;
+    #ifdef DELTA
+      calculate_delta(current_position);
+      plan_buffer_line(delta[X_AXIS], delta[Y_AXIS], delta[Z_AXIS], current_position[E_AXIS], manual_feedrate[axis]/60, active_extruder);
+    #else
+      plan_buffer_line(current_position[X_AXIS], current_position[Y_AXIS], current_position[Z_AXIS], current_position[E_AXIS], manual_feedrate[axis]/60, active_extruder);
+    #endif
+    lcdDrawUpdate = 1;
+  }
+  if (lcdDrawUpdate) lcd_implementation_drawedit(name, ftostr31(current_position[axis]));
+  if (LCD_CLICKED) lcd_goto_menu(lcd_move_menu_axis);
 }
+static void lcd_move_x() { _lcd_move(PSTR("X"), X_AXIS, X_MIN_POS, X_MAX_POS); }
+static void lcd_move_y() { _lcd_move(PSTR("Y"), Y_AXIS, Y_MIN_POS, Y_MAX_POS); }
+static void lcd_move_z() { _lcd_move(PSTR("Z"), Z_AXIS, Z_MIN_POS, Z_MAX_POS); }
+
 static void lcd_move_e()
 {
     if (encoderPosition != 0)
@@ -752,12 +643,7 @@ static void lcd_move_e()
     {
         lcd_implementation_drawedit(PSTR("Extruder"), ftostr31(current_position[E_AXIS]));
     }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_move_menu_axis;
-        encoderPosition = 0;
-    }
+    if (LCD_CLICKED) lcd_goto_menu(lcd_move_menu_axis);
 }
 
 static void lcd_move_menu_axis()
@@ -951,12 +837,7 @@ static void lcd_set_contrast()
     {
         lcd_implementation_drawedit(PSTR(MSG_CONTRAST), itostr2(lcd_contrast));
     }
-    if (LCD_CLICKED)
-    {
-        lcd_quick_feedback();
-        currentMenu = lcd_control_menu;
-        encoderPosition = 0;
-    }
+    if (LCD_CLICKED) lcd_goto_menu(lcd_control_menu);
 }
 #endif
 
@@ -979,7 +860,8 @@ static void lcd_control_retract_menu()
     MENU_ITEM_EDIT(float3, MSG_CONTROL_RETRACT_RECOVERF, &retract_recover_feedrate, 1, 999);
     END_MENU();
 }
-#endif
+
+#endif //FWRETRACT
 
 #if SDCARDDETECT == -1
 static void lcd_sd_refresh()
@@ -1004,9 +886,9 @@ void lcd_sdcard_menu()
     card.getWorkDirName();
     if(card.filename[0]=='/')
     {
-      #if SDCARDDETECT == -1
+#if SDCARDDETECT == -1
         MENU_ITEM(function, LCD_STR_REFRESH MSG_REFRESH, lcd_sd_refresh);
-      #endif
+#endif
     }else{
         MENU_ITEM(function, LCD_STR_FOLDER "..", lcd_sd_updir);
     }
@@ -1015,23 +897,16 @@ void lcd_sdcard_menu()
     {
         if (_menuItemNr == _lineNr)
         {
-            #if defined(SDCARD_RATHERRECENTFIRST) && !defined(SDCARD_SORT_ALPHA)
-              int nr = fileCnt-1-i;
+            #ifndef SDCARD_RATHERRECENTFIRST
+              card.getfilename(i);
             #else
-              int nr = i;
+              card.getfilename(fileCnt-1-i);
             #endif
-
-            #ifdef SDCARD_SORT_ALPHA
-              card.getfilename_sorted(nr);
-            #else
-              card.getfilename(nr);
-            #endif
-
-            if (card.filenameIsDir) {
-              MENU_ITEM(sddirectory, MSG_CARD_MENU, card.filename, card.longFilename);
-            }
-            else {
-              MENU_ITEM(sdfile, MSG_CARD_MENU, card.filename, card.longFilename);
+            if (card.filenameIsDir)
+            {
+                MENU_ITEM(sddirectory, MSG_CARD_MENU, card.filename, card.longFilename);
+            }else{
+                MENU_ITEM(sdfile, MSG_CARD_MENU, card.filename, card.longFilename);
             }
         }else{
             MENU_ITEM_DUMMY();
@@ -1052,27 +927,12 @@ void lcd_sdcard_menu()
         if (LCD_CLICKED) \
         { \
             *((_type*)editValue) = ((_type)((int32_t)encoderPosition + minEditValue)) / scale; \
-            lcd_quick_feedback(); \
-            currentMenu = prevMenu; \
-            encoderPosition = prevEncoderPosition; \
+            lcd_goto_menu(prevMenu, prevEncoderPosition); \
         } \
     } \
-    void menu_edit_callback_ ## _name () \
-    { \
-        if ((int32_t)encoderPosition < 0) \
-            encoderPosition = 0; \
-        if ((int32_t)encoderPosition > maxEditValue) \
-            encoderPosition = maxEditValue; \
-        if (lcdDrawUpdate) \
-            lcd_implementation_drawedit(editLabel, _strFunc(((_type)((int32_t)encoderPosition + minEditValue)) / scale)); \
-        if (LCD_CLICKED) \
-        { \
-            *((_type*)editValue) = ((_type)((int32_t)encoderPosition + minEditValue)) / scale; \
-            lcd_quick_feedback(); \
-            currentMenu = prevMenu; \
-            encoderPosition = prevEncoderPosition; \
-            (*callbackFunc)();\
-        } \
+    void menu_edit_callback_ ## _name () { \
+        menu_edit_ ## _name (); \
+        if (LCD_CLICKED) (*callbackFunc)(); \
     } \
     static void menu_action_setting_edit_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue) \
     { \
@@ -1157,24 +1017,10 @@ static void lcd_quick_feedback()
 }
 
 /** Menu action functions **/
-static void menu_action_back(menuFunc_t data)
-{
-    currentMenu = data;
-    encoderPosition = 0;
-}
-static void menu_action_submenu(menuFunc_t data)
-{
-    currentMenu = data;
-    encoderPosition = 0;
-}
-static void menu_action_gcode(const char* pgcode)
-{
-    enquecommand_P(pgcode);
-}
-static void menu_action_function(menuFunc_t data)
-{
-    (*data)();
-}
+static void menu_action_back(menuFunc_t data) { lcd_goto_menu(data); }
+static void menu_action_submenu(menuFunc_t data) { lcd_goto_menu(data); }
+static void menu_action_gcode(const char* pgcode) { enquecommand_P(pgcode); }
+static void menu_action_function(menuFunc_t data) { (*data)(); }
 static void menu_action_sdfile(const char* filename, char* longFilename)
 {
     char cmd[30];
@@ -1237,7 +1083,7 @@ void lcd_init()
   #endif // SR_LCD_2W_NL
 #endif//!NEWPANEL
 
-#if defined(SDSUPPORT) && defined(SDCARDDETECT) && (SDCARDDETECT > 0)
+#if defined (SDSUPPORT) && defined(SDCARDDETECT) && (SDCARDDETECT > 0)
     pinMode(SDCARDDETECT,INPUT);
     WRITE(SDCARDDETECT, HIGH);
     lcd_oldcardstatus = IS_SD_INSERTED;
@@ -1350,7 +1196,7 @@ void lcd_update()
             lcd_implementation_clear();
         if (lcdDrawUpdate)
             lcdDrawUpdate--;
-        lcd_next_update_millis = millis() + 100;
+        lcd_next_update_millis = millis() + LCD_UPDATE_INTERVAL;
     }
 }
 
@@ -1459,10 +1305,8 @@ void lcd_buttons_update()
 
     //manage encoder rotation
     uint8_t enc=0;
-    if(buttons&EN_A)
-        enc|=(1<<0);
-    if(buttons&EN_B)
-        enc|=(1<<1);
+    if (buttons & EN_A) enc |= B01;
+    if (buttons & EN_B) enc |= B10;
     if(enc != lastEncoderBits)
     {
         switch(enc)
@@ -1611,6 +1455,7 @@ char *itostr31(const int &xx)
   return conv;
 }
 
+// Convert int to rj string with 123 or -12 format
 char *itostr3(const int &x)
 {
   int xx = x;
@@ -1653,47 +1498,25 @@ char *itostr3left(const int &xx)
   return conv;
 }
 
-char *itostr4(const int &xx)
-{
-  if (xx >= 1000)
-    conv[0]=(xx/1000)%10+'0';
-  else
-    conv[0]=' ';
-  if (xx >= 100)
-    conv[1]=(xx/100)%10+'0';
-  else
-    conv[1]=' ';
-  if (xx >= 10)
-    conv[2]=(xx/10)%10+'0';
-  else
-    conv[2]=' ';
-  conv[3]=(xx)%10+'0';
-  conv[4]=0;
+// Convert int to rj string with 1234 format
+char *itostr4(const int &xx) {
+  conv[0] = xx >= 1000 ? (xx / 1000) % 10 + '0' : ' ';
+  conv[1] = xx >= 100 ? (xx / 100) % 10 + '0' : ' ';
+  conv[2] = xx >= 10 ? (xx / 10) % 10 + '0' : ' ';
+  conv[3] = xx % 10 + '0';
+  conv[4] = 0;
   return conv;
 }
 
-//  convert float to string with 12345 format
-char *ftostr5(const float &x)
-{
-  long xx=abs(x);
-  if (xx >= 10000)
-    conv[0]=(xx/10000)%10+'0';
-  else
-    conv[0]=' ';
-  if (xx >= 1000)
-    conv[1]=(xx/1000)%10+'0';
-  else
-    conv[1]=' ';
-  if (xx >= 100)
-    conv[2]=(xx/100)%10+'0';
-  else
-    conv[2]=' ';
-  if (xx >= 10)
-    conv[3]=(xx/10)%10+'0';
-  else
-    conv[3]=' ';
-  conv[4]=(xx)%10+'0';
-  conv[5]=0;
+//  convert float to rj string with 12345 format
+char *ftostr5(const float &x) {
+  long xx = abs(x);
+  conv[0] = xx >= 10000 ? (xx / 10000) % 10 + '0' : ' ';
+  conv[1] = xx >= 1000 ? (xx / 1000) % 10 + '0' : ' ';
+  conv[2] = xx >= 100 ? (xx / 100) % 10 + '0' : ' ';
+  conv[3] = xx >= 10 ? (xx / 10) % 10 + '0' : ' ';
+  conv[4] = xx % 10 + '0';
+  conv[5] = 0;
   return conv;
 }
 
diff --git a/Marlin/ultralcd.h b/Marlin/ultralcd.h
index 652693c..339955e 100644
--- a/Marlin/ultralcd.h
+++ b/Marlin/ultralcd.h
@@ -105,7 +105,8 @@
 
   #define LCD_MESSAGEPGM(x) 
   #define LCD_ALERTMESSAGEPGM(x) 
-#endif 
+
+#endif //ULTRA_LCD
 
 char *itostr2(const uint8_t &x);
 char *itostr31(const int &xx);
@@ -122,4 +123,4 @@ char *ftostr5(const float &x);
 char *ftostr51(const float &x);
 char *ftostr52(const float &x);
 
-#endif //ULTRALCD
+#endif //ULTRALCD_H
diff --git a/Marlin/ultralcd_implementation_hitachi_HD44780.h b/Marlin/ultralcd_implementation_hitachi_HD44780.h
index 41c0d34..923e249 100644
--- a/Marlin/ultralcd_implementation_hitachi_HD44780.h
+++ b/Marlin/ultralcd_implementation_hitachi_HD44780.h
@@ -198,7 +198,7 @@ extern volatile uint16_t buttons;  //an extended version of the last checked but
 
 #else
   // Standard directly connected LCD implementations
-  #if LANGUAGE_CHOICE == 6
+  #if LANGUAGE_CHOICE == ru
     #include "LiquidCrystalRus.h"
     #define LCD_CLASS LiquidCrystalRus
   #else 

