commit 6e6e3cf443544177554f5733320305db5a4760e5 (from b3ca430a20de71bb4546540625162d4808f92fa1)
Merge: b3ca430 b033783
Author: AnHardt <github@kitelab.de>
Date:   Fri Jan 30 11:05:29 2015 +0100

    merged https://github.com/MarlinFirmware/Marlin.git

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 16030c7..25902d3 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -49,16 +49,16 @@
 #include "math.h"
 
 #ifdef BLINKM
-#include "BlinkM.h"
-#include "Wire.h"
+  #include "BlinkM.h"
+  #include "Wire.h"
 #endif
 
 #if NUM_SERVOS > 0
-#include "Servo.h"
+  #include "Servo.h"
 #endif
 
 #if defined(DIGIPOTSS_PIN) && DIGIPOTSS_PIN > -1
-#include <SPI.h>
+  #include <SPI.h>
 #endif
 
 // look here for descriptions of G-codes: http://linuxcnc.org/handbook/gcode/g-code.html
@@ -138,17 +138,17 @@
 // M203 - Set maximum feedrate that your machine can sustain (M203 X200 Y200 Z300 E10000) in mm/sec
 // M204 - Set default acceleration: S normal moves T filament only moves (M204 S3000 T7000) in mm/sec^2  also sets minimum segment time in ms (B20000) to prevent buffer under-runs and M20 minimum feedrate
 // M205 -  advanced settings:  minimum travel speed S=while printing T=travel only,  B=minimum segment time X= maximum xy jerk, Z=maximum Z jerk, E=maximum E jerk
-// M206 - set additional homing offset
-// M207 - set retract length S[positive mm] F[feedrate mm/min] Z[additional zlift/hop], stays in mm regardless of M200 setting
-// M208 - set recover=unretract length S[positive mm surplus to the M207 S*] F[feedrate mm/sec]
+// M206 - Set additional homing offset
+// M207 - Set retract length S[positive mm] F[feedrate mm/min] Z[additional zlift/hop], stays in mm regardless of M200 setting
+// M208 - Set recover=unretract length S[positive mm surplus to the M207 S*] F[feedrate mm/sec]
 // M209 - S<1=true/0=false> enable automatic retract detect if the slicer did not support G10/11: every normal extrude-only move will be classified as retract depending on the direction.
-// M218 - set hotend offset (in mm): T<extruder_number> X<offset_on_X> Y<offset_on_Y>
+// M218 - Set hotend offset (in mm): T<extruder_number> X<offset_on_X> Y<offset_on_Y>
 // M220 S<factor in percent>- set speed factor override percentage
 // M221 S<factor in percent>- set extrude factor override percentage
 // M226 P<pin number> S<pin state>- Wait until the specified pin reaches the state required
 // M240 - Trigger a camera to take a photograph
 // M250 - Set LCD contrast C<contrast value> (value 0..63)
-// M280 - set servo position absolute. P: servo index, S: angle or microseconds
+// M280 - Set servo position absolute. P: servo index, S: angle or microseconds
 // M300 - Play beep sound S<frequency Hz> P<duration ms>
 // M301 - Set PID parameters P I and D
 // M302 - Allow cold extrudes, or set the minimum extrude S<temperature>.
@@ -161,14 +161,14 @@
 // M405 - Turn on Filament Sensor extrusion control.  Optional D<delay in cm> to set delay in centimeters between sensor and extruder 
 // M406 - Turn off Filament Sensor extrusion control 
 // M407 - Displays measured filament diameter 
-// M500 - stores parameters in EEPROM
-// M501 - reads parameters from EEPROM (if you need reset them after you changed them temporarily).
-// M502 - reverts to the default "factory settings".  You still need to store them in EEPROM afterwards if you want to.
-// M503 - print the current settings (from memory not from EEPROM). Use S0 to leave off headings.
+// M500 - Store parameters in EEPROM
+// M501 - Read parameters from EEPROM (if you need reset them after you changed them temporarily).
+// M502 - Revert to the default "factory settings".  You still need to store them in EEPROM afterwards if you want to.
+// M503 - Print the current settings (from memory not from EEPROM). Use S0 to leave off headings.
 // M540 - Use S[0|1] to enable or disable the stop SD card print on endstop hit (requires ABORT_ON_ENDSTOP_HIT_FEATURE_ENABLED)
 // M600 - Pause for filament change X[pos] Y[pos] Z[relative lift] E[initial retract] L[later retract distance for removal]
-// M665 - set delta configurations
-// M666 - set delta endstop adjustment
+// M665 - Set delta configurations
+// M666 - Set delta endstop adjustment
 // M605 - Set dual x-carriage movement mode: S<mode> [ X<duplication x-offset> R<duplication temp offset> ]
 // M907 - Set digital trimpot motor current using axis codes.
 // M908 - Control digital trimpot directly.
@@ -187,25 +187,16 @@
 // M928 - Start SD logging (M928 filename.g) - ended by M29
 // M999 - Restart after being stopped by error
 
-//Stepper Movement Variables
-
-//===========================================================================
-//=============================imported variables============================
-//===========================================================================
-
-
-//===========================================================================
-//=============================public variables=============================
-//===========================================================================
 #ifdef SDSUPPORT
-CardReader card;
+  CardReader card;
 #endif
+
 float homing_feedrate[] = HOMING_FEEDRATE;
 bool axis_relative_modes[] = AXIS_RELATIVE_MODES;
-int feedmultiply=100; //100->1 200->2
+int feedmultiply = 100; //100->1 200->2
 int saved_feedmultiply;
-int extrudemultiply=100; //100->1 200->2
-int extruder_multiply[EXTRUDERS] = {100
+int extrudemultiply = 100; //100->1 200->2
+int extruder_multiply[EXTRUDERS] = { 100
   #if EXTRUDERS > 1
     , 100
     #if EXTRUDERS > 2
@@ -240,14 +231,14 @@ float volumetric_multiplier[EXTRUDERS] = {1.0
   #endif
 };
 float current_position[NUM_AXIS] = { 0.0, 0.0, 0.0, 0.0 };
-float add_homing[3]={0,0,0};
+float add_homing[3] = { 0, 0, 0 };
 #ifdef DELTA
-float endstop_adj[3]={0,0,0};
+  float endstop_adj[3] = { 0, 0, 0 };
 #endif
 
 float min_pos[3] = { X_MIN_POS, Y_MIN_POS, Z_MIN_POS };
 float max_pos[3] = { X_MAX_POS, Y_MAX_POS, Z_MAX_POS };
-bool axis_known_position[3] = {false, false, false};
+bool axis_known_position[3] = { false, false, false };
 float zprobe_zoffset;
 
 // Extruder offset
@@ -258,25 +249,36 @@ float zprobe_zoffset;
   #define NUM_EXTRUDER_OFFSETS 3 // supports offsets in XYZ plane
 #endif
 float extruder_offset[NUM_EXTRUDER_OFFSETS][EXTRUDERS] = {
-#if defined(EXTRUDER_OFFSET_X) && defined(EXTRUDER_OFFSET_Y)
-  EXTRUDER_OFFSET_X, EXTRUDER_OFFSET_Y
-#endif
+  #if defined(EXTRUDER_OFFSET_X)
+    EXTRUDER_OFFSET_X
+  #else
+    0
+  #endif
+  #if defined(EXTRUDER_OFFSET_Y)
+    EXTRUDER_OFFSET_Y
+  #else
+    0
+  #endif
 };
 #endif
+
 uint8_t active_extruder = 0;
-int fanSpeed=0;
+int fanSpeed = 0;
+
 #ifdef SERVO_ENDSTOPS
   int servo_endstops[] = SERVO_ENDSTOPS;
   int servo_endstop_angles[] = SERVO_ENDSTOP_ANGLES;
 #endif
+
 #ifdef BARICUDA
-int ValvePressure=0;
-int EtoPPressure=0;
+  int ValvePressure = 0;
+  int EtoPPressure = 0;
 #endif
 
 #ifdef FWRETRACT
-  bool autoretract_enabled=false;
-  bool retracted[EXTRUDERS]={false
+
+  bool autoretract_enabled = false;
+  bool retracted[EXTRUDERS] = { false
     #if EXTRUDERS > 1
       , false
       #if EXTRUDERS > 2
@@ -287,7 +289,7 @@ int EtoPPressure=0;
       #endif
     #endif
   };
-  bool retracted_swap[EXTRUDERS]={false
+  bool retracted_swap[EXTRUDERS] = { false
     #if EXTRUDERS > 1
       , false
       #if EXTRUDERS > 2
@@ -306,38 +308,41 @@ int EtoPPressure=0;
   float retract_recover_length = RETRACT_RECOVER_LENGTH;
   float retract_recover_length_swap = RETRACT_RECOVER_LENGTH_SWAP;
   float retract_recover_feedrate = RETRACT_RECOVER_FEEDRATE;
+
 #endif // FWRETRACT
 
 #ifdef ULTIPANEL
-  #ifdef PS_DEFAULT_OFF
-    bool powersupply = false;
-  #else
-	  bool powersupply = true;
-  #endif
+  bool powersupply = 
+    #ifdef PS_DEFAULT_OFF
+      false
+    #else
+  	  true
+    #endif
+  ;
 #endif
 
 #ifdef DELTA
-  float delta[3] = {0.0, 0.0, 0.0};
+  float delta[3] = { 0, 0, 0 };
   #define SIN_60 0.8660254037844386
   #define COS_60 0.5
   // these are the default values, can be overriden with M665
-  float delta_radius= DELTA_RADIUS;
-  float delta_tower1_x= -SIN_60*delta_radius; // front left tower
-  float delta_tower1_y= -COS_60*delta_radius;	   
-  float delta_tower2_x=  SIN_60*delta_radius; // front right tower
-  float delta_tower2_y= -COS_60*delta_radius;	   
-  float delta_tower3_x= 0.0;                  // back middle tower
-  float delta_tower3_y= delta_radius;
-  float delta_diagonal_rod= DELTA_DIAGONAL_ROD;
-  float delta_diagonal_rod_2= sq(delta_diagonal_rod);
-  float delta_segments_per_second= DELTA_SEGMENTS_PER_SECOND;
+  float delta_radius = DELTA_RADIUS;
+  float delta_tower1_x = -SIN_60 * delta_radius; // front left tower
+  float delta_tower1_y = -COS_60 * delta_radius;	   
+  float delta_tower2_x =  SIN_60 * delta_radius; // front right tower
+  float delta_tower2_y = -COS_60 * delta_radius;	   
+  float delta_tower3_x = 0;                      // back middle tower
+  float delta_tower3_y = delta_radius;
+  float delta_diagonal_rod = DELTA_DIAGONAL_ROD;
+  float delta_diagonal_rod_2 = sq(delta_diagonal_rod);
+  float delta_segments_per_second = DELTA_SEGMENTS_PER_SECOND;
 #endif
 
-#ifdef SCARA                              // Build size scaling
-float axis_scaling[3]={1,1,1};  // Build size scaling, default to 1
+#ifdef SCARA
+  float axis_scaling[3] = { 1, 1, 1 };    // Build size scaling, default to 1
 #endif				
 
-bool cancel_heatup = false ;
+bool cancel_heatup = false;
 
 #ifdef FILAMENT_SENSOR
   //Variables for Filament Sensor input 
@@ -354,17 +359,14 @@ bool cancel_heatup = false ;
 const char errormagic[] PROGMEM = "Error:";
 const char echomagic[] PROGMEM = "echo:";
 
-//===========================================================================
-//=============================Private Variables=============================
-//===========================================================================
 const char axis_codes[NUM_AXIS] = {'X', 'Y', 'Z', 'E'};
-static float destination[NUM_AXIS] = {  0.0, 0.0, 0.0, 0.0};
+static float destination[NUM_AXIS] = { 0, 0, 0, 0 };
 
 #ifndef DELTA
-static float delta[3] = {0.0, 0.0, 0.0};
+  static float delta[3] = { 0, 0, 0 };
 #endif
 
-static float offset[3] = {0.0, 0.0, 0.0};
+static float offset[3] = { 0, 0, 0 };
 static bool home_all_axis = true;
 static float feedrate = 1500.0, next_feedrate, saved_feedrate;
 static long gcode_N, gcode_LastN, Stopped_gcode_LastN = 0;
@@ -376,29 +378,26 @@ static bool fromsd[BUFSIZE];
 static int bufindr = 0;
 static int bufindw = 0;
 static int buflen = 0;
-//static int i = 0;
+
 static char serial_char;
 static int serial_count = 0;
 static boolean comment_mode = false;
-static char *strchr_pointer; // just a pointer to find chars in the command string like X, Y, Z, E, etc
-
-const int sensitive_pins[] = SENSITIVE_PINS; // Sensitive pin list for M42
+static char *strchr_pointer; ///< A pointer to find chars in the command string (X, Y, Z, E, etc.)
 
-//static float tt = 0;
-//static float bt = 0;
+const int sensitive_pins[] = SENSITIVE_PINS; ///< Sensitive pin list for M42
 
-//Inactivity shutdown variables
+// Inactivity shutdown
 static unsigned long previous_millis_cmd = 0;
 static unsigned long max_inactive_time = 0;
 static unsigned long stepper_inactive_time = DEFAULT_STEPPER_DEACTIVE_TIME*1000l;
 
-unsigned long starttime=0;
-unsigned long stoptime=0;
+unsigned long starttime = 0; ///< Print job start time
+unsigned long stoptime = 0;  ///< Print job stop time
 
 static uint8_t tmp_extruder;
 
 
-bool Stopped=false;
+bool Stopped = false;
 
 #if NUM_SERVOS > 0
   Servo servos[NUM_SERVOS];
@@ -407,10 +406,9 @@ bool Stopped=false;
 bool CooldownNoWait = true;
 bool target_direction;
 
-//Insert variables if CHDK is defined
 #ifdef CHDK
-unsigned long chdkHigh = 0;
-boolean chdkActive = false;
+  unsigned long chdkHigh = 0;
+  boolean chdkActive = false;
 #endif
 
 //===========================================================================
diff --git a/Marlin/boards.h b/Marlin/boards.h
index 18b7132..1a5acaa 100644
--- a/Marlin/boards.h
+++ b/Marlin/boards.h
@@ -48,7 +48,7 @@
 #define BOARD_ELEFU_3           21   // Elefu Ra Board (v3)
 #define BOARD_5DPRINT           88   // 5DPrint D8 Driver Board
 #define BOARD_LEAPFROG          999  // Leapfrog
-#define BOARD_WITBOX		41  // bq WITBOX
+#define BOARD_WITBOX            41   // bq WITBOX
 
 #define BOARD_99                99   // This is in pins.h but...?
 
diff --git a/Marlin/language.h b/Marlin/language.h
index 9bf0fb6..defe1e9 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -164,7 +164,7 @@
 
 // LCD Menu Messages
 
-#define STR_Ae "Ae" // no charset we know now. Will be overruled when we know.
+#define STR_Ae "Ae" // No charset known now. Default will be overruled when we know.
 #define STR_ae "ae"
 #define STR_Oe "Oe"
 #define STR_oe "oe"
diff --git a/Marlin/ultralcd_implementation_hitachi_HD44780.h b/Marlin/ultralcd_implementation_hitachi_HD44780.h
index fe0953e..9eeee1e 100644
--- a/Marlin/ultralcd_implementation_hitachi_HD44780.h
+++ b/Marlin/ultralcd_implementation_hitachi_HD44780.h
@@ -1,5 +1,5 @@
-#ifndef ULTRA_LCD_IMPLEMENTATION_HITACHI_HD44780_H
-#define ULTRA_LCD_IMPLEMENTATION_HITACHI_HD44780_H
+#ifndef ULTRALCD_IMPLEMENTATION_HITACHI_HD44780_H
+#define ULTRALCD_IMPLEMENTATION_HITACHI_HD44780_H
 
 /**
 * Implementation of the LCD display routines for a Hitachi HD44780 display. These are common LCD character displays.
@@ -7,9 +7,9 @@
 **/
 
 #ifndef REPRAPWORLD_KEYPAD
-extern volatile uint8_t buttons;  //the last checked buttons in a bit array.
+  extern volatile uint8_t buttons;  //the last checked buttons in a bit array.
 #else
-extern volatile uint16_t buttons;  //an extended version of the last checked buttons in a bit array.
+  extern volatile uint16_t buttons;  //an extended version of the last checked buttons in a bit array.
 #endif
 
 ////////////////////////////////////
@@ -903,4 +903,4 @@ static uint8_t lcd_implementation_read_slow_buttons()
 }
 #endif
 
-#endif//ULTRA_LCD_IMPLEMENTATION_HITACHI_HD44780_H
+#endif //__ULTRALCD_IMPLEMENTATION_HITACHI_HD44780_H

commit 6e6e3cf443544177554f5733320305db5a4760e5 (from b033783e0f553ef21a20fd2e3e0775b966598646)
Merge: b3ca430 b033783
Author: AnHardt <github@kitelab.de>
Date:   Fri Jan 30 11:05:29 2015 +0100

    merged https://github.com/MarlinFirmware/Marlin.git

diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index 3aaa588..f5c218d 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -533,6 +533,12 @@ const bool Z_MAX_ENDSTOP_INVERTING = true; // set to true to invert the logic of
 #define ABS_PREHEAT_FAN_SPEED 255   // Insert Value between 0 and 255
 
 //LCD and SD support
+
+// Character based displays can have different extended charsets. If you see strange or missing characters on yours - try an other definition below.
+#define DISPLAY_CHARSET_HD44870_JAPAN  //  "ääööüüß°"
+//#define DISPLAY_CHARSET_HD44870_WESTERN // with better support for European languages. "ÄäÖöÜüß°"
+//#define DISPLAY_CHARSET_DOGM // for full graphics display "ÄäÖÖÜÜß°"
+
 //#define ULTRA_LCD  //general LCD support, also 16x2
 //#define DOGLCD  // Support for SPI LCD 128x64 (Controller ST7565R graphic Display Family)
 //#define SDSUPPORT // Enable SD Card Support in Hardware Console
diff --git a/Marlin/language.h b/Marlin/language.h
index 67fc1b3..defe1e9 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -1,6 +1,8 @@
 #ifndef LANGUAGE_H
 #define LANGUAGE_H
 
+#include "Configuration.h"
+
 #define LANGUAGE_CONCAT(M)       #M
 #define GENERATE_LANGUAGE_INCLUDE(M)  LANGUAGE_CONCAT(language_##M.h)
 
@@ -160,6 +162,71 @@
 
 #define MSG_ERR_EEPROM_WRITE                "Error writing to EEPROM!"
 
+// LCD Menu Messages
+
+#define STR_Ae "Ae" // No charset known now. Default will be overruled when we know.
+#define STR_ae "ae"
+#define STR_Oe "Oe"
+#define STR_oe "oe"
+#define STR_Ue "Ue"
+#define STR_ue "ue"
+#define STR_sz "ss"
+#define STR_Deg ""
+#define STR_THERMOMETER "\302"
+
+#ifdef DISPLAY_CHARSET_DOGM
+  #define STR_Ae "\304" // U8glib
+  #define STR_ae "\344"
+  #define STR_Oe "\326"
+  #define STR_oe STR_Oe
+  #define STR_Ue "\334"
+  #define STR_ue STR_Ue
+  #define STR_sz "\337"
+  #define STR_Deg "\260"
+  #define STR_THERMOMETER "\377"
+#endif
+#ifdef DISPLAY_CHARSET_HD44870_JAPAN // HD44870 ROM Code: A00 (Japan)
+  #define STR_ae "\xe1"
+  #define STR_Ae STR_ae
+  #define STR_oe "\357"
+  #define STR_Oe STR_oe
+  #define STR_ue "\365"
+  #define STR_Ue STR_ue
+  #define STR_sz "\342"
+  #define STR_Deg "\271"
+  #define STR_THERMOMETER "\302"
+#endif
+#ifdef DISPLAY_CHARSET_HD44870_WESTERN // HD44870 ROM Code: A02 (Western)
+  #define STR_Ae "\216"
+  #define STR_ae "\204"
+  #define STR_Oe "\211"
+  #define STR_oe "\204"
+  #define STR_Ue "\212"
+  #define STR_ue "\201"
+  #define STR_sz "\160"
+  #define STR_Deg "\337"
+  #define STR_THERMOMETER "\302"
+#endif
+
+/*
+#define TESTSTRING000 "\000\001\002\003\004\005\006\007\010\011\012\013\014\015\016\017"
+#define TESTSTRING020 "\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037"
+#define TESTSTRING040 "\040\041\042\043\044\045\046\047\050\051\052\053\054\055\056\057"
+#define TESTSTRING060 "\060\061\062\063\064\065\066\067\070\071\072\073\074\075\076\077"
+#define TESTSTRING100 "\100\101\102\103\104\105\106\107\110\111\112\113\114\115\116\117"
+#define TESTSTRING120 "\120\121\122\123\124\125\126\127\130\131\132\133\134\135\136\137"
+#define TESTSTRING140 "\140\141\142\143\144\145\146\147\150\151\152\153\154\155\156\157"
+#define TESTSTRING160 "\160\161\162\163\164\165\166\167\170\171\172\173\174\175\176\177"
+#define TESTSTRING200 "\200\201\202\203\204\205\206\207\210\211\212\213\214\215\216\217"
+#define TESTSTRING220 "\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237"
+#define TESTSTRING240 "\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257"
+#define TESTSTRING260 "\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277"
+#define TESTSTRING300 "\300\301\302\303\304\305\306\307\310\311\312\313\314\315\316\317"
+#define TESTSTRING320 "\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337"
+#define TESTSTRING340 "\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357"
+#define TESTSTRING360 "\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377"
+*/
+
 #include LANGUAGE_INCLUDE
 
 #endif //__LANGUAGE_H
diff --git a/Marlin/language_de.h b/Marlin/language_de.h
index 8aa0602..bbad533 100644
--- a/Marlin/language_de.h
+++ b/Marlin/language_de.h
@@ -9,97 +9,96 @@
 #define LANGUAGE_DE_H
 
 #define WELCOME_MSG                         MACHINE_NAME " Bereit."
-#define MSG_SD_INSERTED                     "SDKarte erkannt"
-#define MSG_SD_REMOVED                      "SDKarte entfernt"
-#define MSG_MAIN                            "Hauptmenü"
+#define MSG_SD_INSERTED                     "SDKarte erkannt."
+#define MSG_SD_REMOVED                      "SDKarte entfernt."
+#define MSG_MAIN                            "Hauptmen" STR_ue
 #define MSG_AUTOSTART                       "Autostart"
-#define MSG_DISABLE_STEPPERS                "Stepper abschalt."
-#define MSG_AUTO_HOME                       "Auto Nullpunkt"
-#define MSG_SET_HOME_OFFSETS                "Set home offsets"
-#define MSG_SET_ORIGIN                      "Setze Nullpunkt"
-#define MSG_PREHEAT_PLA                     "Vorwärmen PLA"
-#define MSG_PREHEAT_PLA_N                   "Vorwärmen PLA "
+#define MSG_DISABLE_STEPPERS                "Motoren Aus" // M84
+#define MSG_AUTO_HOME                       "Home" // G28
+#define MSG_SET_HOME_OFFSETS                "Setze Home hier"
+#define MSG_SET_ORIGIN                      "Setze Null hier" //"G92 X0 Y0 Z0" commented out in ultralcd.cpp
+#define MSG_PREHEAT_PLA                     "Vorw" STR_ae "rmen PLA"
+#define MSG_PREHEAT_PLA_N                   "Vorw" STR_ae "rmen PLA "
 #define MSG_PREHEAT_PLA_ALL                 "Vorw. PLA Alle"
 #define MSG_PREHEAT_PLA_BEDONLY             "Vorw. PLA Bett"
-#define MSG_PREHEAT_PLA_SETTINGS            "Vorwärm. PLA Ein."
-#define MSG_PREHEAT_ABS                     "Vorwärmen ABS"
-#define MSG_PREHEAT_ABS_N                   "Vorwärmen ABS "
+#define MSG_PREHEAT_PLA_SETTINGS            "Vorw" STR_ae "rm. PLA Ein."
+#define MSG_PREHEAT_ABS                     "Vorw" STR_ae "rmen ABS"
+#define MSG_PREHEAT_ABS_N                   "Vorw" STR_ae "rmen ABS "
 #define MSG_PREHEAT_ABS_ALL                 "Vorw. ABS Alle"
 #define MSG_PREHEAT_ABS_BEDONLY             "Vorw. ABS Bett"
-#define MSG_PREHEAT_ABS_SETTINGS            "Vorwärm. ABS Ein."
-#define MSG_COOLDOWN                        "Abkühlen"
-#define MSG_SWITCH_PS_ON                    "Switch Power On"
-#define MSG_SWITCH_PS_OFF                   "Switch Power Off"
-#define MSG_EXTRUDE                         "Extrude"
+#define MSG_PREHEAT_ABS_SETTINGS            "Vorw" STR_ae "rm. ABS Ein."
+#define MSG_COOLDOWN                        "Abk" STR_ue "hlen"
+#define MSG_SWITCH_PS_ON                    "Netzteil Ein"
+#define MSG_SWITCH_PS_OFF                   "Netzteil Aus"
 #define MSG_RETRACT                         "Retract"
-#define MSG_MOVE_AXIS                       "Achsen bewegen"
-#define MSG_MOVE_X                          "X bewegen"
-#define MSG_MOVE_Y                          "Y bewegen"
-#define MSG_MOVE_Z                          "Z bewegen"
-#define MSG_MOVE_E                          "Extruder"
-#define MSG_MOVE_01MM                       "0.1mm bewegen"
-#define MSG_MOVE_1MM                        "1mm bewegen"
-#define MSG_MOVE_10MM                       "10mm bewegen"
-#define MSG_SPEED                           "Geschw"
-#define MSG_NOZZLE                          "Düse"
+#define MSG_MOVE_AXIS                       "Bewegen"
+#define MSG_MOVE_X                          "X"
+#define MSG_MOVE_Y                          "Y"
+#define MSG_MOVE_Z                          "Z"
+#define MSG_MOVE_E                          "E"
+#define MSG_MOVE_01MM                       " 0.1 mm"
+#define MSG_MOVE_1MM                        " 1.0 mm"
+#define MSG_MOVE_10MM                       "10.0 mm"
+#define MSG_SPEED                           "Geschw."
+#define MSG_NOZZLE                          "D" STR_ue "se"
 #define MSG_BED                             "Bett"
-#define MSG_FAN_SPEED                       "Lüftergeschw."
+#define MSG_FAN_SPEED                       "L" STR_ue "ftergeschw."
 #define MSG_FLOW                            "Fluss"
 #define MSG_CONTROL                         "Einstellungen"
-#define MSG_MIN                             "\002 Min"
-#define MSG_MAX                             "\002 Max"
-#define MSG_FACTOR                          "\002 Faktor"
+#define MSG_MIN                             STR_THERMOMETER " Min"
+#define MSG_MAX                             STR_THERMOMETER " Max"
+#define MSG_FACTOR                          STR_THERMOMETER " Faktor"
 #define MSG_AUTOTEMP                        "AutoTemp"
 #define MSG_ON                              "Ein"
 #define MSG_OFF                             "Aus"
-#define MSG_PID_P                           "PID-P"
-#define MSG_PID_I                           "PID-I"
-#define MSG_PID_D                           "PID-D"
-#define MSG_PID_C                           "PID-C"
-#define MSG_ACC                             "Acc"
-#define MSG_VXY_JERK                        "Vxy-jerk"
-#define MSG_VZ_JERK                         "Vz-jerk"
-#define MSG_VE_JERK                         "Ve-jerk"
-#define MSG_VMAX                            "Vmax "
+#define MSG_PID_P                           "PID P"
+#define MSG_PID_I                           "PID I"
+#define MSG_PID_D                           "PID D"
+#define MSG_PID_C                           "PID C"
+#define MSG_ACC                             "A"
+#define MSG_VXY_JERK                        "V xy jerk"
+#define MSG_VZ_JERK                         "V z  jerk"
+#define MSG_VE_JERK                         "V e  jerk"
+#define MSG_VMAX                            "V max " // space by purpose
 #define MSG_X                               "x"
 #define MSG_Y                               "y"
 #define MSG_Z                               "z"
 #define MSG_E                               "e"
-#define MSG_VMIN                            "Vmin"
+#define MSG_VMIN                            "V min"
 #define MSG_VTRAV_MIN                       "VTrav min"
-#define MSG_AMAX                            "Amax "
-#define MSG_A_RETRACT                       "A-Retract"
-#define MSG_XSTEPS                          "Xsteps/mm"
-#define MSG_YSTEPS                          "Ysteps/mm"
-#define MSG_ZSTEPS                          "Zsteps/mm"
-#define MSG_ESTEPS                          "Esteps/mm"
+#define MSG_AMAX                            "A max " // space by purpose
+#define MSG_A_RETRACT                       "A Retract"
+#define MSG_XSTEPS                          "X steps/mm"
+#define MSG_YSTEPS                          "Y steps/mm"
+#define MSG_ZSTEPS                          "Z steps/mm"
+#define MSG_ESTEPS                          "E steps/mm"
 #define MSG_TEMPERATURE                     "Temperatur"
 #define MSG_MOTION                          "Bewegung"
 #define MSG_VOLUMETRIC                      "Filament"
-#define MSG_VOLUMETRIC_ENABLED		        "E in mm3"
-#define MSG_FILAMENT_SIZE_EXTRUDER_0        "Fil. Dia. 1"
-#define MSG_FILAMENT_SIZE_EXTRUDER_1        "Fil. Dia. 2"
-#define MSG_FILAMENT_SIZE_EXTRUDER_2        "Fil. Dia. 3"
+#define MSG_VOLUMETRIC_ENABLED		          "E in mm3"
+#define MSG_FILAMENT_SIZE_EXTRUDER_0        "Filament D 1"
+#define MSG_FILAMENT_SIZE_EXTRUDER_1        "Filament D 2"
+#define MSG_FILAMENT_SIZE_EXTRUDER_2        "Filament D 3"
 #define MSG_CONTRAST                        "LCD contrast"
 #define MSG_STORE_EPROM                     "EPROM speichern"
 #define MSG_LOAD_EPROM                      "EPROM laden"
 #define MSG_RESTORE_FAILSAFE                "Standardkonfig."
 #define MSG_REFRESH                         "Aktualisieren"
-#define MSG_WATCH                           "Beobachten"
+#define MSG_WATCH                           "Info"
 #define MSG_PREPARE                         "Vorbereitung"
 #define MSG_TUNE                            "Justierung"
-#define MSG_PAUSE_PRINT                     "Druck anhalten"
-#define MSG_RESUME_PRINT                    "Druck fortsetz"
-#define MSG_STOP_PRINT                      "Druck stoppen"
-#define MSG_CARD_MENU                       "SDKarten Menü"
+#define MSG_PAUSE_PRINT                     "SD-Druck Pause"
+#define MSG_RESUME_PRINT                    "SD-Druck Weiter"
+#define MSG_STOP_PRINT                      "SD-Druck Abbruch"
+#define MSG_CARD_MENU                       "SDKarte"
 #define MSG_NO_CARD                         "Keine SDKarte"
 #define MSG_DWELL                           "Warten..."
-#define MSG_USERWAIT                        "Warte auf Nutzer"
-#define MSG_RESUMING                        "Druck fortsetzung"
-#define MSG_PRINT_ABORTED                   "Print aborted"
-#define MSG_NO_MOVE                         "Kein Zug."
-#define MSG_KILLED                          "KILLED"
-#define MSG_STOPPED                         "GESTOPPT"
+#define MSG_USERWAIT                        "Warte auf Nutzer."
+#define MSG_RESUMING                        "Druck geht weiter"
+#define MSG_PRINT_ABORTED                   "Druck abgebrochen"
+#define MSG_NO_MOVE                         "Motoren Eingesch."
+#define MSG_KILLED                          "KILLED."
+#define MSG_STOPPED                         "ANGEHALTEN."
 #define MSG_CONTROL_RETRACT                 "Retract mm"
 #define MSG_CONTROL_RETRACT_SWAP            "Wechs. Retract mm"
 #define MSG_CONTROL_RETRACTF                "Retract  V"
@@ -109,22 +108,22 @@
 #define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"
 #define MSG_AUTORETRACT                     "AutoRetr."
 #define MSG_FILAMENTCHANGE                  "Filament wechseln"
-#define MSG_INIT_SDCARD                     "Init. SD-Card"
-#define MSG_CNG_SDCARD                      "Change SD-Card"
-#define MSG_ZPROBE_OUT                      "Z probe out. bed"
-#define MSG_POSITION_UNKNOWN                "Home X/Y before Z"
+#define MSG_INIT_SDCARD                     "SDKarte erkennen"// Manually initialize the SD-card via user interface
+#define MSG_CNG_SDCARD                      "SDKarte erkennen"// SD-card changed by user. For machines with no autocarddetect. Both send "M21"
+#define MSG_ZPROBE_OUT                      "Sensor ausserhalb"
+#define MSG_POSITION_UNKNOWN                "X/Y vor Z Homen."
 #define MSG_ZPROBE_ZOFFSET                  "Z Offset"
 #define MSG_BABYSTEP_X                      "Babystep X"
 #define MSG_BABYSTEP_Y                      "Babystep Y"
 #define MSG_BABYSTEP_Z                      "Babystep Z"
-#define MSG_ENDSTOP_ABORT                   "Endstop abort"
+#define MSG_ENDSTOP_ABORT                   "Endstop Abbr. Ein"
 
 #ifdef DELTA_CALIBRATION_MENU
-    #define MSG_DELTA_CALIBRATE             "Delta Calibration"
-    #define MSG_DELTA_CALIBRATE_X           "Calibrate X"
-    #define MSG_DELTA_CALIBRATE_Y           "Calibrate Y"
-    #define MSG_DELTA_CALIBRATE_Z           "Calibrate Z"
-    #define MSG_DELTA_CALIBRATE_CENTER      "Calibrate Center"
+    #define MSG_DELTA_CALIBRATE             "Delta Kalibrieren"
+    #define MSG_DELTA_CALIBRATE_X           "Kalibriere X"
+    #define MSG_DELTA_CALIBRATE_Y           "Kalibriere Y"
+    #define MSG_DELTA_CALIBRATE_Z           "Kalibriere Z"
+    #define MSG_DELTA_CALIBRATE_CENTER      "Kalibriere Mitte"
 #endif // DELTA_CALIBRATION_MENU
 
 #endif // LANGUAGE_DE_H

