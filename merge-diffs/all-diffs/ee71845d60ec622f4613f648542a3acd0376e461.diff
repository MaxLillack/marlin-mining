commit ee71845d60ec622f4613f648542a3acd0376e461 (from 2cbb85fe8875f8b8bbcb7e2821e53ef41a8cb23c)
Merge: 2cbb85f a6628f1
Author: Richard Wackerbarth <rkw@dataplex.net>
Date:   Wed Jul 15 20:53:21 2015 -0500

    Merge Servo pin (PR#2425)

diff --git a/Marlin/servo.cpp b/Marlin/servo.cpp
index 21f5e04..97def9e 100644
--- a/Marlin/servo.cpp
+++ b/Marlin/servo.cpp
@@ -244,11 +244,9 @@ uint8_t Servo::attach(int pin) {
 
 uint8_t Servo::attach(int pin, int min, int max) {
   if (this->servoIndex < MAX_SERVOS ) {
-  #if defined(ENABLE_AUTO_BED_LEVELING) && (PROBE_SERVO_DEACTIVATION_DELAY > 0)
-    if (pin > 0) this->pin = pin; else pin = this->pin;
-  #endif
-    pinMode(pin, OUTPUT);                                   // set servo pin to output
-    servos[this->servoIndex].Pin.nbr = pin;
+    if(pin > 0)
+      servos[this->servoIndex].Pin.nbr = pin;
+    pinMode(servos[this->servoIndex].Pin.nbr, OUTPUT); // set servo pin to output
     // todo min/max check: abs(min - MIN_PULSE_WIDTH) /4 < 128
     this->min = (MIN_PULSE_WIDTH - min) / 4; //resolution of min/max is 4 uS
     this->max = (MAX_PULSE_WIDTH - max) / 4;
diff --git a/Marlin/servo.h b/Marlin/servo.h
index 9a78643..b370003 100644
--- a/Marlin/servo.h
+++ b/Marlin/servo.h
@@ -128,9 +128,7 @@ class Servo {
     int read();                        // returns current pulse width as an angle between 0 and 180 degrees
     int readMicroseconds();            // returns current pulse width in microseconds for this servo (was read_us() in first release)
     bool attached();                   // return true if this servo is attached, otherwise false
-    #if defined(ENABLE_AUTO_BED_LEVELING) && PROBE_SERVO_DEACTIVATION_DELAY > 0
-      int pin;                           // store the hardware pin of the servo
-    #endif
+
   private:
     uint8_t servoIndex;               // index into the channel data for this servo
     int8_t min;                       // minimum is this value times 4 added to MIN_PULSE_WIDTH

