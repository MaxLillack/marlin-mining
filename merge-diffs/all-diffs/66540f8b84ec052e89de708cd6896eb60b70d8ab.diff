commit 66540f8b84ec052e89de708cd6896eb60b70d8ab (from dd26c67bab002d66a361e3b9c47906f91a97bc9b)
Merge: dd26c67 68d0347
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 25 18:58:41 2016 -0700

    Merge pull request #3615 from thinkyhead/rc_whats_up_with_M112
    
    Report current position to host after M206 / M428

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 6b0f52b..bb231e2 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -504,7 +504,7 @@ void serial_echopair_P(const char* s_P, float v)         { serialprintPGM(s_P);
 void serial_echopair_P(const char* s_P, double v)        { serialprintPGM(s_P); SERIAL_ECHO(v); }
 void serial_echopair_P(const char* s_P, unsigned long v) { serialprintPGM(s_P); SERIAL_ECHO(v); }
 
-void gcode_M114();
+static void report_current_position();
 
 #if ENABLED(DEBUG_LEVELING_FEATURE)
   void print_xyz(const char* prefix, const float x, const float y, const float z) {
@@ -2886,8 +2886,7 @@ inline void gcode_G28() {
     }
   #endif
 
-  gcode_M114(); // Send end position to RepetierHost
-
+  report_current_position();
 }
 
 #if ENABLED(MESH_BED_LEVELING)
@@ -3595,8 +3594,7 @@ inline void gcode_G28() {
       }
     #endif
 
-    gcode_M114(); // Send end position to RepetierHost
-
+    report_current_position();
   }
 
   #if DISABLED(Z_PROBE_SLED) // could be avoided
@@ -3632,7 +3630,7 @@ inline void gcode_G28() {
       #endif
       stow_z_probe(false); // Retract Z Servo endstop if available. Z_PROBE_SLED is missed here.
 
-      gcode_M114(); // Send end position to RepetierHost
+      report_current_position();
     }
 
   #endif //!Z_PROBE_SLED
@@ -4229,7 +4227,7 @@ inline void gcode_M42() {
 
     clean_up_after_endstop_move();
 
-    gcode_M114(); // Send end position to RepetierHost
+    report_current_position();
   }
 
 #endif // AUTO_BED_LEVELING_FEATURE && Z_MIN_PROBE_REPEATABILITY_TEST
@@ -4878,9 +4876,9 @@ inline void gcode_M92() {
 }
 
 /**
- * M114: Output current position to serial port
+ * Output the current position to serial
  */
-inline void gcode_M114() {
+static void report_current_position() {
   SERIAL_PROTOCOLPGM("X:");
   SERIAL_PROTOCOL(current_position[X_AXIS]);
   SERIAL_PROTOCOLPGM(" Y:");
@@ -4942,6 +4940,11 @@ inline void gcode_M114() {
 }
 
 /**
+ * M114: Output current position to serial port
+ */
+inline void gcode_M114() { report_current_position(); }
+
+/**
  * M115: Capabilities string
  */
 inline void gcode_M115() {
@@ -5196,7 +5199,9 @@ inline void gcode_M206() {
     if (code_seen('T')) set_home_offset(X_AXIS, code_value()); // Theta
     if (code_seen('P')) set_home_offset(Y_AXIS, code_value()); // Psi
   #endif
+
   sync_plan_position();
+  report_current_position();
 }
 
 #if ENABLED(DELTA)
@@ -5915,6 +5920,7 @@ inline void gcode_M428() {
 
   if (!err) {
     sync_plan_position();
+    report_current_position();
     LCD_MESSAGEPGM(MSG_HOME_OFFSETS_APPLIED);
     #if HAS_BUZZER
       buzz(200, 659);

commit 66540f8b84ec052e89de708cd6896eb60b70d8ab (from 68d0347e677e4b2b3788d35617a5d3ebfac7e11e)
Merge: dd26c67 68d0347
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Apr 25 18:58:41 2016 -0700

    Merge pull request #3615 from thinkyhead/rc_whats_up_with_M112
    
    Report current position to host after M206 / M428

diff --git a/Marlin/stopwatch.cpp b/Marlin/stopwatch.cpp
index 60d556a..f871af1 100644
--- a/Marlin/stopwatch.cpp
+++ b/Marlin/stopwatch.cpp
@@ -34,7 +34,7 @@ void Stopwatch::stop() {
 
   if (!this->isRunning()) return;
 
-  this->status = STPWTCH_STOPPED;
+  this->state = STPWTCH_STOPPED;
   this->stopTimestamp = millis();
 }
 
@@ -45,7 +45,7 @@ void Stopwatch::pause() {
 
   if (!this->isRunning()) return;
 
-  this->status = STPWTCH_PAUSED;
+  this->state = STPWTCH_PAUSED;
   this->stopTimestamp = millis();
 }
 
@@ -59,7 +59,7 @@ void Stopwatch::start() {
   if (this->isPaused()) this->accumulator = this->duration();
   else this->reset();
 
-  this->status = STPWTCH_RUNNING;
+  this->state = STPWTCH_RUNNING;
   this->startTimestamp = millis();
 }
 
@@ -68,18 +68,18 @@ void Stopwatch::reset() {
     debug(PSTR("reset"));
   #endif
 
-  this->status = STPWTCH_STOPPED;
+  this->state = STPWTCH_STOPPED;
   this->startTimestamp = 0;
   this->stopTimestamp = 0;
   this->accumulator = 0;
 }
 
 bool Stopwatch::isRunning() {
-  return (this->status == STPWTCH_RUNNING) ? true : false;
+  return (this->state == STPWTCH_RUNNING) ? true : false;
 }
 
 bool Stopwatch::isPaused() {
-  return (this->status == STPWTCH_PAUSED) ? true : false;
+  return (this->state == STPWTCH_PAUSED) ? true : false;
 }
 
 uint16_t Stopwatch::duration() {
diff --git a/Marlin/stopwatch.h b/Marlin/stopwatch.h
index 53c0f14..6ac69ea 100644
--- a/Marlin/stopwatch.h
+++ b/Marlin/stopwatch.h
@@ -28,7 +28,7 @@
 // Print debug messages with M111 S2 (Uses 156 bytes of PROGMEM)
 //#define DEBUG_STOPWATCH
 
-enum StopwatchStatus {
+enum StopwatchState {
   STPWTCH_STOPPED,
   STPWTCH_RUNNING,
   STPWTCH_PAUSED
@@ -41,7 +41,7 @@ enum StopwatchStatus {
  */
 class Stopwatch {
   private:
-    StopwatchStatus status;
+    StopwatchState state;
     uint16_t accumulator;
     uint32_t startTimestamp;
     uint32_t stopTimestamp;

