commit 2a9b3376a94198a20382a050edabd418db1407d6 (from 2e966f8e5b89c67c43b7b31a7d881780a547daa3)
Merge: 2e966f8 b97dafe
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 23 23:04:05 2016 -0600

    Merge pull request #5289 from thinkyhead/rc_which_menu_actions
    
    Drop "static" keyword in ultralcd.cpp function declarations

diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 74efa0a..066215f 100755
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -59,7 +59,7 @@ char lcd_status_message[3 * (LCD_WIDTH) + 1] = WELCOME_MSG; // worst case is kan
 #endif
 
 // The main status screen
-static void lcd_status_screen();
+void lcd_status_screen();
 
 millis_t next_lcd_update_ms;
 
@@ -114,53 +114,53 @@ uint8_t lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; // Set when the LCD needs to
     extern bool case_light_on;
   #endif
   const float manual_feedrate_mm_m[] = MANUAL_FEEDRATE;
-  static void lcd_main_menu();
-  static void lcd_tune_menu();
-  static void lcd_prepare_menu();
-  static void lcd_move_menu();
-  static void lcd_control_menu();
-  static void lcd_control_temperature_menu();
-  static void lcd_control_temperature_preheat_pla_settings_menu();
-  static void lcd_control_temperature_preheat_abs_settings_menu();
-  static void lcd_control_motion_menu();
-  static void lcd_control_volumetric_menu();
+  void lcd_main_menu();
+  void lcd_tune_menu();
+  void lcd_prepare_menu();
+  void lcd_move_menu();
+  void lcd_control_menu();
+  void lcd_control_temperature_menu();
+  void lcd_control_temperature_preheat_pla_settings_menu();
+  void lcd_control_temperature_preheat_abs_settings_menu();
+  void lcd_control_motion_menu();
+  void lcd_control_volumetric_menu();
 
   #if ENABLED(DAC_STEPPER_CURRENT)
-    static void dac_driver_commit();
-    static void dac_driver_getValues();
-    static void lcd_dac_menu();
-    static void lcd_dac_write_eeprom();
+    void dac_driver_commit();
+    void dac_driver_getValues();
+    void lcd_dac_menu();
+    void lcd_dac_write_eeprom();
   #endif
 
   #if ENABLED(LCD_INFO_MENU)
     #if ENABLED(PRINTCOUNTER)
-      static void lcd_info_stats_menu();
+      void lcd_info_stats_menu();
     #endif
-    static void lcd_info_thermistors_menu();
-    static void lcd_info_board_menu();
-    static void lcd_info_menu();
+    void lcd_info_thermistors_menu();
+    void lcd_info_board_menu();
+    void lcd_info_menu();
   #endif // LCD_INFO_MENU
 
   #if ENABLED(FILAMENT_CHANGE_FEATURE)
-    static void lcd_filament_change_option_menu();
-    static void lcd_filament_change_init_message();
-    static void lcd_filament_change_unload_message();
-    static void lcd_filament_change_insert_message();
-    static void lcd_filament_change_load_message();
-    static void lcd_filament_change_extrude_message();
-    static void lcd_filament_change_resume_message();
+    void lcd_filament_change_option_menu();
+    void lcd_filament_change_init_message();
+    void lcd_filament_change_unload_message();
+    void lcd_filament_change_insert_message();
+    void lcd_filament_change_load_message();
+    void lcd_filament_change_extrude_message();
+    void lcd_filament_change_resume_message();
   #endif
 
   #if HAS_LCD_CONTRAST
-    static void lcd_set_contrast();
+    void lcd_set_contrast();
   #endif
 
   #if ENABLED(FWRETRACT)
-    static void lcd_control_retract_menu();
+    void lcd_control_retract_menu();
   #endif
 
   #if ENABLED(DELTA_CALIBRATION_MENU)
-    static void lcd_delta_calibrate_menu();
+    void lcd_delta_calibrate_menu();
   #endif
 
   #if ENABLED(MANUAL_BED_LEVELING)
@@ -172,35 +172,35 @@ uint8_t lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; // Set when the LCD needs to
 
   // Different types of actions that can be used in menu items.
   #define menu_action_back(dummy) _menu_action_back()
-  static void _menu_action_back();
-  static void menu_action_submenu(screenFunc_t data);
-  static void menu_action_gcode(const char* pgcode);
-  static void menu_action_function(screenFunc_t data);
-  static void menu_action_setting_edit_bool(const char* pstr, bool* ptr);
-  static void menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
-  static void menu_action_setting_edit_float3(const char* pstr, float* ptr, float minValue, float maxValue);
-  static void menu_action_setting_edit_float32(const char* pstr, float* ptr, float minValue, float maxValue);
-  static void menu_action_setting_edit_float43(const char* pstr, float* ptr, float minValue, float maxValue);
-  static void menu_action_setting_edit_float5(const char* pstr, float* ptr, float minValue, float maxValue);
-  static void menu_action_setting_edit_float51(const char* pstr, float* ptr, float minValue, float maxValue);
-  static void menu_action_setting_edit_float52(const char* pstr, float* ptr, float minValue, float maxValue);
-  static void menu_action_setting_edit_float62(const char* pstr, float* ptr, float minValue, float maxValue);
-  static void menu_action_setting_edit_long5(const char* pstr, unsigned long* ptr, unsigned long minValue, unsigned long maxValue);
-  static void menu_action_setting_edit_callback_bool(const char* pstr, bool* ptr, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_int3(const char* pstr, int* ptr, int minValue, int maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_float3(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_float32(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_float43(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_float5(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_float51(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_float52(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_float62(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
-  static void menu_action_setting_edit_callback_long5(const char* pstr, unsigned long* ptr, unsigned long minValue, unsigned long maxValue, screenFunc_t callbackFunc);
+  void _menu_action_back();
+  void menu_action_submenu(screenFunc_t data);
+  void menu_action_gcode(const char* pgcode);
+  void menu_action_function(screenFunc_t data);
+  void menu_action_setting_edit_bool(const char* pstr, bool* ptr);
+  void menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
+  void menu_action_setting_edit_float3(const char* pstr, float* ptr, float minValue, float maxValue);
+  void menu_action_setting_edit_float32(const char* pstr, float* ptr, float minValue, float maxValue);
+  void menu_action_setting_edit_float43(const char* pstr, float* ptr, float minValue, float maxValue);
+  void menu_action_setting_edit_float5(const char* pstr, float* ptr, float minValue, float maxValue);
+  void menu_action_setting_edit_float51(const char* pstr, float* ptr, float minValue, float maxValue);
+  void menu_action_setting_edit_float52(const char* pstr, float* ptr, float minValue, float maxValue);
+  void menu_action_setting_edit_float62(const char* pstr, float* ptr, float minValue, float maxValue);
+  void menu_action_setting_edit_long5(const char* pstr, unsigned long* ptr, unsigned long minValue, unsigned long maxValue);
+  void menu_action_setting_edit_callback_bool(const char* pstr, bool* ptr, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_int3(const char* pstr, int* ptr, int minValue, int maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_float3(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_float32(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_float43(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_float5(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_float51(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_float52(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_float62(const char* pstr, float* ptr, float minValue, float maxValue, screenFunc_t callbackFunc);
+  void menu_action_setting_edit_callback_long5(const char* pstr, unsigned long* ptr, unsigned long minValue, unsigned long maxValue, screenFunc_t callbackFunc);
 
   #if ENABLED(SDSUPPORT)
-    static void lcd_sdcard_menu();
-    static void menu_action_sdfile(const char* filename, char* longFilename);
-    static void menu_action_sddirectory(const char* filename, char* longFilename);
+    void lcd_sdcard_menu();
+    void menu_action_sdfile(const char* filename, char* longFilename);
+    void menu_action_sddirectory(const char* filename, char* longFilename);
   #endif
 
   /* Helper macros for menus */
@@ -394,7 +394,7 @@ uint8_t lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; // Set when the LCD needs to
   /**
    * General function to go directly to a screen
    */
-  static void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder = 0) {
+  void lcd_goto_screen(screenFunc_t screen, const uint32_t encoder = 0) {
     if (currentScreen != screen) {
       currentScreen = screen;
       encoderPosition = encoder;
@@ -411,7 +411,7 @@ uint8_t lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; // Set when the LCD needs to
     }
   }
 
-  static void lcd_return_to_status() { lcd_goto_screen(lcd_status_screen); }
+  void lcd_return_to_status() { lcd_goto_screen(lcd_status_screen); }
 
   inline void lcd_save_previous_menu() {
     if (screen_history_depth < COUNT(screen_history)) {
@@ -421,7 +421,7 @@ uint8_t lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; // Set when the LCD needs to
     }
   }
 
-  static void lcd_goto_previous_menu() {
+  void lcd_goto_previous_menu() {
     if (screen_history_depth > 0) {
       --screen_history_depth;
       lcd_goto_screen(
@@ -442,7 +442,7 @@ uint8_t lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; // Set when the LCD needs to
  * This is very display-dependent, so the lcd implementation draws this.
  */
 
-static void lcd_status_screen() {
+void lcd_status_screen() {
 
   #if ENABLED(ULTIPANEL)
     ENCODER_DIRECTION_NORMAL();
@@ -552,17 +552,17 @@ void kill_screen(const char* lcd_msg) {
 
   #if ENABLED(SDSUPPORT)
 
-    static void lcd_sdcard_pause() {
+    void lcd_sdcard_pause() {
       card.pauseSDPrint();
       print_job_timer.pause();
     }
 
-    static void lcd_sdcard_resume() {
+    void lcd_sdcard_resume() {
       card.startFileprint();
       print_job_timer.start();
     }
 
-    static void lcd_sdcard_stop() {
+    void lcd_sdcard_stop() {
       card.stopSDPrint();
       clear_command_queue();
       quickstop_stepper();
@@ -582,7 +582,7 @@ void kill_screen(const char* lcd_msg) {
    *
    */
 
-  static void lcd_main_menu() {
+  void lcd_main_menu() {
     START_MENU();
     MENU_BACK(MSG_WATCH);
 
@@ -662,7 +662,7 @@ void kill_screen(const char* lcd_msg) {
 
     long babysteps_done = 0;
 
-    static void _lcd_babystep(const AxisEnum axis, const char* msg) {
+    void _lcd_babystep(const AxisEnum axis, const char* msg) {
       if (lcd_clicked) { defer_return_to_status = false; return lcd_goto_previous_menu(); }
       ENCODER_DIRECTION_NORMAL();
       if (encoderPosition) {
@@ -679,13 +679,13 @@ void kill_screen(const char* lcd_msg) {
     }
 
     #if ENABLED(BABYSTEP_XY)
-      static void _lcd_babystep_x() { _lcd_babystep(X_AXIS, PSTR(MSG_BABYSTEPPING_X)); }
-      static void _lcd_babystep_y() { _lcd_babystep(Y_AXIS, PSTR(MSG_BABYSTEPPING_Y)); }
-      static void lcd_babystep_x() { lcd_goto_screen(_lcd_babystep_x); babysteps_done = 0; defer_return_to_status = true; }
-      static void lcd_babystep_y() { lcd_goto_screen(_lcd_babystep_y); babysteps_done = 0; defer_return_to_status = true; }
+      void _lcd_babystep_x() { _lcd_babystep(X_AXIS, PSTR(MSG_BABYSTEPPING_X)); }
+      void _lcd_babystep_y() { _lcd_babystep(Y_AXIS, PSTR(MSG_BABYSTEPPING_Y)); }
+      void lcd_babystep_x() { lcd_goto_screen(_lcd_babystep_x); babysteps_done = 0; defer_return_to_status = true; }
+      void lcd_babystep_y() { lcd_goto_screen(_lcd_babystep_y); babysteps_done = 0; defer_return_to_status = true; }
     #endif
-    static void _lcd_babystep_z() { _lcd_babystep(Z_AXIS, PSTR(MSG_BABYSTEPPING_Z)); }
-    static void lcd_babystep_z() { lcd_goto_screen(_lcd_babystep_z); babysteps_done = 0; defer_return_to_status = true; }
+    void _lcd_babystep_z() { _lcd_babystep(Z_AXIS, PSTR(MSG_BABYSTEPPING_Z)); }
+    void lcd_babystep_z() { lcd_goto_screen(_lcd_babystep_z); babysteps_done = 0; defer_return_to_status = true; }
 
   #endif //BABYSTEPPING
 
@@ -731,7 +731,7 @@ void kill_screen(const char* lcd_msg) {
   #endif
 
   #if ENABLED(FILAMENT_CHANGE_FEATURE)
-    static void lcd_enqueue_filament_change() {
+    void lcd_enqueue_filament_change() {
       lcd_filament_change_show_message(FILAMENT_CHANGE_MESSAGE_INIT);
       enqueue_and_echo_commands_P(PSTR("M600"));
     }
@@ -742,7 +742,7 @@ void kill_screen(const char* lcd_msg) {
    * "Tune" submenu
    *
    */
-  static void lcd_tune_menu() {
+  void lcd_tune_menu() {
     START_MENU();
 
     //
@@ -864,13 +864,13 @@ void kill_screen(const char* lcd_msg) {
    *
    */
   #if ENABLED(DAC_STEPPER_CURRENT)
-    static void dac_driver_getValues() { LOOP_XYZE(i) driverPercent[i] = dac_current_get_percent((AxisEnum)i); }
+    void dac_driver_getValues() { LOOP_XYZE(i) driverPercent[i] = dac_current_get_percent((AxisEnum)i); }
 
-    static void dac_driver_commit() { dac_current_set_percents(driverPercent); }
+    void dac_driver_commit() { dac_current_set_percents(driverPercent); }
 
-    static void dac_driver_eeprom_write() { dac_commit_eeprom(); }
+    void dac_driver_eeprom_write() { dac_commit_eeprom(); }
 
-    static void lcd_dac_menu() {
+    void lcd_dac_menu() {
       dac_driver_getValues();
       START_MENU();
       MENU_BACK(MSG_CONTROL);
@@ -958,7 +958,7 @@ void kill_screen(const char* lcd_msg) {
 
   #if TEMP_SENSOR_0 != 0 && (TEMP_SENSOR_1 != 0 || TEMP_SENSOR_2 != 0 || TEMP_SENSOR_3 != 0 || TEMP_SENSOR_BED != 0)
 
-    static void lcd_preheat_pla_menu() {
+    void lcd_preheat_pla_menu() {
       START_MENU();
       MENU_BACK(MSG_PREPARE);
       #if HOTENDS == 1
@@ -980,7 +980,7 @@ void kill_screen(const char* lcd_msg) {
       END_MENU();
     }
 
-    static void lcd_preheat_abs_menu() {
+    void lcd_preheat_abs_menu() {
       START_MENU();
       MENU_BACK(MSG_PREPARE);
       #if HOTENDS == 1
@@ -1014,7 +1014,7 @@ void kill_screen(const char* lcd_msg) {
 
   #if ENABLED(SDSUPPORT) && ENABLED(MENU_ADDAUTOSTART)
 
-    static void lcd_autostart_sd() {
+    void lcd_autostart_sd() {
       card.autostart_index = 0;
       card.setroot();
       card.checkautostart(true);
@@ -1049,9 +1049,9 @@ void kill_screen(const char* lcd_msg) {
       stepper.synchronize();
     }
 
-    static void _lcd_level_goto_next_point();
+    void _lcd_level_goto_next_point();
 
-    static void _lcd_level_bed_done() {
+    void _lcd_level_bed_done() {
       if (lcdDrawUpdate) lcd_implementation_drawedit(PSTR(MSG_LEVEL_BED_DONE));
       lcdDrawUpdate =
         #if ENABLED(DOGLCD)
@@ -1065,7 +1065,7 @@ void kill_screen(const char* lcd_msg) {
     /**
      * Step 7: Get the Z coordinate, then goto next point or exit
      */
-    static void _lcd_level_bed_get_z() {
+    void _lcd_level_bed_get_z() {
       ENCODER_DIRECTION_NORMAL();
 
       // Encoder wheel adjusts the Z position
@@ -1127,7 +1127,7 @@ void kill_screen(const char* lcd_msg) {
     /**
      * Step 6: Display "Next point: 1 / 9" while waiting for move to finish
      */
-    static void _lcd_level_bed_moving() {
+    void _lcd_level_bed_moving() {
       if (lcdDrawUpdate) {
         char msg[10];
         sprintf_P(msg, PSTR("%i / %u"), (int)(_lcd_level_bed_position + 1), (MESH_NUM_X_POINTS) * (MESH_NUM_Y_POINTS));
@@ -1146,7 +1146,7 @@ void kill_screen(const char* lcd_msg) {
     /**
      * Step 5: Initiate a move to the next point
      */
-    static void _lcd_level_goto_next_point() {
+    void _lcd_level_goto_next_point() {
       // Set the menu to display ahead of blocking call
       lcd_goto_screen(_lcd_level_bed_moving);
 
@@ -1163,7 +1163,7 @@ void kill_screen(const char* lcd_msg) {
      * Step 4: Display "Click to Begin", wait for click
      *         Move to the first probe position
      */
-    static void _lcd_level_bed_homing_done() {
+    void _lcd_level_bed_homing_done() {
       if (lcdDrawUpdate) lcd_implementation_drawedit(PSTR(MSG_LEVEL_BED_WAITING));
       if (lcd_clicked) {
         _lcd_level_bed_position = 0;
@@ -1180,7 +1180,7 @@ void kill_screen(const char* lcd_msg) {
     /**
      * Step 3: Display "Homing XYZ" - Wait for homing to finish
      */
-    static void _lcd_level_bed_homing() {
+    void _lcd_level_bed_homing() {
       if (lcdDrawUpdate) lcd_implementation_drawedit(PSTR(MSG_LEVEL_BED_HOMING), NULL);
       lcdDrawUpdate =
         #if ENABLED(DOGLCD)
@@ -1196,7 +1196,7 @@ void kill_screen(const char* lcd_msg) {
     /**
      * Step 2: Continue Bed Leveling...
      */
-    static void _lcd_level_bed_continue() {
+    void _lcd_level_bed_continue() {
       defer_return_to_status = true;
       axis_homed[X_AXIS] = axis_homed[Y_AXIS] = axis_homed[Z_AXIS] = false;
       mbl.reset();
@@ -1207,7 +1207,7 @@ void kill_screen(const char* lcd_msg) {
     /**
      * Step 1: MBL entry-point: "Cancel" or "Level Bed"
      */
-    static void lcd_level_bed() {
+    void lcd_level_bed() {
       START_MENU();
       MENU_BACK(MSG_LEVEL_BED_CANCEL);
       MENU_ITEM(submenu, MSG_LEVEL_BED, _lcd_level_bed_continue);
@@ -1222,7 +1222,7 @@ void kill_screen(const char* lcd_msg) {
    *
    */
 
-  static void lcd_prepare_menu() {
+  void lcd_prepare_menu() {
     START_MENU();
 
     //
@@ -1317,7 +1317,7 @@ void kill_screen(const char* lcd_msg) {
 
   #if ENABLED(DELTA_CALIBRATION_MENU)
 
-    static void _goto_tower_pos(const float &a) {
+    void _goto_tower_pos(const float &a) {
       do_blocking_move_to(
         a < 0 ? X_HOME_POS : sin(a) * -(DELTA_PRINTABLE_RADIUS),
         a < 0 ? Y_HOME_POS : cos(a) *  (DELTA_PRINTABLE_RADIUS),
@@ -1325,12 +1325,12 @@ void kill_screen(const char* lcd_msg) {
       );
     }
 
-    static void _goto_tower_x() { _goto_tower_pos(RADIANS(120)); }
-    static void _goto_tower_y() { _goto_tower_pos(RADIANS(240)); }
-    static void _goto_tower_z() { _goto_tower_pos(0); }
-    static void _goto_center()  { _goto_tower_pos(-1); }
+    void _goto_tower_x() { _goto_tower_pos(RADIANS(120)); }
+    void _goto_tower_y() { _goto_tower_pos(RADIANS(240)); }
+    void _goto_tower_z() { _goto_tower_pos(0); }
+    void _goto_center()  { _goto_tower_pos(-1); }
 
-    static void lcd_delta_calibrate_menu() {
+    void lcd_delta_calibrate_menu() {
       START_MENU();
       MENU_BACK(MSG_MAIN);
       MENU_ITEM(gcode, MSG_AUTO_HOME, PSTR("G28"));
@@ -1378,7 +1378,7 @@ void kill_screen(const char* lcd_msg) {
    *
    */
 
-  static void _lcd_move_xyz(const char* name, AxisEnum axis) {
+  void _lcd_move_xyz(const char* name, AxisEnum axis) {
     if (lcd_clicked) { return lcd_goto_previous_menu(); }
     ENCODER_DIRECTION_NORMAL();
     if (encoderPosition) {
@@ -1411,10 +1411,10 @@ void kill_screen(const char* lcd_msg) {
     }
     if (lcdDrawUpdate) lcd_implementation_drawedit(name, ftostr41sign(current_position[axis]));
   }
-  static void lcd_move_x() { _lcd_move_xyz(PSTR(MSG_MOVE_X), X_AXIS); }
-  static void lcd_move_y() { _lcd_move_xyz(PSTR(MSG_MOVE_Y), Y_AXIS); }
-  static void lcd_move_z() { _lcd_move_xyz(PSTR(MSG_MOVE_Z), Z_AXIS); }
-  static void _lcd_move_e(
+  void lcd_move_x() { _lcd_move_xyz(PSTR(MSG_MOVE_X), X_AXIS); }
+  void lcd_move_y() { _lcd_move_xyz(PSTR(MSG_MOVE_Y), Y_AXIS); }
+  void lcd_move_z() { _lcd_move_xyz(PSTR(MSG_MOVE_Z), Z_AXIS); }
+  void _lcd_move_e(
     #if E_MANUAL > 1
       int8_t eindex=-1
     #endif
@@ -1451,14 +1451,14 @@ void kill_screen(const char* lcd_msg) {
     }
   }
 
-  static void lcd_move_e() { _lcd_move_e(); }
+  void lcd_move_e() { _lcd_move_e(); }
   #if E_MANUAL > 1
-    static void lcd_move_e0() { _lcd_move_e(0); }
-    static void lcd_move_e1() { _lcd_move_e(1); }
+    void lcd_move_e0() { _lcd_move_e(0); }
+    void lcd_move_e1() { _lcd_move_e(1); }
     #if E_MANUAL > 2
-      static void lcd_move_e2() { _lcd_move_e(2); }
+      void lcd_move_e2() { _lcd_move_e(2); }
       #if E_MANUAL > 3
-        static void lcd_move_e3() { _lcd_move_e(3); }
+        void lcd_move_e3() { _lcd_move_e(3); }
       #endif
     #endif
   #endif
@@ -1475,7 +1475,7 @@ void kill_screen(const char* lcd_msg) {
     #define _MOVE_XYZ_ALLOWED true
   #endif
 
-  static void _lcd_move_menu_axis() {
+  void _lcd_move_menu_axis() {
     START_MENU();
     MENU_BACK(MSG_MOVE_AXIS);
 
@@ -1509,15 +1509,15 @@ void kill_screen(const char* lcd_msg) {
     END_MENU();
   }
 
-  static void lcd_move_menu_10mm() {
+  void lcd_move_menu_10mm() {
     move_menu_scale = 10.0;
     _lcd_move_menu_axis();
   }
-  static void lcd_move_menu_1mm() {
+  void lcd_move_menu_1mm() {
     move_menu_scale = 1.0;
     _lcd_move_menu_axis();
   }
-  static void lcd_move_menu_01mm() {
+  void lcd_move_menu_01mm() {
     move_menu_scale = 0.1;
     _lcd_move_menu_axis();
   }
@@ -1528,7 +1528,7 @@ void kill_screen(const char* lcd_msg) {
    *
    */
 
-  static void lcd_move_menu() {
+  void lcd_move_menu() {
     START_MENU();
     MENU_BACK(MSG_PREPARE);
 
@@ -1547,7 +1547,7 @@ void kill_screen(const char* lcd_msg) {
    *
    */
 
-  static void lcd_control_menu() {
+  void lcd_control_menu() {
     START_MENU();
     MENU_BACK(MSG_MAIN);
     MENU_ITEM(submenu, MSG_TEMPERATURE, lcd_control_temperature_menu);
@@ -1590,7 +1590,7 @@ void kill_screen(const char* lcd_msg) {
       int autotune_temp_bed = 70;
     #endif
 
-    static void _lcd_autotune(int e) {
+    void _lcd_autotune(int e) {
       char cmd[30];
       sprintf_P(cmd, PSTR("M303 U1 E%i S%i"), e,
         #if HAS_PID_FOR_BOTH
@@ -1656,7 +1656,7 @@ void kill_screen(const char* lcd_msg) {
    * "Control" > "Temperature" submenu
    *
    */
-  static void lcd_control_temperature_menu() {
+  void lcd_control_temperature_menu() {
     START_MENU();
 
     //
@@ -1787,7 +1787,7 @@ void kill_screen(const char* lcd_msg) {
     END_MENU();
   }
 
-  static void _lcd_control_temperature_preheat_settings_menu(uint8_t material) {
+  void _lcd_control_temperature_preheat_settings_menu(uint8_t material) {
     START_MENU();
     MENU_BACK(MSG_TEMPERATURE);
     MENU_ITEM_EDIT(int3, MSG_FAN_SPEED, &lcd_preheat_fan_speed[material], 0, 255);
@@ -1808,24 +1808,24 @@ void kill_screen(const char* lcd_msg) {
    * "Temperature" > "Preheat PLA conf" submenu
    *
    */
-  static void lcd_control_temperature_preheat_pla_settings_menu() { _lcd_control_temperature_preheat_settings_menu(0); }
+  void lcd_control_temperature_preheat_pla_settings_menu() { _lcd_control_temperature_preheat_settings_menu(0); }
 
   /**
    *
    * "Temperature" > "Preheat ABS conf" submenu
    *
    */
-  static void lcd_control_temperature_preheat_abs_settings_menu() { _lcd_control_temperature_preheat_settings_menu(1); }
+  void lcd_control_temperature_preheat_abs_settings_menu() { _lcd_control_temperature_preheat_settings_menu(1); }
 
-  static void _reset_acceleration_rates() { planner.reset_acceleration_rates(); }
-  static void _planner_refresh_positioning() { planner.refresh_positioning(); }
+  void _reset_acceleration_rates() { planner.reset_acceleration_rates(); }
+  void _planner_refresh_positioning() { planner.refresh_positioning(); }
 
   /**
    *
    * "Control" > "Motion" submenu
    *
    */
-  static void lcd_control_motion_menu() {
+  void lcd_control_motion_menu() {
     START_MENU();
     MENU_BACK(MSG_CONTROL);
     #if HAS_BED_PROBE
@@ -1871,7 +1871,7 @@ void kill_screen(const char* lcd_msg) {
    * "Control" > "Filament" submenu
    *
    */
-  static void lcd_control_volumetric_menu() {
+  void lcd_control_volumetric_menu() {
     START_MENU();
     MENU_BACK(MSG_CONTROL);
 
@@ -1901,7 +1901,7 @@ void kill_screen(const char* lcd_msg) {
    *
    */
   #if HAS_LCD_CONTRAST
-    static void lcd_set_contrast() {
+    void lcd_set_contrast() {
       if (lcd_clicked) { return lcd_goto_previous_menu(); }
       ENCODER_DIRECTION_NORMAL();
       if (encoderPosition) {
@@ -1928,7 +1928,7 @@ void kill_screen(const char* lcd_msg) {
    */
   #if ENABLED(FWRETRACT)
 
-    static void lcd_control_retract_menu() {
+    void lcd_control_retract_menu() {
       START_MENU();
       MENU_BACK(MSG_CONTROL);
       MENU_ITEM_EDIT(bool, MSG_AUTORETRACT, &autoretract_enabled);
@@ -1951,13 +1951,13 @@ void kill_screen(const char* lcd_msg) {
   #if ENABLED(SDSUPPORT)
 
     #if !PIN_EXISTS(SD_DETECT)
-      static void lcd_sd_refresh() {
+      void lcd_sd_refresh() {
         card.initsd();
         encoderTopLine = 0;
       }
     #endif
 
-    static void lcd_sd_updir() {
+    void lcd_sd_updir() {
       card.updir();
       encoderTopLine = 0;
     }
@@ -2014,7 +2014,7 @@ void kill_screen(const char* lcd_msg) {
        * About Printer > Statistics submenu
        *
        */
-      static void lcd_info_stats_menu() {
+      void lcd_info_stats_menu() {
         if (lcd_clicked) { return lcd_goto_previous_menu(); }
 
         char buffer[21];
@@ -2048,7 +2048,7 @@ void kill_screen(const char* lcd_msg) {
      * About Printer > Thermistors
      *
      */
-    static void lcd_info_thermistors_menu() {
+    void lcd_info_thermistors_menu() {
       if (lcd_clicked) { return lcd_goto_previous_menu(); }
       START_SCREEN();
       #define THERMISTOR_ID TEMP_SENSOR_0
@@ -2100,7 +2100,7 @@ void kill_screen(const char* lcd_msg) {
      * About Printer > Board Info
      *
      */
-    static void lcd_info_board_menu() {
+    void lcd_info_board_menu() {
       if (lcd_clicked) { return lcd_goto_previous_menu(); }
       START_SCREEN();
       STATIC_ITEM(BOARD_NAME, true, true);                           // MyPrinterController
@@ -2121,7 +2121,7 @@ void kill_screen(const char* lcd_msg) {
      * About Printer > Printer Info
      *
      */
-    static void lcd_info_printer_menu() {
+    void lcd_info_printer_menu() {
       if (lcd_clicked) { return lcd_goto_previous_menu(); }
       START_SCREEN();
       STATIC_ITEM(MSG_MARLIN, true, true);                             // Marlin
@@ -2138,7 +2138,7 @@ void kill_screen(const char* lcd_msg) {
      * "About Printer" submenu
      *
      */
-    static void lcd_info_menu() {
+    void lcd_info_menu() {
       START_MENU();
       MENU_BACK(MSG_MAIN);
       MENU_ITEM(submenu, MSG_INFO_PRINTER_MENU, lcd_info_printer_menu);        // Printer Info >
@@ -2153,16 +2153,16 @@ void kill_screen(const char* lcd_msg) {
 
   #if ENABLED(FILAMENT_CHANGE_FEATURE)
 
-    static void lcd_filament_change_resume_print() {
+    void lcd_filament_change_resume_print() {
       filament_change_menu_response = FILAMENT_CHANGE_RESPONSE_RESUME_PRINT;
       lcd_goto_screen(lcd_status_screen);
     }
 
-    static void lcd_filament_change_extrude_more() {
+    void lcd_filament_change_extrude_more() {
       filament_change_menu_response = FILAMENT_CHANGE_RESPONSE_EXTRUDE_MORE;
     }
 
-    static void lcd_filament_change_option_menu() {
+    void lcd_filament_change_option_menu() {
       START_MENU();
       #if LCD_HEIGHT > 2
         STATIC_ITEM(MSG_FILAMENT_CHANGE_OPTION_HEADER, true, false);
@@ -2172,7 +2172,7 @@ void kill_screen(const char* lcd_msg) {
       END_MENU();
     }
 
-    static void lcd_filament_change_init_message() {
+    void lcd_filament_change_init_message() {
       START_SCREEN();
       STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, true, true);
       STATIC_ITEM(MSG_FILAMENT_CHANGE_INIT_1);
@@ -2185,7 +2185,7 @@ void kill_screen(const char* lcd_msg) {
       END_SCREEN();
     }
 
-    static void lcd_filament_change_unload_message() {
+    void lcd_filament_change_unload_message() {
       START_SCREEN();
       STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, true, true);
       STATIC_ITEM(MSG_FILAMENT_CHANGE_UNLOAD_1);
@@ -2198,7 +2198,7 @@ void kill_screen(const char* lcd_msg) {
       END_SCREEN();
     }
 
-    static void lcd_filament_change_insert_message() {
+    void lcd_filament_change_insert_message() {
       START_SCREEN();
       STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, true, true);
       STATIC_ITEM(MSG_FILAMENT_CHANGE_INSERT_1);
@@ -2211,7 +2211,7 @@ void kill_screen(const char* lcd_msg) {
       END_SCREEN();
     }
 
-    static void lcd_filament_change_load_message() {
+    void lcd_filament_change_load_message() {
       START_SCREEN();
       STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, true, true);
       STATIC_ITEM(MSG_FILAMENT_CHANGE_LOAD_1);
@@ -2224,7 +2224,7 @@ void kill_screen(const char* lcd_msg) {
       END_SCREEN();
     }
 
-    static void lcd_filament_change_extrude_message() {
+    void lcd_filament_change_extrude_message() {
       START_SCREEN();
       STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, true, true);
       STATIC_ITEM(MSG_FILAMENT_CHANGE_EXTRUDE_1);
@@ -2237,7 +2237,7 @@ void kill_screen(const char* lcd_msg) {
       END_SCREEN();
     }
 
-    static void lcd_filament_change_resume_message() {
+    void lcd_filament_change_resume_message() {
       START_SCREEN();
       STATIC_ITEM(MSG_FILAMENT_CHANGE_HEADER, true, true);
       STATIC_ITEM(MSG_FILAMENT_CHANGE_RESUME_1);
@@ -2294,9 +2294,9 @@ void kill_screen(const char* lcd_msg) {
    *   bool _menu_edit_int3();
    *   void menu_edit_int3(); // edit int (interactively)
    *   void menu_edit_callback_int3(); // edit int (interactively) with callback on completion
-   *   static void _menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
-   *   static void menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
-   *   static void menu_action_setting_edit_callback_int3(const char* pstr, int* ptr, int minValue, int maxValue, screenFunc_t callback); // edit int with callback
+   *   void _menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
+   *   void menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
+   *   void menu_action_setting_edit_callback_int3(const char* pstr, int* ptr, int minValue, int maxValue, screenFunc_t callback); // edit int with callback
    *
    * You can then use one of the menu macros to present the edit interface:
    *   MENU_ITEM_EDIT(int3, MSG_SPEED, &feedrate_percentage, 10, 999)
@@ -2324,7 +2324,7 @@ void kill_screen(const char* lcd_msg) {
     } \
     void menu_edit_ ## _name () { _menu_edit_ ## _name(); } \
     void menu_edit_callback_ ## _name () { if (_menu_edit_ ## _name ()) (*callbackFunc)(); } \
-    static void _menu_action_setting_edit_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue) { \
+    void _menu_action_setting_edit_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue) { \
       lcd_save_previous_menu(); \
       \
       lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; \
@@ -2335,11 +2335,11 @@ void kill_screen(const char* lcd_msg) {
       maxEditValue = maxValue * scale - minEditValue; \
       encoderPosition = (*ptr) * scale - minEditValue; \
     } \
-    static void menu_action_setting_edit_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue) { \
+    void menu_action_setting_edit_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue) { \
       _menu_action_setting_edit_ ## _name(pstr, ptr, minValue, maxValue); \
       currentScreen = menu_edit_ ## _name; \
     }\
-    static void menu_action_setting_edit_callback_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue, screenFunc_t callback) { \
+    void menu_action_setting_edit_callback_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue, screenFunc_t callback) { \
       _menu_action_setting_edit_ ## _name(pstr, ptr, minValue, maxValue); \
       currentScreen = menu_edit_callback_ ## _name; \
       callbackFunc = callback; \
@@ -2361,7 +2361,7 @@ void kill_screen(const char* lcd_msg) {
    *
    */
   #if ENABLED(REPRAPWORLD_KEYPAD)
-    static void _reprapworld_keypad_move(AxisEnum axis, int dir) {
+    void _reprapworld_keypad_move(AxisEnum axis, int dir) {
       move_menu_scale = REPRAPWORLD_KEYPAD_MOVE_STEP;
       encoderPosition = dir;
       switch (axis) {
@@ -2371,14 +2371,14 @@ void kill_screen(const char* lcd_msg) {
         default: break;
       }
     }
-    static void reprapworld_keypad_move_z_up()    { _reprapworld_keypad_move(Z_AXIS,  1); }
-    static void reprapworld_keypad_move_z_down()  { _reprapworld_keypad_move(Z_AXIS, -1); }
-    static void reprapworld_keypad_move_x_left()  { _reprapworld_keypad_move(X_AXIS, -1); }
-    static void reprapworld_keypad_move_x_right() { _reprapworld_keypad_move(X_AXIS,  1); }
-    static void reprapworld_keypad_move_y_up()    { _reprapworld_keypad_move(Y_AXIS, -1); }
-    static void reprapworld_keypad_move_y_down()  { _reprapworld_keypad_move(Y_AXIS,  1); }
-    static void reprapworld_keypad_move_home()    { enqueue_and_echo_commands_P(PSTR("G28")); } // move all axes home and wait
-    static void reprapworld_keypad_move_menu()    { lcd_goto_screen(lcd_move_menu); }
+    void reprapworld_keypad_move_z_up()    { _reprapworld_keypad_move(Z_AXIS,  1); }
+    void reprapworld_keypad_move_z_down()  { _reprapworld_keypad_move(Z_AXIS, -1); }
+    void reprapworld_keypad_move_x_left()  { _reprapworld_keypad_move(X_AXIS, -1); }
+    void reprapworld_keypad_move_x_right() { _reprapworld_keypad_move(X_AXIS,  1); }
+    void reprapworld_keypad_move_y_up()    { _reprapworld_keypad_move(Y_AXIS, -1); }
+    void reprapworld_keypad_move_y_down()  { _reprapworld_keypad_move(Y_AXIS,  1); }
+    void reprapworld_keypad_move_home()    { enqueue_and_echo_commands_P(PSTR("G28")); } // move all axes home and wait
+    void reprapworld_keypad_move_menu()    { lcd_goto_screen(lcd_move_menu); }
   #endif // REPRAPWORLD_KEYPAD
 
   /**
@@ -2415,20 +2415,20 @@ void kill_screen(const char* lcd_msg) {
    * Menu actions
    *
    */
-  static void _menu_action_back() { lcd_goto_previous_menu(); }
-  static void menu_action_submenu(screenFunc_t func) { lcd_save_previous_menu(); lcd_goto_screen(func); }
-  static void menu_action_gcode(const char* pgcode) { enqueue_and_echo_commands_P(pgcode); }
-  static void menu_action_function(screenFunc_t func) { (*func)(); }
+  void _menu_action_back() { lcd_goto_previous_menu(); }
+  void menu_action_submenu(screenFunc_t func) { lcd_save_previous_menu(); lcd_goto_screen(func); }
+  void menu_action_gcode(const char* pgcode) { enqueue_and_echo_commands_P(pgcode); }
+  void menu_action_function(screenFunc_t func) { (*func)(); }
 
   #if ENABLED(SDSUPPORT)
 
-    static void menu_action_sdfile(const char* filename, char* longFilename) {
+    void menu_action_sdfile(const char* filename, char* longFilename) {
       UNUSED(longFilename);
       card.openAndPrintFile(filename);
       lcd_return_to_status();
     }
 
-    static void menu_action_sddirectory(const char* filename, char* longFilename) {
+    void menu_action_sddirectory(const char* filename, char* longFilename) {
       UNUSED(longFilename);
       card.chdir(filename);
       encoderPosition = 0;
@@ -2436,8 +2436,8 @@ void kill_screen(const char* lcd_msg) {
 
   #endif //SDSUPPORT
 
-  static void menu_action_setting_edit_bool(const char* pstr, bool* ptr) {UNUSED(pstr); *ptr = !(*ptr); }
-  static void menu_action_setting_edit_callback_bool(const char* pstr, bool* ptr, screenFunc_t callback) {
+  void menu_action_setting_edit_bool(const char* pstr, bool* ptr) {UNUSED(pstr); *ptr = !(*ptr); }
+  void menu_action_setting_edit_callback_bool(const char* pstr, bool* ptr, screenFunc_t callback) {
     menu_action_setting_edit_bool(pstr, ptr);
     (*callback)();
   }

commit 2a9b3376a94198a20382a050edabd418db1407d6 (from b97dafe4b885a3d747c8908f87b925b875e1a2c7)
Merge: 2e966f8 b97dafe
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Wed Nov 23 23:04:05 2016 -0600

    Merge pull request #5289 from thinkyhead/rc_which_menu_actions
    
    Drop "static" keyword in ultralcd.cpp function declarations

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 16c8ffc..ef17e71 100755
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -530,6 +530,16 @@ static uint8_t target_extruder;
   ;
 #endif
 
+#if ENABLED(ULTIPANEL) && HAS_CASE_LIGHT
+  bool case_light_on =
+    #if ENABLED(CASE_LIGHT_DEFAULT_ON)
+      true
+    #else
+      false
+    #endif
+  ;
+#endif
+
 #if ENABLED(DELTA)
 
   #define SIN_60 0.8660254037844386
@@ -3512,7 +3522,7 @@ inline void gcode_G28() {
 
   inline void _mbl_goto_xy(float x, float y) {
     float old_feedrate_mm_s = feedrate_mm_s;
-    feedrate_mm_s = homing_feedrate_mm_s[X_AXIS];
+    feedrate_mm_s = homing_feedrate_mm_s[Z_AXIS];
 
     current_position[Z_AXIS] = MESH_HOME_SEARCH_Z
       #if Z_CLEARANCE_BETWEEN_PROBES > Z_HOMING_HEIGHT
@@ -3523,11 +3533,13 @@ inline void gcode_G28() {
     ;
     line_to_current_position();
 
+    feedrate_mm_s = MMM_TO_MMS(XY_PROBE_SPEED);
     current_position[X_AXIS] = LOGICAL_X_POSITION(x);
     current_position[Y_AXIS] = LOGICAL_Y_POSITION(y);
     line_to_current_position();
 
     #if Z_CLEARANCE_BETWEEN_PROBES > 0 || Z_HOMING_HEIGHT > 0
+      feedrate_mm_s = homing_feedrate_mm_s[Z_AXIS];
       current_position[Z_AXIS] = LOGICAL_Z_POSITION(MESH_HOME_SEARCH_Z);
       line_to_current_position();
     #endif
@@ -5824,7 +5836,7 @@ inline void gcode_M115() {
 
     // PROGRESS (M530 S L, M531 <file>, M532 X L)
     SERIAL_PROTOCOLPGM("Cap:");
-    SERIAL_PROTOCOLPGM("PROGRESS:0");
+    SERIAL_PROTOCOLLNPGM("PROGRESS:0");
 
     // AUTOLEVEL (G29)
     SERIAL_PROTOCOLPGM("Cap:");
@@ -7274,11 +7286,6 @@ inline void gcode_M907() {
    *   P<byte>  Set case light brightness (PWM pin required)
    */
   inline void gcode_M355() {
-    static bool case_light_on
-      #if ENABLED(CASE_LIGHT_DEFAULT_ON)
-        = true
-      #endif
-    ;
     static uint8_t case_light_brightness = 255;
     if (code_seen('P')) case_light_brightness = code_value_byte();
     if (code_seen('S')) {
diff --git a/Marlin/language.h b/Marlin/language.h
index 4254f44..ef89f89 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -276,7 +276,7 @@
 
 #include INCLUDE_LANGUAGE
 
-#if DISABLED(SIMULATE_ROMFONT) && DISABLED(DISPLAY_CHARSET_ISO10646_1) && DISABLED(DISPLAY_CHARSET_ISO10646_5) && DISABLED(DISPLAY_CHARSET_ISO10646_KANA) && DISABLED(DISPLAY_CHARSET_ISO10646_GREEK) && DISABLED(DISPLAY_CHARSET_ISO10646_CN)
+#if DISABLED(SIMULATE_ROMFONT) && DISABLED(DISPLAY_CHARSET_ISO10646_1) && DISABLED(DISPLAY_CHARSET_ISO10646_5) && DISABLED(DISPLAY_CHARSET_ISO10646_KANA) && DISABLED(DISPLAY_CHARSET_ISO10646_GREEK) && DISABLED(DISPLAY_CHARSET_ISO10646_CN) && DISABLED(DISPLAY_CHARSET_ISO10646_TR)
   #define DISPLAY_CHARSET_ISO10646_1 // use the better font on full graphic displays.
 #endif
 
diff --git a/Marlin/language_de.h b/Marlin/language_de.h
index 9c8aa69..c9239c2 100644
--- a/Marlin/language_de.h
+++ b/Marlin/language_de.h
@@ -184,6 +184,8 @@
 #define MSG_INFO_EXTRUDERS                  "Extruders"
 #define MSG_INFO_BAUDRATE                   "Baud"
 #define MSG_INFO_PROTOCOL                   "Protokol"
+#define MSG_LIGHTS_ON                       "Gehäuse Licht an"
+#define MSG_LIGHTS_OFF                      "Gehäuse Licht aus"
 
 #if LCD_WIDTH >= 20
   #define MSG_INFO_PRINT_COUNT              "Gesamte Drucke"
diff --git a/Marlin/language_en.h b/Marlin/language_en.h
index d0439f5..0529d98 100644
--- a/Marlin/language_en.h
+++ b/Marlin/language_en.h
@@ -487,6 +487,12 @@
 #ifndef MSG_INFO_PROTOCOL
   #define MSG_INFO_PROTOCOL                   "Protocol"
 #endif
+#ifndef MSG_LIGHTS_ON
+  #define MSG_LIGHTS_ON                       "Case light on"
+#endif
+#ifndef MSG_LIGHTS_OFF
+  #define MSG_LIGHTS_OFF                      "Case light off"
+#endif
 
 #if LCD_WIDTH >= 20
   #ifndef MSG_INFO_PRINT_COUNT
diff --git a/Marlin/language_tr.h b/Marlin/language_tr.h
index edef587..1bd3f32 100644
--- a/Marlin/language_tr.h
+++ b/Marlin/language_tr.h
@@ -21,7 +21,7 @@
  */
 
 /**
- * English
+ * Turkish
  *
  * LCD Menu Messages
  * See also https://github.com/MarlinFirmware/Marlin/wiki/LCD-Language
@@ -30,213 +30,214 @@
 #ifndef LANGUAGE_TR_H
 #define LANGUAGE_TR_H
 
+//#define SIMULATE_ROMFONT
 #define DISPLAY_CHARSET_ISO10646_TR
 
-#define WELCOME_MSG                         MACHINE_NAME " haz\xfdr."
-#define MSG_SD_INSERTED                     "SD Yerle\xfeti."
-#define MSG_SD_REMOVED                      "SD \xc7\xfdkar\xfdld\xfd."
-#define MSG_LCD_ENDSTOPS                    "Endstops" // Max length 8 characters
-#define MSG_MAIN                            "Ana"
-#define MSG_AUTOSTART                       "Otoba\xfelat"
-#define MSG_DISABLE_STEPPERS                "Motorlar\xfd Durdur"
-#define MSG_AUTO_HOME                       "Eksenleri S\xfd\x66\xfdrla"
-#define MSG_AUTO_HOME_X                     "X S\xfd\x66\xfdrla"
-#define MSG_AUTO_HOME_Y                     "Y S\xfd\x66\xfdrla"
-#define MSG_AUTO_HOME_Z                     "Z S\xfd\x66\xfdrla"
-#define MSG_LEVEL_BED_HOMING                "XYZ S\xfd\x66\xfdrlan\xfdyor"
-#define MSG_LEVEL_BED_WAITING               "Ba\xfelatmak i\xe7in t\xfdkla"
-#define MSG_LEVEL_BED_NEXT_POINT            "S\xfdradaki Nokta"
-#define MSG_LEVEL_BED_DONE                  "Seviyeleme Tamam!"
-#define MSG_LEVEL_BED_CANCEL                "\xddptal"
-#define MSG_SET_HOME_OFFSETS                "Offset Ayarla"
-#define MSG_HOME_OFFSETS_APPLIED            "Offset tamam"
-#define MSG_SET_ORIGIN                      "S\xfd\x66\xfdr Belirle"
-#define MSG_PREHEAT_1                       "\xd6n Is\xfdnma PLA"
-#define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 " "
-#define MSG_PREHEAT_1_ALL                   MSG_PREHEAT_1 " T\xfcm"
-#define MSG_PREHEAT_1_BEDONLY               MSG_PREHEAT_1 " Tabla"
-#define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 " Ayar"
-#define MSG_PREHEAT_2                       "\xd6n Is\xfdnma ABS"
-#define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 " "
-#define MSG_PREHEAT_2_ALL                   MSG_PREHEAT_2 " T\xfcm"
-#define MSG_PREHEAT_2_BEDONLY               MSG_PREHEAT_2 " Tabla"
-#define MSG_PREHEAT_2_SETTINGS              MSG_PREHEAT_2 " Ayar"
-#define MSG_COOLDOWN                        "So\xf0ut"
-#define MSG_SWITCH_PS_ON                    "G\xfcc\xfc A\xe7"
-#define MSG_SWITCH_PS_OFF                   "G\xfcc\xfc Kapat"
-#define MSG_EXTRUDE                         "Extrude"
-#define MSG_RETRACT                         "Geri \xc7ek"
-#define MSG_MOVE_AXIS                       "Eksen Y\xf6net"
-#define MSG_LEVEL_BED                       "Tabla Seviyele"
-#define MSG_MOVE_X                          "X"
-#define MSG_MOVE_Y                          "Y"
-#define MSG_MOVE_Z                          "Z"
-#define MSG_MOVE_E                          "Ekstruder"
-#define MSG_MOVE_01MM                       "0.1mm"
-#define MSG_MOVE_1MM                        "1mm"
-#define MSG_MOVE_10MM                       "10mm"
-#define MSG_SPEED                           "H\xfdz"
-#define MSG_BED_Z                           "Tabla Z"
-#define MSG_NOZZLE                          "Noz\xfcl"
-#define MSG_BED                             "Tabla"
-#define MSG_FAN_SPEED                       "Fan H\xfdz\xfd"
-#define MSG_FLOW                            "Ak\xfd\xfe"
-#define MSG_CONTROL                         "Kontrol"
-#define MSG_MIN                             " " LCD_STR_THERMOMETER " Min"
-#define MSG_MAX                             " " LCD_STR_THERMOMETER " Max"
-#define MSG_FACTOR                          " " LCD_STR_THERMOMETER " \xc7\x61rpan"
-#define MSG_AUTOTEMP                        "Autotemp"
-#define MSG_ON                              "On "
-#define MSG_OFF                             "Off"
-#define MSG_PID_P                           "PID-P"
-#define MSG_PID_I                           "PID-I"
-#define MSG_PID_D                           "PID-D"
-#define MSG_PID_C                           "PID-C"
-#define MSG_SELECT                          "Se\xe7"
-#define MSG_ACC                             "\xddvme"
-#define MSG_VX_JERK                         "Vx-Jerk"
-#define MSG_VY_JERK                         "Vy-Jerk"
-#define MSG_VZ_JERK                         "Vz-jerk"
-#define MSG_VE_JERK                         "Ve-jerk"
-#define MSG_VMAX                            "Vmax "
-#define MSG_VMIN                            "Vmin"
-#define MSG_VTRAV_MIN                       "VTrav min"
-#define MSG_AMAX                            "Amax "
-#define MSG_A_RETRACT                       "A-retract"
-#define MSG_A_TRAVEL                        "A-travel"
-#define MSG_XSTEPS                          "Xsteps/mm"
-#define MSG_YSTEPS                          "Ysteps/mm"
-#define MSG_ZSTEPS                          "Zsteps/mm"
-#define MSG_ESTEPS                          "Esteps/mm"
-#define MSG_TEMPERATURE                     "S\xfd\x63\x61kl\xfdk"
-#define MSG_MOTION                          "Hareket"
-#define MSG_VOLUMETRIC                      "Filaman"
-#define MSG_VOLUMETRIC_ENABLED              "E in mm3"
-#define MSG_FILAMENT_DIAM                   "Fil. \xc7\x61p"
-#define MSG_CONTRAST                        "LCD Kontrast"
-#define MSG_STORE_EPROM                     "Haf\xfdzaya Al"
-#define MSG_LOAD_EPROM                      "Haf\xfdzadan Y\xfckle"
-#define MSG_RESTORE_FAILSAFE                "Fabrika Ayarlar\xfd"
-#define MSG_REFRESH                         "Yenile"
-#define MSG_WATCH                           "Bilgi Ekran\xfd"
-#define MSG_PREPARE                         "Haz\xfdrl\xfdk"
-#define MSG_TUNE                            "Ayar"
-#define MSG_PAUSE_PRINT                     "Duraklat"
-#define MSG_RESUME_PRINT                    "S\xfcrd\xfcr"
-#define MSG_STOP_PRINT                      "Durdur"
-#define MSG_CARD_MENU                       "SD den Yazd\xfdr"
-#define MSG_NO_CARD                         "SD Kart Yok"
-#define MSG_DWELL                           "Uyku..."
-#define MSG_USERWAIT                        "Operat\xf6r bekleniyor..."
-#define MSG_RESUMING                        "Bask\xfd S\xfcrd\xfcr\xfcl\xfcyor"
-#define MSG_PRINT_ABORTED                   "Bask\xfd Duruduruldu"
-#define MSG_NO_MOVE                         "\xdd\xfelem yok."
-#define MSG_KILLED                          "Kilitlendi. " //maybe a better turkish term needed
-#define MSG_STOPPED                         "Durdu. "
-#define MSG_CONTROL_RETRACT                 "Geri \xc7ek mm"
-#define MSG_CONTROL_RETRACT_SWAP            "Swap Re.mm"
-#define MSG_CONTROL_RETRACTF                "Geri \xc7ekme  V"
-#define MSG_CONTROL_RETRACT_ZLIFT           "Hop mm"
-#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"
-#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "S UnRet+mm"
-#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"
-#define MSG_AUTORETRACT                     "AutoRetr."
-#define MSG_FILAMENTCHANGE                  "Filaman De\xf0i\xfetir"
-#define MSG_INIT_SDCARD                     "Init. SD"
-#define MSG_CNG_SDCARD                      "SD De\xf0i\xfetir"
-#define MSG_ZPROBE_OUT                      "Z Prob A\xe7\xfdk. Tabla"
-#define MSG_BLTOUCH_SELFTEST                "BLTouch Self-Test"
-#define MSG_BLTOUCH_RESET                   "S\xfd\x66\xfdrla BLTouch"
-#define MSG_HOME                            "S\xfd\x66\xfdrla"  // Used as MSG_HOME " " MSG_X MSG_Y MSG_Z " " MSG_FIRST
-#define MSG_FIRST                           "\xf6nce"
-#define MSG_ZPROBE_ZOFFSET                  "Z Offset"
-#define MSG_BABYSTEP_X                      "Miniad\xfdm X"
-#define MSG_BABYSTEP_Y                      "Miniad\xfdm Y"
-#define MSG_BABYSTEP_Z                      "Miniad\xfdm Z"
-#define MSG_ENDSTOP_ABORT                   "Endstop iptal"
-#define MSG_HEATING_FAILED_LCD              "Is\xfdnma ba\xfe\x61\x72\xfds\xfdz"
-#define MSG_ERR_REDUNDANT_TEMP              "Err: Ge\xe7ersiz S\xfd\x63akl\xfdk"
-#define MSG_THERMAL_RUNAWAY                 "TERMAL PROBLEM"
-#define MSG_ERR_MAXTEMP                     "Err: MAXSICAKLIK"
-#define MSG_ERR_MINTEMP                     "Err: MINSICAKLIK"
-#define MSG_ERR_MAXTEMP_BED                 "Err: MAXSIC. TABLA"
-#define MSG_ERR_MINTEMP_BED                 "Err: MINSIC. TABLA"
-#define MSG_ERR_Z_HOMING                    "G28 Z Yap\xfdlamaz"
-#define MSG_HALTED                          "YAZICI DURDURULDU"
-#define MSG_PLEASE_RESET                    "L\xfctfen resetleyin"
-#define MSG_SHORT_DAY                       "s" // One character only
-#define MSG_SHORT_HOUR                      "S" // One character only
-#define MSG_SHORT_MINUTE                    "d" // One character only
-#define MSG_HEATING                         "Is\xfdn\xfdyor..."
-#define MSG_HEATING_COMPLETE                "Is\xfdnma tamam."
-#define MSG_BED_HEATING                     "Tabla Is\xfdn\xfdyor."
-#define MSG_BED_DONE                        "Tabla haz\xfdr."
-#define MSG_DELTA_CALIBRATE                 "Delta Kalibrasyonu"
-#define MSG_DELTA_CALIBRATE_X               "Ayarla X"
-#define MSG_DELTA_CALIBRATE_Y               "Ayarla Y"
-#define MSG_DELTA_CALIBRATE_Z               "Ayarla Z"
-#define MSG_DELTA_CALIBRATE_CENTER          "Ayarla Merkez"
+#define WELCOME_MSG                         MACHINE_NAME " haz\xfdr."                                    //hazır.
+#define MSG_SD_INSERTED                     "SD Yerle\xfeti."                                            //SD Yerleşti.
+#define MSG_SD_REMOVED                      "SD \xc7\xfdkar\xfdld\xfd."                                  //SD Çıkarıldı.
+#define MSG_LCD_ENDSTOPS                    "Endstops" // Max length 8 characters                        //Endstops
+#define MSG_MAIN                            "Ana"                                                        //Ana
+#define MSG_AUTOSTART                       "Otoba\xfelat"                                               //Otobaşlat
+#define MSG_DISABLE_STEPPERS                "Motorlar\xfd Durdur"                                        //Motorları Durdur
+#define MSG_AUTO_HOME                       "Eksenleri S\xfd\x66\xfdrla"                                 //Eksenleri Sıfırla
+#define MSG_AUTO_HOME_X                     "X S\xfd\x66\xfdrla"                                         //X Sıfırla
+#define MSG_AUTO_HOME_Y                     "Y S\xfd\x66\xfdrla"                                         //Y Sıfırla
+#define MSG_AUTO_HOME_Z                     "Z S\xfd\x66\xfdrla"                                         //Z Sıfırla
+#define MSG_LEVEL_BED_HOMING                "XYZ S\xfd\x66\xfdrlan\xfdyor"                               //XYZ Sıfırlanıyor
+#define MSG_LEVEL_BED_WAITING               "Ba\xfelatmak i\xe7in t\xfdkla"                              //Başlatmak için tıkla
+#define MSG_LEVEL_BED_NEXT_POINT            "S\xfdradaki Nokta"                                          //Sıradaki Nokta
+#define MSG_LEVEL_BED_DONE                  "Seviyeleme Tamam!"                                          //Seviyeleme Tamam!
+#define MSG_LEVEL_BED_CANCEL                "\xddptal"                                                   //İptal
+#define MSG_SET_HOME_OFFSETS                "Offset Ayarla"                                              //Offset Ayarla
+#define MSG_HOME_OFFSETS_APPLIED            "Offset Tamam"                                               //Offset Tamam
+#define MSG_SET_ORIGIN                      "S\xfd\x66\xfdr Belirle"                                     //Sıfır Belirle
+#define MSG_PREHEAT_1                       "\xd6n Is\xfdnma PLA"                                        //Ön Isınma PLA
+#define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 " "                                            // 
+#define MSG_PREHEAT_1_ALL                   MSG_PREHEAT_1 " T\xfcm"                                      // Tüm
+#define MSG_PREHEAT_1_BEDONLY               MSG_PREHEAT_1 " Tabla"                                       // Tabla
+#define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 " Ayar"                                        // Ayar
+#define MSG_PREHEAT_2                       "\xd6n Is\xfdnma ABS"                                        //Ön Isınma ABS
+#define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 " "                                            // 
+#define MSG_PREHEAT_2_ALL                   MSG_PREHEAT_2 " T\xfcm"                                      // Tüm
+#define MSG_PREHEAT_2_BEDONLY               MSG_PREHEAT_2 " Tabla"                                       // Tabla
+#define MSG_PREHEAT_2_SETTINGS              MSG_PREHEAT_2 " Ayar"                                        // Ayar
+#define MSG_COOLDOWN                        "So\xf0ut"                                                   //Soğut
+#define MSG_SWITCH_PS_ON                    "G\xfcc\xfc A\xe7"                                           //Gücü Aç
+#define MSG_SWITCH_PS_OFF                   "G\xfcc\xfc Kapat"                                           //Gücü Kapat
+#define MSG_EXTRUDE                         "Extrude"                                                    //Extrude
+#define MSG_RETRACT                         "Geri \xc7ek"                                                //Geri Çek
+#define MSG_MOVE_AXIS                       "Eksen Y\xf6net"                                             //Eksenleri Yönet
+#define MSG_LEVEL_BED                       "Tabla Seviyele"                                             //Tabla Seviyele
+#define MSG_MOVE_X                          "X"                                                          //X
+#define MSG_MOVE_Y                          "Y"                                                          //Y
+#define MSG_MOVE_Z                          "Z"                                                          //Z
+#define MSG_MOVE_E                          "Ekstruder"                                                  //Ekstruder
+#define MSG_MOVE_01MM                       "0.1mm"                                                      //0.1mm
+#define MSG_MOVE_1MM                        "1mm"                                                        //1mm
+#define MSG_MOVE_10MM                       "10mm"                                                       //10mm
+#define MSG_SPEED                           "H\xfdz"                                                     //Hız
+#define MSG_BED_Z                           "Tabla Z"                                                    //Tabla Z
+#define MSG_NOZZLE                          "Noz\xfcl"                                                   //Nozül
+#define MSG_BED                             "Tabla"                                                      //Tabla
+#define MSG_FAN_SPEED                       "Fan H\xfdz\xfd"                                             //Fan Hızı
+#define MSG_FLOW                            "Ak\xfd\xfe"                                                 //Akış
+#define MSG_CONTROL                         "Kontrol"                                                    //Kontrol
+#define MSG_MIN                             " " LCD_STR_THERMOMETER " Min"                               // Min
+#define MSG_MAX                             " " LCD_STR_THERMOMETER " Max"                               // Max
+#define MSG_FACTOR                          " " LCD_STR_THERMOMETER " \xc7\x61rpan"                      // Çarpan
+#define MSG_AUTOTEMP                        "Autotemp"                                                   // Autotemp
+#define MSG_ON                              "On "                                                        //On 
+#define MSG_OFF                             "Off"                                                        //Off
+#define MSG_PID_P                           "PID-P"                                                      //PID-P
+#define MSG_PID_I                           "PID-I"                                                      //PID-I
+#define MSG_PID_D                           "PID-D"                                                      //PID-D
+#define MSG_PID_C                           "PID-C"                                                      //PID-C
+#define MSG_SELECT                          "Se\xe7"                                                     //Seç
+#define MSG_ACC                             "\xddvme"                                                    //İvme
+#define MSG_VX_JERK                         "Vx-Jerk"                                                    //Vx-Jerk
+#define MSG_VY_JERK                         "Vy-Jerk"                                                    //Vy-Jerk
+#define MSG_VZ_JERK                         "Vz-jerk"                                                    //Vz-Jerk
+#define MSG_VE_JERK                         "Ve-jerk"                                                    //Ve-Jerk
+#define MSG_VMAX                            "Vmax "                                                      //Vmax
+#define MSG_VMIN                            "Vmin"                                                       //Vmin
+#define MSG_VTRAV_MIN                       "VTrav min"                                                  //Vtrav min
+#define MSG_AMAX                            "Amax "                                                      //Amax
+#define MSG_A_RETRACT                       "A-retract"                                                  //A-retract
+#define MSG_A_TRAVEL                        "A-travel"                                                   //A-travel
+#define MSG_XSTEPS                          "Xsteps/mm"                                                  //Xsteps/mm
+#define MSG_YSTEPS                          "Ysteps/mm"                                                  //Ysteps/mm
+#define MSG_ZSTEPS                          "Zsteps/mm"                                                  //Zsteps/mm
+#define MSG_ESTEPS                          "Esteps/mm"                                                  //Esteps/mm
+#define MSG_TEMPERATURE                     "S\xfd\x63\x61kl\xfdk"                                       //Sıcaklık
+#define MSG_MOTION                          "Hareket"                                                    //Hareket
+#define MSG_VOLUMETRIC                      "Filaman"                                                    //Filaman
+#define MSG_VOLUMETRIC_ENABLED              "E in mm3"                                                   //E in mm3
+#define MSG_FILAMENT_DIAM                   "Fil. \xc7\x61p"                                             //Fil. Çap
+#define MSG_CONTRAST                        "LCD Kontrast"                                               //LCD Kontrast
+#define MSG_STORE_EPROM                     "Haf\xfdzaya Al"                                             //Hafızaya Al
+#define MSG_LOAD_EPROM                      "Haf\xfdzadan Y\xfckle"                                      //Hafızadan Yükle
+#define MSG_RESTORE_FAILSAFE                "Fabrika Ayarlar\xfd"                                        //Fabrika Ayarları
+#define MSG_REFRESH                         "Yenile"                                                     //Yenile
+#define MSG_WATCH                           "Bilgi Ekran\xfd"                                            //Bilgi Ekranı
+#define MSG_PREPARE                         "Haz\xfdrl\xfdk"                                             //Hazırlık
+#define MSG_TUNE                            "Ayar"                                                       //Ayar
+#define MSG_PAUSE_PRINT                     "Duraklat"                                                   //Duraklat
+#define MSG_RESUME_PRINT                    "S\xfcrd\xfcr"                                               //Sürdür
+#define MSG_STOP_PRINT                      "Durdur"                                                     //Durdur
+#define MSG_CARD_MENU                       "SD den Yazd\xfdr"                                           //SD den Yazdır
+#define MSG_NO_CARD                         "SD Kart Yok"                                                //SD Kart Yok
+#define MSG_DWELL                           "Uyku..."                                                    //Uyku...
+#define MSG_USERWAIT                        "Operat\xf6r bekleniyor..."                                  //Operatör bekleniyor...
+#define MSG_RESUMING                        "Bask\xfd S\xfcrd\xfcr\xfcl\xfcyor"                          //Baskı Sürdürülüyor
+#define MSG_PRINT_ABORTED                   "Bask\xfd Durduruldu"                                        //Baskı Durduruldu
+#define MSG_NO_MOVE                         "\xdd\xfelem yok."                                           //İşlem yok.
+#define MSG_KILLED                          "Kilitlendi. "                                               //Kilitlendi.
+#define MSG_STOPPED                         "Durdu. "                                                    //Durdu.
+#define MSG_CONTROL_RETRACT                 "Geri \xc7ek mm"                                             //Geri Çek mm
+#define MSG_CONTROL_RETRACT_SWAP            "Swap Re.mm"                                                 //Swap Re.mm
+#define MSG_CONTROL_RETRACTF                "Geri \xc7ekme  V"                                           //Geri Çekme V
+#define MSG_CONTROL_RETRACT_ZLIFT           "Hop mm"                                                     //Hop mm
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"                                                  //UnRet +mm
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "S UnRet+mm"                                                 //S UnRet+mm
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"                                                   //UnRet V
+#define MSG_AUTORETRACT                     "AutoRetr."                                                  //AutoRetr.
+#define MSG_FILAMENTCHANGE                  "Filaman De\xf0i\xfetir"                                     //Filaman Değiştir
+#define MSG_INIT_SDCARD                     "Init. SD"                                                   //Init. SD
+#define MSG_CNG_SDCARD                      "SD De\xf0i\xfetir"                                          //SD Değiştir
+#define MSG_ZPROBE_OUT                      "Z Prob A\xe7\xfdk. Tabla"                                   //Z Prob Açık. Tabla
+#define MSG_BLTOUCH_SELFTEST                "BLTouch Self-Test"                                          //BLTouch Self-Test
+#define MSG_BLTOUCH_RESET                   "S\xfd\x66\xfdrla BLTouch"                                   //Sıfırla BLTouch
+#define MSG_HOME                            "S\xfd\x66\xfdrla"                                           //Sıfırla
+#define MSG_FIRST                           "\xf6nce"                                                    //Önce
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"                                                   //Z Offset
+#define MSG_BABYSTEP_X                      "Miniad\xfdm X"                                              //Miniadım X
+#define MSG_BABYSTEP_Y                      "Miniad\xfdm Y"                                              //Miniadım Y
+#define MSG_BABYSTEP_Z                      "Miniad\xfdm Z"                                              //Miniadım Z
+#define MSG_ENDSTOP_ABORT                   "Endstop iptal"                                              //Endstop iptal
+#define MSG_HEATING_FAILED_LCD              "Is\xfdnma ba\xfe\x61\x72\xfds\xfdz"                         //Isınma başarısız
+#define MSG_ERR_REDUNDANT_TEMP              "Hata: Ge\xe7ersiz S\xfd\x63akl\xfdk"                        //Hata: Geçersiz Sıcaklık
+#define MSG_THERMAL_RUNAWAY                 "TERMAL PROBLEM"                                             //TERMAL PROBLEM
+#define MSG_ERR_MAXTEMP                     "Hata: MAXSICAKLIK"                                          //Hata: MAXSICAKLIK
+#define MSG_ERR_MINTEMP                     "Hata: MINSICAKLIK"                                          //Hata: MINSICAKLIK
+#define MSG_ERR_MAXTEMP_BED                 "Hata: MAXSIC. TABLA"                                        //Hata: MAXSIC. TABLA
+#define MSG_ERR_MINTEMP_BED                 "Hata: MINSIC. TABLA"                                        //Hata: MINSIC. TABLA
+#define MSG_ERR_Z_HOMING                    "G28 Z Yap\xfdlamaz"                                         //G28 Z Yapılamaz
+#define MSG_HALTED                          "YAZICI DURDURULDU"                                          //YAZICI DURDURULDU
+#define MSG_PLEASE_RESET                    "L\xfctfen resetleyin"                                       //Lütfen resetleyin
+#define MSG_SHORT_DAY                       "G" // One character only                                    //G
+#define MSG_SHORT_HOUR                      "S" // One character only                                    //S
+#define MSG_SHORT_MINUTE                    "D" // One character only                                    //D
+#define MSG_HEATING                         "Is\xfdn\xfdyor..."                                          //Isınıyor...
+#define MSG_HEATING_COMPLETE                "Is\xfdnma tamam."                                           //Isınma tamam.
+#define MSG_BED_HEATING                     "Tabla Is\xfdn\xfdyor."                                      //Tabla Isınıyor.
+#define MSG_BED_DONE                        "Tabla haz\xfdr."                                            //Tabla hazır.
+#define MSG_DELTA_CALIBRATE                 "Delta Kalibrasyonu"                                         //Delta Kalibrasyonu
+#define MSG_DELTA_CALIBRATE_X               "Ayarla X"                                                   //Ayarla X
+#define MSG_DELTA_CALIBRATE_Y               "Ayarla Y"                                                   //Ayarla Y
+#define MSG_DELTA_CALIBRATE_Z               "Ayarla Z"                                                   //Ayarla Z
+#define MSG_DELTA_CALIBRATE_CENTER          "Ayarla Merkez"                                              //Ayarla Merkez
 
-#define MSG_INFO_MENU                       "Yaz\xfd\x63\xfd Hakk\xfdnda"
-#define MSG_INFO_PRINTER_MENU               "Yaz\xfd\x63\xfd Bilgisi"
-#define MSG_INFO_STATS_MENU                 "\xddstatistikler"
-#define MSG_INFO_BOARD_MENU                 "Kontrol\xf6r Bilgisi"
-#define MSG_INFO_THERMISTOR_MENU            "Termist\xf6rler"
-#define MSG_INFO_EXTRUDERS                  "Ekstruderler"
-#define MSG_INFO_BAUDRATE                   "\xddleti\xfeim H\xfdz\xfd"
-#define MSG_INFO_PROTOCOL                   "Protokol"
+#define MSG_INFO_MENU                       "Yaz\xfd\x63\xfd Hakk\xfdnda"                                //Yazıcı Hakkında
+#define MSG_INFO_PRINTER_MENU               "Yaz\xfd\x63\xfd Bilgisi"                                    //Yazıcı Bilgisi
+#define MSG_INFO_STATS_MENU                 "\xddstatistikler"                                           //İstatistikler
+#define MSG_INFO_BOARD_MENU                 "Kontrol\xf6r Bilgisi"                                       //Kontrol Bilgisi
+#define MSG_INFO_THERMISTOR_MENU            "Termist\xf6rler"                                            //Termistörler
+#define MSG_INFO_EXTRUDERS                  "Ekstruderler"                                               //Ekstruderler
+#define MSG_INFO_BAUDRATE                   "\xddleti\xfeim H\xfdz\xfd"                                  //İletişim Hızı
+#define MSG_INFO_PROTOCOL                   "Protokol"                                                   //Protokol
 
-#if LCD_WIDTH >= 20
-  #define MSG_INFO_PRINT_COUNT              "Bask\xfd Say\xfds\xfd"
-  #define MSG_INFO_COMPLETED_PRINTS         "Tamamlanan"
-  #define MSG_INFO_PRINT_TIME               "Toplam Bask\xfd S\xfcresi"
-  #define MSG_INFO_PRINT_LONGEST            "En Uzun Bask\xfd S\xfcresi"
-  #define MSG_INFO_PRINT_FILAMENT           "Toplam Filaman"
+#if LCD_WIDTH > 19
+  #define MSG_INFO_PRINT_COUNT              "Bask\xfd Say\xfds\xfd"                                      //Baskı Sayısı
+  #define MSG_INFO_COMPLETED_PRINTS         "Tamamlanan"                                                 //Tamamlanan
+  #define MSG_INFO_PRINT_TIME               "Toplam Bask\xfd S\xfcresi"                                  //Toplam Baskı Süresi
+  #define MSG_INFO_PRINT_LONGEST            "En Uzun Bask\xfd S\xfcresi"                                 //En Uzun Baskı Süresi
+  #define MSG_INFO_PRINT_FILAMENT           "Toplam Filaman"                                             //Toplam Filaman
 #else
-  #define MSG_INFO_PRINT_COUNT              "Bask\xfd"
-  #define MSG_INFO_COMPLETED_PRINTS         "Tamamlanan"
-  #define MSG_INFO_PRINT_TIME               "S\xfcre"
-  #define MSG_INFO_PRINT_LONGEST            "En Uzun"
-  #define MSG_INFO_PRINT_FILAMENT           "Filaman"
+  #define MSG_INFO_PRINT_COUNT              "Bask\xfd"                                                   //Baskı
+  #define MSG_INFO_COMPLETED_PRINTS         "Tamamlanan"                                                 //Tamamlanan
+  #define MSG_INFO_PRINT_TIME               "S\xfcre"                                                    //Süre
+  #define MSG_INFO_PRINT_LONGEST            "En Uzun"                                                    //En Uzun
+  #define MSG_INFO_PRINT_FILAMENT           "Filaman"                                                    //Filaman
 #endif
 
-#define MSG_INFO_MIN_TEMP                   "Min S\xfd\x63."
-#define MSG_INFO_MAX_TEMP                   "Max S\xfd\x63."
-#define MSG_INFO_PSU                        "G\xfc\xe7 Kayna\xf0\xfd"
+#define MSG_INFO_MIN_TEMP                   "Min S\xfd\x63."                                             //Min Sıcak.
+#define MSG_INFO_MAX_TEMP                   "Max S\xfd\x63."                                             //Max Sıcak.
+#define MSG_INFO_PSU                        "G\xfc\xe7 Kayna\xf0\xfd"                                    //Güç Kaynağı
 
-#define MSG_DRIVE_STRENGTH                  "\x53\xfc\x72\xfc\x63\xfc \x47\xfc\x63\xfc"
-#define MSG_DAC_PERCENT                     "\x53\xfc\x72\xfc\x63\xfc %"
-#define MSG_DAC_EEPROM_WRITE                "DAC\x27\xfd EEPROM\x27\x61 Yaz"
-#define MSG_FILAMENT_CHANGE_HEADER          "Filaman De\xf0i\xfetir"
-#define MSG_FILAMENT_CHANGE_OPTION_HEADER   "Se\xe7enekler:"
-#define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  "Extrude more"
-#define MSG_FILAMENT_CHANGE_OPTION_RESUME   "Bask\xfdy\xfd s\xfcrd\xfcr"
+#define MSG_DRIVE_STRENGTH                  "\x53\xfc\x72\xfc\x63\xfc \x47\xfc\x63\xfc"                  //Sürücü Gücü
+#define MSG_DAC_PERCENT                     "\x53\xfc\x72\xfc\x63\xfc %"                                 //Sürücü %
+#define MSG_DAC_EEPROM_WRITE                "DAC\x27\xfd EEPROM\x27\x61 Yaz"                             //DAC'ı EEPROM'a Yaz
+#define MSG_FILAMENT_CHANGE_HEADER          "Filaman De\xf0i\xfetir"                                     //Filaman Değiştir
+#define MSG_FILAMENT_CHANGE_OPTION_HEADER   "Se\xe7enekler:"                                             //Seçenekler:
+#define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  "Daha Ak\xfdt"                                               //Daha Akıt
+#define MSG_FILAMENT_CHANGE_OPTION_RESUME   "Bask\xfdy\xfd s\xfcrd\xfcr"                                 //Baskıyı sürdür
 #if LCD_HEIGHT >= 4
-  #define MSG_FILAMENT_CHANGE_INIT_1          "Ba\xfelama bekleniyor"
-  #define MSG_FILAMENT_CHANGE_INIT_2          "filaman\xfdn"
-  #define MSG_FILAMENT_CHANGE_INIT_3          "de\xf0i\xfeimi"
-  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Bekleniyor"
-  #define MSG_FILAMENT_CHANGE_UNLOAD_2        "filaman\xfdn \xe7\xfdkmas\xfd"
-  #define MSG_FILAMENT_CHANGE_UNLOAD_3        ""
-  #define MSG_FILAMENT_CHANGE_INSERT_1        "Filaman\xfd y\xfckle"
-  #define MSG_FILAMENT_CHANGE_INSERT_2        "ve devam i\xe7in"
-  #define MSG_FILAMENT_CHANGE_INSERT_3        "tu\xfea bas..."
-  #define MSG_FILAMENT_CHANGE_LOAD_1          "Bekleniyor"
-  #define MSG_FILAMENT_CHANGE_LOAD_2          "filaman\xfdn y\xfcklenmesi"
-  #define MSG_FILAMENT_CHANGE_LOAD_3          ""
-  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Bekleniyor"
-  #define MSG_FILAMENT_CHANGE_EXTRUDE_2       "filaman akmas\xfd"
-  #define MSG_FILAMENT_CHANGE_EXTRUDE_3       ""
-  #define MSG_FILAMENT_CHANGE_RESUME_1        "Bask\xfdn\xfdn s\xfcrd\xfcr\xfclmesini"
-  #define MSG_FILAMENT_CHANGE_RESUME_2        "bekle"
-  #define MSG_FILAMENT_CHANGE_RESUME_3        ""
+  #define MSG_FILAMENT_CHANGE_INIT_1          "Ba\xfelama bekleniyor"                                    //Başlama bekleniyor
+  #define MSG_FILAMENT_CHANGE_INIT_2          "filaman\xfdn"                                             //filamanın
+  #define MSG_FILAMENT_CHANGE_INIT_3          "de\xf0i\xfeimi"                                           //değişimi
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Bekleniyor"                                               //Bekleniyor
+  #define MSG_FILAMENT_CHANGE_UNLOAD_2        "filaman\xfdn \xe7\xfdkmas\xfd"                            //filamanın çıkması
+  #define MSG_FILAMENT_CHANGE_UNLOAD_3        ""                                                         //
+  #define MSG_FILAMENT_CHANGE_INSERT_1        "Filaman\xfd y\xfckle"                                     //Filamanı yükle
+  #define MSG_FILAMENT_CHANGE_INSERT_2        "ve devam i\xe7in"                                         //ve devam için
+  #define MSG_FILAMENT_CHANGE_INSERT_3        "tu\xfea bas..."                                           //tuşa bas...
+  #define MSG_FILAMENT_CHANGE_LOAD_1          "Bekleniyor"                                               //Bekleniyor
+  #define MSG_FILAMENT_CHANGE_LOAD_2          "filaman\xfdn y\xfcklenmesi"                               //filamanın yüklenmesi
+  #define MSG_FILAMENT_CHANGE_LOAD_3          ""                                                         //
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Bekleniyor"                                               //Bekleniyor
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_2       "filaman akmas\xfd"                                        //filaman akması
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_3       ""                                                         //
+  #define MSG_FILAMENT_CHANGE_RESUME_1        "Bask\xfdn\xfdn s\xfcrd\xfcr\xfclmesini"                   //Baskının sürdürülmesini
+  #define MSG_FILAMENT_CHANGE_RESUME_2        "bekle"                                                    //bekle
+  #define MSG_FILAMENT_CHANGE_RESUME_3        ""                                                         //
 #else // LCD_HEIGHT < 4
-  #define MSG_FILAMENT_CHANGE_INIT_1          "L\xfctfen bekleyiniz..."
-  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "\xc7\xfdkart\xfdl\xfdyor..."
-  #define MSG_FILAMENT_CHANGE_INSERT_1        "Y\xfckle ve bas"
-  #define MSG_FILAMENT_CHANGE_LOAD_1          "Y\xfckl\xfcyor..."
-  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Ak\xfdt\xfdl\xfdyor..."
-  #define MSG_FILAMENT_CHANGE_RESUME_1        "S\xfcrd\xfcr\xfcl\xfcyor..."
+  #define MSG_FILAMENT_CHANGE_INIT_1          "L\xfctfen bekleyiniz..."                                  //Lütfen bekleyiniz...
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "\xc7\xfdkart\xfdl\xfdyor..."                              //Çıkartılıyor...
+  #define MSG_FILAMENT_CHANGE_INSERT_1        "Y\xfckle ve bas"                                          //Yükle ve bas
+  #define MSG_FILAMENT_CHANGE_LOAD_1          "Y\xfckl\xfcyor..."                                        //Yüklüyor...
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Ak\xfdt\xfdl\xfdyor..."                                   //Akıtılıyor...
+  #define MSG_FILAMENT_CHANGE_RESUME_1        "S\xfcrd\xfcr\xfcl\xfcyor..."                              //Sürdürülüyor...
 #endif // LCD_HEIGHT < 4
 
 #endif // LANGUAGE_TR_H
diff --git a/Marlin/language_tr_utf8.h b/Marlin/language_tr_utf8.h
new file mode 100644
index 0000000..922d54c
--- /dev/null
+++ b/Marlin/language_tr_utf8.h
@@ -0,0 +1,243 @@
+/**
+ * Marlin 3D Printer Firmware
+ * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
+ *
+ * Based on Sprinter and grbl.
+ * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/**
+ * Turkish
+ *
+ * LCD Menu Messages
+ * See also https://github.com/MarlinFirmware/Marlin/wiki/LCD-Language
+ *
+ */
+#ifndef LANGUAGE_TR_UTF_H
+#define LANGUAGE_TR_UTF_H
+
+//#define SIMULATE_ROMFONT
+#define DISPLAY_CHARSET_ISO10646_TR
+
+#define WELCOME_MSG                         MACHINE_NAME " hazır."                                       //hazır.
+#define MSG_SD_INSERTED                     "SD Yerleşti."                                               //SD Yerleşti.
+#define MSG_SD_REMOVED                      "SD Çıkarıldı."                                              //SD Çıkarıldı.
+#define MSG_LCD_ENDSTOPS                    "Endstops" // Max length 8 characters                        //Endstops
+#define MSG_MAIN                            "Ana"                                                        //Ana
+#define MSG_AUTOSTART                       "Otobaşlat"                                                  //Otobaşlat
+#define MSG_DISABLE_STEPPERS                "Motorları Durdur"                                           //Motorları Durdur
+#define MSG_AUTO_HOME                       "Eksenleri Sıfırla"                                          //Eksenleri Sıfırla
+#define MSG_AUTO_HOME_X                     "X Sıfırla"                                                  //X Sıfırla
+#define MSG_AUTO_HOME_Y                     "Y Sıfırla"                                                  //Y Sıfırla
+#define MSG_AUTO_HOME_Z                     "Z Sıfırla"                                                  //Z Sıfırla
+#define MSG_LEVEL_BED_HOMING                "XYZ Sıfırlanıyor"                                           //XYZ Sıfırlanıyor
+#define MSG_LEVEL_BED_WAITING               "Başlatmak için tıkla"                                       //Başlatmak için tıkla
+#define MSG_LEVEL_BED_NEXT_POINT            "Sıradaki Nokta"                                             //Sıradaki Nokta
+#define MSG_LEVEL_BED_DONE                  "Seviyeleme Tamam!"                                          //Seviyeleme Tamam!
+#define MSG_LEVEL_BED_CANCEL                "İptal"                                                      //İptal
+#define MSG_SET_HOME_OFFSETS                "Offset Ayarla"                                              //Offset Ayarla
+#define MSG_HOME_OFFSETS_APPLIED            "Offset Tamam"                                               //Offset Tamam
+#define MSG_SET_ORIGIN                      "Sıfır Belirle"                                              //Sıfır Belirle
+#define MSG_PREHEAT_1                       "Ön Isınma PLA"                                              //Ön Isınma PLA
+#define MSG_PREHEAT_1_N                     MSG_PREHEAT_1 " "                                            // 
+#define MSG_PREHEAT_1_ALL                   MSG_PREHEAT_1 " Tüm"                                         // Tüm
+#define MSG_PREHEAT_1_BEDONLY               MSG_PREHEAT_1 " Tabla"                                       // Tabla
+#define MSG_PREHEAT_1_SETTINGS              MSG_PREHEAT_1 " Ayar"                                        // Ayar
+#define MSG_PREHEAT_2                       "Ön Isınma ABS"                                              //Ön Isınma ABS
+#define MSG_PREHEAT_2_N                     MSG_PREHEAT_2 " "                                            // 
+#define MSG_PREHEAT_2_ALL                   MSG_PREHEAT_2 " Tüm"                                         // Tüm
+#define MSG_PREHEAT_2_BEDONLY               MSG_PREHEAT_2 " Tabla"                                       // Tabla
+#define MSG_PREHEAT_2_SETTINGS              MSG_PREHEAT_2 " Ayar"                                        // Ayar
+#define MSG_COOLDOWN                        "Soğut"                                                      //Soğut
+#define MSG_SWITCH_PS_ON                    "Gücü Aç"                                                    //Gücü Aç
+#define MSG_SWITCH_PS_OFF                   "Gücü Kapat"                                                 //Gücü Kapat
+#define MSG_EXTRUDE                         "Extrude"                                                    //Extrude
+#define MSG_RETRACT                         "Geri Çek"                                                   //Geri Çek
+#define MSG_MOVE_AXIS                       "Eksen Yönet"                                                //Eksenleri Yönet
+#define MSG_LEVEL_BED                       "Tabla Seviyele"                                             //Tabla Seviyele
+#define MSG_MOVE_X                          "X"                                                          //X
+#define MSG_MOVE_Y                          "Y"                                                          //Y
+#define MSG_MOVE_Z                          "Z"                                                          //Z
+#define MSG_MOVE_E                          "Ekstruder"                                                  //Ekstruder
+#define MSG_MOVE_01MM                       "0.1mm"                                                      //0.1mm
+#define MSG_MOVE_1MM                        "1mm"                                                        //1mm
+#define MSG_MOVE_10MM                       "10mm"                                                       //10mm
+#define MSG_SPEED                           "Hız"                                                        //Hız
+#define MSG_BED_Z                           "Tabla Z"                                                    //Tabla Z
+#define MSG_NOZZLE                          "Nozül"                                                      //Nozül
+#define MSG_BED                             "Tabla"                                                      //Tabla
+#define MSG_FAN_SPEED                       "Fan Hızı"                                                   //Fan Hızı
+#define MSG_FLOW                            "Akış"                                                       //Akış
+#define MSG_CONTROL                         "Kontrol"                                                    //Kontrol
+#define MSG_MIN                             " " LCD_STR_THERMOMETER " Min"                               // Min
+#define MSG_MAX                             " " LCD_STR_THERMOMETER " Max"                               // Max
+#define MSG_FACTOR                          " " LCD_STR_THERMOMETER " Çarpan"                            // Çarpan
+#define MSG_AUTOTEMP                        "Autotemp"                                                   // Autotemp
+#define MSG_ON                              "On "                                                        //On 
+#define MSG_OFF                             "Off"                                                        //Off
+#define MSG_PID_P                           "PID-P"                                                      //PID-P
+#define MSG_PID_I                           "PID-I"                                                      //PID-I
+#define MSG_PID_D                           "PID-D"                                                      //PID-D
+#define MSG_PID_C                           "PID-C"                                                      //PID-C
+#define MSG_SELECT                          "Seç"                                                        //Seç
+#define MSG_ACC                             "İvme"                                                       //İvme
+#define MSG_VX_JERK                         "Vx-Jerk"                                                    //Vx-Jerk
+#define MSG_VY_JERK                         "Vy-Jerk"                                                    //Vy-Jerk
+#define MSG_VZ_JERK                         "Vz-jerk"                                                    //Vz-Jerk
+#define MSG_VE_JERK                         "Ve-jerk"                                                    //Ve-Jerk
+#define MSG_VMAX                            "Vmax "                                                      //Vmax
+#define MSG_VMIN                            "Vmin"                                                       //Vmin
+#define MSG_VTRAV_MIN                       "VTrav min"                                                  //Vtrav min
+#define MSG_AMAX                            "Amax "                                                      //Amax
+#define MSG_A_RETRACT                       "A-retract"                                                  //A-retract
+#define MSG_A_TRAVEL                        "A-travel"                                                   //A-travel
+#define MSG_XSTEPS                          "Xsteps/mm"                                                  //Xsteps/mm
+#define MSG_YSTEPS                          "Ysteps/mm"                                                  //Ysteps/mm
+#define MSG_ZSTEPS                          "Zsteps/mm"                                                  //Zsteps/mm
+#define MSG_ESTEPS                          "Esteps/mm"                                                  //Esteps/mm
+#define MSG_TEMPERATURE                     "Sıcaklık"                                                   //Sıcaklık
+#define MSG_MOTION                          "Hareket"                                                    //Hareket
+#define MSG_VOLUMETRIC                      "Filaman"                                                    //Filaman
+#define MSG_VOLUMETRIC_ENABLED              "E in mm3"                                                   //E in mm3
+#define MSG_FILAMENT_DIAM                   "Fil. Çap"                                                   //Fil. Çap
+#define MSG_CONTRAST                        "LCD Kontrast"                                               //LCD Kontrast
+#define MSG_STORE_EPROM                     "Hafızaya Al"                                                //Hafızaya Al
+#define MSG_LOAD_EPROM                      "Hafızadan Yükle"                                            //Hafızadan Yükle
+#define MSG_RESTORE_FAILSAFE                "Fabrika Ayarları"                                           //Fabrika Ayarları
+#define MSG_REFRESH                         "Yenile"                                                     //Yenile
+#define MSG_WATCH                           "Bilgi Ekranı"                                               //Bilgi Ekranı
+#define MSG_PREPARE                         "Hazırlık"                                                   //Hazırlık
+#define MSG_TUNE                            "Ayar"                                                       //Ayar
+#define MSG_PAUSE_PRINT                     "Duraklat"                                                   //Duraklat
+#define MSG_RESUME_PRINT                    "Sürdür"                                                     //Sürdür
+#define MSG_STOP_PRINT                      "Durdur"                                                     //Durdur
+#define MSG_CARD_MENU                       "SD den Yazdır"                                              //SD den Yazdır
+#define MSG_NO_CARD                         "SD Kart Yok"                                                //SD Kart Yok
+#define MSG_DWELL                           "Uyku..."                                                    //Uyku...
+#define MSG_USERWAIT                        "Operatör bekleniyor..."                                     //Operatör bekleniyor...
+#define MSG_RESUMING                        "Baskı Sürdürülüyor"                                         //Baskı Sürdürülüyor
+#define MSG_PRINT_ABORTED                   "Baskı Durduruldu"                                           //Baskı Durduruldu
+#define MSG_NO_MOVE                         "İşlem yok."                                                 //İşlem yok.
+#define MSG_KILLED                          "Kilitlendi. "                                               //Kilitlendi.
+#define MSG_STOPPED                         "Durdu. "                                                    //Durdu.
+#define MSG_CONTROL_RETRACT                 "Geri Çek mm"                                                //Geri Çek mm
+#define MSG_CONTROL_RETRACT_SWAP            "Swap Re.mm"                                                 //Swap Re.mm
+#define MSG_CONTROL_RETRACTF                "Geri Çekme  V"                                              //Geri Çekme V
+#define MSG_CONTROL_RETRACT_ZLIFT           "Hop mm"                                                     //Hop mm
+#define MSG_CONTROL_RETRACT_RECOVER         "UnRet +mm"                                                  //UnRet +mm
+#define MSG_CONTROL_RETRACT_RECOVER_SWAP    "S UnRet+mm"                                                 //S UnRet+mm
+#define MSG_CONTROL_RETRACT_RECOVERF        "UnRet  V"                                                   //UnRet V
+#define MSG_AUTORETRACT                     "AutoRetr."                                                  //AutoRetr.
+#define MSG_FILAMENTCHANGE                  "Filaman Değiştir"                                           //Filaman Değiştir
+#define MSG_INIT_SDCARD                     "Init. SD"                                                   //Init. SD
+#define MSG_CNG_SDCARD                      "SD Değiştir"                                                //SD Değiştir
+#define MSG_ZPROBE_OUT                      "Z Prob Açık. Tabla"                                         //Z Prob Açık. Tabla
+#define MSG_BLTOUCH_SELFTEST                "BLTouch Self-Test"                                          //BLTouch Self-Test
+#define MSG_BLTOUCH_RESET                   "Sıfırla BLTouch"                                            //Sıfırla BLTouch
+#define MSG_HOME                            "Sıfırla"                                                    //Sıfırla
+#define MSG_FIRST                           "önce"                                                       //Önce
+#define MSG_ZPROBE_ZOFFSET                  "Z Offset"                                                   //Z Offset
+#define MSG_BABYSTEP_X                      "Miniadım X"                                                 //Miniadım X
+#define MSG_BABYSTEP_Y                      "Miniadım Y"                                                 //Miniadım Y
+#define MSG_BABYSTEP_Z                      "Miniadım Z"                                                 //Miniadım Z
+#define MSG_ENDSTOP_ABORT                   "Endstop iptal"                                              //Endstop iptal
+#define MSG_HEATING_FAILED_LCD              "Isınma başarısız"                                           //Isınma başarısız
+#define MSG_ERR_REDUNDANT_TEMP              "Hata: Geçersiz Sıcaklık"                                    //Hata: Geçersiz Sıcaklık
+#define MSG_THERMAL_RUNAWAY                 "TERMAL PROBLEM"                                             //TERMAL PROBLEM
+#define MSG_ERR_MAXTEMP                     "Hata: MAXSICAKLIK"                                          //Hata: MAXSICAKLIK
+#define MSG_ERR_MINTEMP                     "Hata: MINSICAKLIK"                                          //Hata: MINSICAKLIK
+#define MSG_ERR_MAXTEMP_BED                 "Hata: MAXSIC. TABLA"                                        //Hata: MAXSIC. TABLA
+#define MSG_ERR_MINTEMP_BED                 "Hata: MINSIC. TABLA"                                        //Hata: MINSIC. TABLA
+#define MSG_ERR_Z_HOMING                    "G28 Z Yapılamaz"                                            //G28 Z Yapılamaz
+#define MSG_HALTED                          "YAZICI DURDURULDU"                                          //YAZICI DURDURULDU
+#define MSG_PLEASE_RESET                    "Lütfen resetleyin"                                          //Lütfen resetleyin
+#define MSG_SHORT_DAY                       "G" // One character only                                    //G
+#define MSG_SHORT_HOUR                      "S" // One character only                                    //S
+#define MSG_SHORT_MINUTE                    "D" // One character only                                    //D
+#define MSG_HEATING                         "Isınıyor..."                                                //Isınıyor...
+#define MSG_HEATING_COMPLETE                "Isınma tamam."                                              //Isınma tamam.
+#define MSG_BED_HEATING                     "Tabla Isınıyor."                                            //Tabla Isınıyor.
+#define MSG_BED_DONE                        "Tabla hazır."                                               //Tabla hazır.
+#define MSG_DELTA_CALIBRATE                 "Delta Kalibrasyonu"                                         //Delta Kalibrasyonu
+#define MSG_DELTA_CALIBRATE_X               "Ayarla X"                                                   //Ayarla X
+#define MSG_DELTA_CALIBRATE_Y               "Ayarla Y"                                                   //Ayarla Y
+#define MSG_DELTA_CALIBRATE_Z               "Ayarla Z"                                                   //Ayarla Z
+#define MSG_DELTA_CALIBRATE_CENTER          "Ayarla Merkez"                                              //Ayarla Merkez
+
+#define MSG_INFO_MENU                       "Yazıcı Hakkında"                                            //Yazıcı Hakkında
+#define MSG_INFO_PRINTER_MENU               "Yazıcı Bilgisi"                                             //Yazıcı Bilgisi
+#define MSG_INFO_STATS_MENU                 "İstatistikler"                                              //İstatistikler
+#define MSG_INFO_BOARD_MENU                 "Kontrolör Bilgisi"                                          //Kontrol Bilgisi
+#define MSG_INFO_THERMISTOR_MENU            "Termistörler"                                               //Termistörler
+#define MSG_INFO_EXTRUDERS                  "Ekstruderler"                                               //Ekstruderler
+#define MSG_INFO_BAUDRATE                   "İletişim Hızı"                                              //İletişim Hızı
+#define MSG_INFO_PROTOCOL                   "Protokol"                                                   //Protokol
+
+#if LCD_WIDTH > 19
+  #define MSG_INFO_PRINT_COUNT              "Baskı Sayısı"                                               //Baskı Sayısı
+  #define MSG_INFO_COMPLETED_PRINTS         "Tamamlanan"                                                 //Tamamlanan
+  #define MSG_INFO_PRINT_TIME               "Toplam Baskı Süresi"                                        //Toplam Baskı Süresi
+  #define MSG_INFO_PRINT_LONGEST            "En Uzun Baskı Süresi"                                       //En Uzun Baskı Süresi
+  #define MSG_INFO_PRINT_FILAMENT           "Toplam Filaman"                                             //Toplam Filaman
+#else
+  #define MSG_INFO_PRINT_COUNT              "Baskı"                                                      //Baskı
+  #define MSG_INFO_COMPLETED_PRINTS         "Tamamlanan"                                                 //Tamamlanan
+  #define MSG_INFO_PRINT_TIME               "Süre"                                                       //Süre
+  #define MSG_INFO_PRINT_LONGEST            "En Uzun"                                                    //En Uzun
+  #define MSG_INFO_PRINT_FILAMENT           "Filaman"                                                    //Filaman
+#endif
+
+#define MSG_INFO_MIN_TEMP                   "Min Sıc."                                                   //Min Sıcak.
+#define MSG_INFO_MAX_TEMP                   "Max Sıc."                                                   //Max Sıcak.
+#define MSG_INFO_PSU                        "Güç Kaynağı"                                                //Güç Kaynağı
+
+#define MSG_DRIVE_STRENGTH                  "Sürücü Gücü"                                                //Sürücü Gücü
+#define MSG_DAC_PERCENT                     "Sürücü %"                                                   //Sürücü %
+#define MSG_DAC_EEPROM_WRITE                "DAC'ı EEPROM'a Yaz"                                         //DAC'ı EEPROM'a Yaz
+#define MSG_FILAMENT_CHANGE_HEADER          "Filaman Değiştir"                                           //Filaman Değiştir
+#define MSG_FILAMENT_CHANGE_OPTION_HEADER   "Seçenekler:"                                                //Seçenekler:
+#define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  "Daha Akıt"                                                  //Daha Akıt
+#define MSG_FILAMENT_CHANGE_OPTION_RESUME   "Baskıyı sürdür"                                             //Baskıyı sürdür
+#if LCD_HEIGHT >= 4
+  #define MSG_FILAMENT_CHANGE_INIT_1          "Başlama bekleniyor"                                       //Başlama bekleniyor
+  #define MSG_FILAMENT_CHANGE_INIT_2          "filamanın"                                                //filamanın
+  #define MSG_FILAMENT_CHANGE_INIT_3          "değişimi"                                                 //değişimi
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Bekleniyor"                                               //Bekleniyor
+  #define MSG_FILAMENT_CHANGE_UNLOAD_2        "filamanın çıkması"                                        //filamanın çıkması
+  #define MSG_FILAMENT_CHANGE_UNLOAD_3        ""                                                         //
+  #define MSG_FILAMENT_CHANGE_INSERT_1        "Filamanı yükle"                                           //Filamanı yükle
+  #define MSG_FILAMENT_CHANGE_INSERT_2        "ve devam için"                                            //ve devam için
+  #define MSG_FILAMENT_CHANGE_INSERT_3        "tuşa bas..."                                              //tuşa bas...
+  #define MSG_FILAMENT_CHANGE_LOAD_1          "Bekleniyor"                                               //Bekleniyor
+  #define MSG_FILAMENT_CHANGE_LOAD_2          "filamanın yüklenmesi"                                     //filamanın yüklenmesi
+  #define MSG_FILAMENT_CHANGE_LOAD_3          ""                                                         //
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Bekleniyor"                                               //Bekleniyor
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_2       "filaman akması"                                           //filaman akması
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_3       ""                                                         //
+  #define MSG_FILAMENT_CHANGE_RESUME_1        "Baskının sürdürülmesini"                                  //Baskının sürdürülmesini
+  #define MSG_FILAMENT_CHANGE_RESUME_2        "bekle"                                                    //bekle
+  #define MSG_FILAMENT_CHANGE_RESUME_3        ""                                                         //
+#else // LCD_HEIGHT < 4
+  #define MSG_FILAMENT_CHANGE_INIT_1          "Lütfen bekleyiniz..."                                     //Lütfen bekleyiniz...
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Çıkartılıyor..."                                          //Çıkartılıyor...
+  #define MSG_FILAMENT_CHANGE_INSERT_1        "Yükle ve bas"                                             //Yükle ve bas
+  #define MSG_FILAMENT_CHANGE_LOAD_1          "Yüklüyor..."                                              //Yüklüyor...
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Akıtılıyor..."                                            //Akıtılıyor...
+  #define MSG_FILAMENT_CHANGE_RESUME_1        "Sürdürülüyor..."                                          //Sürdürülüyor...
+#endif // LCD_HEIGHT < 4
+
+#endif // LANGUAGE_TR_UTF_H
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 32444f1..066215f 100755
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -110,6 +110,9 @@ uint8_t lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; // Set when the LCD needs to
   #if HAS_POWER_SWITCH
     extern bool powersupply;
   #endif
+  #if HAS_CASE_LIGHT
+    extern bool case_light_on;
+  #endif
   const float manual_feedrate_mm_m[] = MANUAL_FEEDRATE;
   void lcd_main_menu();
   void lcd_tune_menu();
@@ -583,6 +586,16 @@ void kill_screen(const char* lcd_msg) {
     START_MENU();
     MENU_BACK(MSG_WATCH);
 
+    //
+    // Switch case light on/off
+    //
+    #if HAS_CASE_LIGHT && ENABLED(MENU_ITEM_CASE_LIGHT)
+      if (case_light_on == 0)
+        MENU_ITEM(gcode, MSG_LIGHTS_ON, PSTR("M355 S1"));
+      else
+        MENU_ITEM(gcode, MSG_LIGHTS_OFF, PSTR("M355 S0"));
+    #endif
+
     #if ENABLED(BLTOUCH)
       if (!endstops.z_probe_enabled && TEST_BLTOUCH())
         MENU_ITEM(gcode, MSG_BLTOUCH_RESET, PSTR("M280 P" STRINGIFY(Z_ENDSTOP_SERVO_NR) " S" STRINGIFY(BLTOUCH_RESET)));
@@ -859,7 +872,7 @@ void kill_screen(const char* lcd_msg) {
 
     void lcd_dac_menu() {
       dac_driver_getValues();
-      START_MENU();    
+      START_MENU();
       MENU_BACK(MSG_CONTROL);
       MENU_ITEM_EDIT_CALLBACK(int3, MSG_X " " MSG_DAC_PERCENT, &driverPercent[X_AXIS], 0, 100, dac_driver_commit);
       MENU_ITEM_EDIT_CALLBACK(int3, MSG_Y " " MSG_DAC_PERCENT, &driverPercent[Y_AXIS], 0, 100, dac_driver_commit);
@@ -1028,7 +1041,7 @@ void kill_screen(const char* lcd_msg) {
       line_to_current(Z_AXIS);
       current_position[X_AXIS] = LOGICAL_X_POSITION(x);
       current_position[Y_AXIS] = LOGICAL_Y_POSITION(y);
-      line_to_current(manual_feedrate_mm_m[X_AXIS] <= manual_feedrate_mm_m[Y_AXIS] ? X_AXIS : Y_AXIS);
+      planner.buffer_line_kinematic(current_position, MMM_TO_MMS(XY_PROBE_SPEED), active_extruder);
       #if Z_HOMING_HEIGHT > 0
         current_position[Z_AXIS] = LOGICAL_Z_POSITION(MESH_HOME_SEARCH_Z);
         line_to_current(Z_AXIS);
@@ -1549,7 +1562,7 @@ void kill_screen(const char* lcd_msg) {
       MENU_ITEM(submenu, MSG_RETRACT, lcd_control_retract_menu);
     #endif
     #if ENABLED(DAC_STEPPER_CURRENT)
-      MENU_ITEM(submenu, MSG_DRIVE_STRENGTH, lcd_dac_menu); 
+      MENU_ITEM(submenu, MSG_DRIVE_STRENGTH, lcd_dac_menu);
     #endif
 
     #if ENABLED(EEPROM_SETTINGS)
diff --git a/Marlin/utf_mapper.h b/Marlin/utf_mapper.h
index bba85e1..d814e46 100644
--- a/Marlin/utf_mapper.h
+++ b/Marlin/utf_mapper.h
@@ -40,6 +40,8 @@
     #define MAPPER_ONE_TO_ONE
   #elif ENABLED(DISPLAY_CHARSET_ISO10646_GREEK)
     #define MAPPER_ONE_TO_ONE
+  #elif ENABLED(DISPLAY_CHARSET_ISO10646_TR)
+    #define MAPPER_ONE_TO_ONE
   #endif
 #else // SIMULATE_ROMFONT
   #if DISPLAY_CHARSET_HD44780 == JAPANESE

