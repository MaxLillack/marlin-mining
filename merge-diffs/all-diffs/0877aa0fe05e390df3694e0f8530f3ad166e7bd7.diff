commit 0877aa0fe05e390df3694e0f8530f3ad166e7bd7 (from 7d32c7f36def22a6241f1a7b4d243000610e25fa)
Merge: 7d32c7f 1d4af46
Author: grob6000 <grobinson6000@gmail.com>
Date:   Sun Jan 11 11:32:58 2015 +1100

    Merge remote-tracking branch 'upstream/Development' into independent_pid

diff --git a/Documentation/Logo/Marlin Logo LCD High.png b/Documentation/Logo/Marlin Logo LCD High.png
new file mode 100644
index 0000000..81225c3
Binary files /dev/null and b/Documentation/Logo/Marlin Logo LCD High.png differ
diff --git a/Documentation/Logo/Marlin Logo LCD Low.png b/Documentation/Logo/Marlin Logo LCD Low.png
new file mode 100644
index 0000000..34b80c4
Binary files /dev/null and b/Documentation/Logo/Marlin Logo LCD Low.png differ
diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index 9b77f96..dfc1965 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -24,8 +24,11 @@
 // User-specified version info of this build to display in [Pronterface, etc] terminal window during
 // startup. Implementation of an idea by Prof Braino to inform user that any changes made to this
 // build by the user have been successfully uploaded into firmware.
+#define STRING_VERSION "v1.0.2"
+#define STRING_URL "reprap.org"
 #define STRING_VERSION_CONFIG_H __DATE__ " " __TIME__ // build date and time
 #define STRING_CONFIG_H_AUTHOR "(none, default config)" // Who made the changes.
+#define STRING_SPLASH STRING_VERSION " - " STRING_URL // will be shown during bootup
 
 // SERIAL_PORT selects which serial port should be used for communication with the host.
 // This allows the connection of wireless adapters (for instance) to non-default port pins.
diff --git a/Marlin/Configuration_adv.h b/Marlin/Configuration_adv.h
index 50c4581..c2dd54b 100644
--- a/Marlin/Configuration_adv.h
+++ b/Marlin/Configuration_adv.h
@@ -297,7 +297,7 @@
 // using:
 //#define MENU_ADDAUTOSTART
 
-// Show a progress bar on the LCD when printing from SD?
+// Show a progress bar on HD44780 LCDs for SD printing
 //#define LCD_PROGRESS_BAR
 
 #ifdef LCD_PROGRESS_BAR
@@ -309,6 +309,12 @@
   #define PROGRESS_MSG_EXPIRE   0
   // Enable this to show messages for MSG_TIME then hide them
   //#define PROGRESS_MSG_ONCE
+  #ifdef DOGLCD
+    #warning LCD_PROGRESS_BAR does not apply to graphical displays at this time.
+  #endif
+  #ifdef FILAMENT_LCD_DISPLAY
+    #error LCD_PROGRESS_BAR and FILAMENT_LCD_DISPLAY are not fully compatible. Comment out this line to use both.
+  #endif
 #endif
 
 // The hardware watchdog should reset the microcontroller disabling all outputs, in case the firmware gets stuck and doesn't do temperature regulation.
diff --git a/Marlin/DOGMbitmaps.h b/Marlin/DOGMbitmaps.h
index b149b76..b735477 100644
--- a/Marlin/DOGMbitmaps.h
+++ b/Marlin/DOGMbitmaps.h
@@ -1,28 +1,78 @@
-#define START_BMPWIDTH 	60	//Width in pixels - http://www.digole.com/tools/PicturetoC_Hex_converter.php
-#define START_BMPHEIGHT 	64	//Height in pixels
-#define START_BMPBYTEWIDTH 	8	//Width in bytes
-const unsigned char start_bmp[574] PROGMEM = { //AVR-GCC, WinAVR
-0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
-0x30,0x00,0x00,0x00,0x00,0x00,0x3f,0xff,
-0x40,0x00,0x00,0x00,0x00,0x00,0x1f,0xff,
-0xc0,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,
-0x80,0x83,0x00,0x00,0x01,0x80,0x07,0xff,
-0x83,0xef,0xc0,0x00,0x01,0x8c,0x03,0xff,
-0x87,0xff,0xe0,0x00,0x01,0x8c,0x01,0xff,
-0x8e,0x38,0x60,0x00,0x01,0x80,0x00,0xff,
-0x8c,0x18,0x67,0xe0,0xf9,0x8c,0x7e,0x7f,
-0x8c,0x18,0x6f,0xf1,0xfd,0x8c,0xfe,0x3f,
-0x8c,0x18,0x6e,0x31,0x8d,0x8c,0xc7,0x1f,
-0x8c,0x18,0x6c,0x39,0x8d,0x8c,0xc3,0x1f,
-0x8c,0x18,0x6c,0x19,0x81,0x8c,0xc3,0x1f,
-0x8c,0x18,0x6e,0x19,0x81,0x8c,0xc3,0x1f,
-0x8c,0x18,0x6f,0x9f,0x81,0xef,0xc3,0x1f,
-0x8c,0x18,0x67,0xdf,0x80,0xef,0xc3,0x1f,
-0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,
-0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x2f,
-0x30,0x00,0x00,0x00,0x00,0x00,0x00,0xcf,
-0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0x8f
-};
+// BitMap for splashscreen
+// Generated with: http://www.digole.com/tools/PicturetoC_Hex_converter.php
+// Please note that using the high-res version takes about 0.5KB of 
+#ifdef START_BMPHIGH
+  #define START_BMPWIDTH      112
+  #define START_BMPHEIGHT      38
+  #define START_BMPBYTEWIDTH   14
+  #define START_BMPBYTES      532 // START_BMPWIDTH * START_BMPHEIGHT / 8
+  
+  const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
+     0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
+    ,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
+    ,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xff
+    ,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff
+    ,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xff
+    ,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff
+    ,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0xff
+    ,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3f,0xff
+    ,0xc0,0x0f,0xc0,0xfc,0x00,0x00,0x00,0x00,0x00,0x78,0x18,0x00,0x1f,0xff
+    ,0xc0,0x3f,0xe1,0xff,0x00,0x00,0x00,0x00,0x00,0x78,0x3c,0x00,0x0f,0xff
+    ,0xc0,0x7f,0xf3,0xff,0x80,0x00,0x00,0x00,0x00,0x78,0x3c,0x00,0x07,0xff
+    ,0xc0,0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x78,0x3c,0x00,0x03,0xff
+    ,0xc1,0xf8,0x7f,0x87,0xe0,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x01,0xff
+    ,0xc1,0xf0,0x3f,0x03,0xe0,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x00,0xff
+    ,0xc1,0xe0,0x1e,0x01,0xe0,0x1f,0x00,0x03,0xe0,0x78,0x3c,0x03,0xf0,0x7f
+    ,0xc1,0xe0,0x1e,0x01,0xe0,0x7f,0xc0,0x0f,0xf8,0x78,0x3c,0x07,0xfc,0x3f
+    ,0xc1,0xe0,0x1e,0x01,0xe1,0xff,0xe0,0x1f,0xfc,0x78,0x3c,0x0f,0xfe,0x1f
+    ,0xc1,0xe0,0x1e,0x01,0xe3,0xff,0xf0,0x3f,0xfe,0x78,0x3c,0x1f,0xfe,0x0f
+    ,0xc1,0xe0,0x1e,0x01,0xe3,0xf3,0xf8,0x3f,0x3e,0x78,0x3c,0x3f,0x3f,0x07
+    ,0xc1,0xe0,0x1e,0x01,0xe7,0xe0,0xfc,0x7c,0x1f,0x78,0x3c,0x3e,0x1f,0x07
+    ,0xc1,0xe0,0x1e,0x01,0xe7,0xc0,0x7c,0x7c,0x0f,0x78,0x3c,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe7,0x80,0x7c,0x78,0x0f,0x78,0x3c,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe7,0x80,0x3c,0x78,0x00,0x78,0x3c,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe7,0x80,0x3c,0x78,0x00,0x78,0x3c,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe7,0x80,0x3c,0x78,0x00,0x78,0x3c,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe7,0xc0,0x3c,0x78,0x00,0x78,0x3c,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe3,0xe0,0x3c,0x78,0x00,0x7c,0x3c,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe3,0xff,0x3f,0xf8,0x00,0x7f,0xbc,0x3c,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe1,0xff,0x3f,0xf8,0x00,0x3f,0xbf,0xfc,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe0,0xff,0x3f,0xf8,0x00,0x1f,0xbf,0xfc,0x0f,0x03
+    ,0xc1,0xe0,0x1e,0x01,0xe0,0x7f,0x3f,0xf8,0x00,0x0f,0xbf,0xfc,0x0f,0x03
+    ,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07
+    ,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06
+    ,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e
+    ,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c
+    ,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78
+    ,0x0f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf0
+    ,0x01,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80 };
+#else
+  #define START_BMPWIDTH 	    56 
+  #define START_BMPHEIGHT 	  19
+  #define START_BMPBYTEWIDTH  7
+  #define START_BMPBYTES      133 // START_BMPWIDTH * START_BMPHEIGHT / 8
+
+  const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
+     0x1f,0xff,0xff,0xff,0xff,0xff,0xff
+    ,0x60,0x00,0x00,0x00,0x00,0x01,0xff
+    ,0x40,0x00,0x00,0x00,0x00,0x00,0xff
+    ,0x80,0x00,0x00,0x00,0x00,0x00,0x7f
+    ,0x83,0xcf,0x00,0x00,0x0c,0x30,0x3f
+    ,0x87,0xff,0x80,0x00,0x0c,0x30,0x1f
+    ,0x86,0x79,0x80,0x00,0x0c,0x00,0x0f
+    ,0x8c,0x30,0xc7,0x83,0x8c,0x30,0xe7
+    ,0x8c,0x30,0xcf,0xc7,0xcc,0x31,0xf3
+    ,0x8c,0x30,0xdc,0xec,0xec,0x33,0xb9
+    ,0x8c,0x30,0xd8,0x6c,0x6c,0x33,0x19
+    ,0x8c,0x30,0xd0,0x6c,0x0c,0x33,0x19
+    ,0x8c,0x30,0xd8,0x6c,0x0c,0x33,0x19
+    ,0x8c,0x30,0xdc,0x6c,0x0e,0x3b,0x19
+    ,0x8c,0x30,0xcf,0x7c,0x07,0x9f,0x19
+    ,0x8c,0x30,0xc7,0x7c,0x03,0x8f,0x19
+    ,0x40,0x00,0x00,0x00,0x00,0x00,0x02
+    ,0x60,0x00,0x00,0x00,0x00,0x00,0x06
+    ,0x1f,0xff,0xff,0xff,0xff,0xff,0xf8 };
+#endif
 
 // Here comes a compile-time operation to match the extruder symbols 
 // on the info screen to the set number of extruders in configuration.h
diff --git a/Marlin/dogm_lcd_implementation.h b/Marlin/dogm_lcd_implementation.h
index bcbe5f7..6f595ce 100644
--- a/Marlin/dogm_lcd_implementation.h
+++ b/Marlin/dogm_lcd_implementation.h
@@ -1,19 +1,20 @@
 /**
- *dogm_lcd_implementation.h
+ * dogm_lcd_implementation.h
  *
- *Graphics LCD implementation for 128x64 pixel LCDs by STB for ErikZalm/Marlin
- *Demonstrator: http://www.reprap.org/wiki/STB_Electronics
- *License: http://opensource.org/licenses/BSD-3-Clause
+ * Graphics LCD implementation for 128x64 pixel LCDs by STB for ErikZalm/Marlin
+ * Demonstrator: http://www.reprap.org/wiki/STB_Electronics
+ * License: http://opensource.org/licenses/BSD-3-Clause
  *
- *With the use of:
- *u8glib by Oliver Kraus
- *http://code.google.com/p/u8glib/
- *License: http://opensource.org/licenses/BSD-3-Clause
+ * With the use of:
+ * u8glib by Oliver Kraus
+ * http://code.google.com/p/u8glib/
+ * License: http://opensource.org/licenses/BSD-3-Clause
  */
 
+#ifndef DOGM_LCD_IMPLEMENTATION_H
+#define DOGM_LCD_IMPLEMENTATION_H
 
-#ifndef ULTRA_LCD_IMPLEMENTATION_DOGM_H
-#define ULTRA_LCD_IMPLEMENTATION_DOGM_H
+#define MARLIN_VERSION "1.0.2"
 
 /**
 * Implementation of the LCD display routines for a DOGM128 graphic display. These are common LCD 128x64 pixel graphic displays.
@@ -51,12 +52,12 @@
 */
 
 // DOGM parameters (size in pixels)
-#define DOG_CHAR_WIDTH			6
-#define DOG_CHAR_HEIGHT			12
-#define DOG_CHAR_WIDTH_LARGE	9
-#define DOG_CHAR_HEIGHT_LARGE	18
+#define DOG_CHAR_WIDTH         6
+#define DOG_CHAR_HEIGHT        12
+#define DOG_CHAR_WIDTH_LARGE   9
+#define DOG_CHAR_HEIGHT_LARGE  18
 
-#define START_ROW				0
+#define START_ROW              0
 
 /* Custom characters defined in font font_6x10_marlin.c */
 #define LCD_STR_DEGREE      "\xB0"
@@ -69,7 +70,7 @@
 #define LCD_STR_BEDTEMP     "\xFE"
 #define LCD_STR_THERMOMETER "\xFF"
 
-#define FONT_STATUSMENU	u8g_font_6x9
+#define FONT_STATUSMENU u8g_font_6x9
 
 int lcd_contrast;
 
@@ -82,78 +83,64 @@ U8GLIB_ST7920_128X64_RRD u8g(0);
 U8GLIB_NHD_C12864 u8g(DOGLCD_CS, DOGLCD_A0);
 #else
 // for regular DOGM128 display with HW-SPI
-U8GLIB_DOGM128 u8g(DOGLCD_CS, DOGLCD_A0);	// HW-SPI Com: CS, A0
+U8GLIB_DOGM128 u8g(DOGLCD_CS, DOGLCD_A0);  // HW-SPI Com: CS, A0
 #endif
 
 static void lcd_implementation_init()
 {
-#ifdef LCD_PIN_BL
-	pinMode(LCD_PIN_BL, OUTPUT);	// Enable LCD backlight
-	digitalWrite(LCD_PIN_BL, HIGH);
-#endif
+  #ifdef LCD_PIN_BL // Enable LCD backlight
+    pinMode(LCD_PIN_BL, OUTPUT);
+	  digitalWrite(LCD_PIN_BL, HIGH);
+  #endif
 
-        u8g.setContrast(lcd_contrast);	
-	//  Uncomment this if you have the first generation (V1.10) of STBs board
-	//  pinMode(17, OUTPUT);	// Enable LCD backlight
-	//  digitalWrite(17, HIGH);
+  u8g.setContrast(lcd_contrast);	
+	// FIXME: remove this workaround
+  // Uncomment this if you have the first generation (V1.10) of STBs board
+	// pinMode(17, OUTPUT);	// Enable LCD backlight
+	// digitalWrite(17, HIGH);
+  
+#ifdef LCD_SCREEN_ROT_90
+	u8g.setRot90();   // Rotate screen by 90°
+#elif defined(LCD_SCREEN_ROT_180)
+	u8g.setRot180();	// Rotate screen by 180°
+#elif defined(LCD_SCREEN_ROT_270)
+	u8g.setRot270();	// Rotate screen by 270°
+#endif
 	
+  // FIXME: whats the purpose of the box? Maybe clear screen?
 	u8g.firstPage();
-	do {
+  do {
 		u8g.setFont(u8g_font_6x10_marlin);
 		u8g.setColorIndex(1);
 		u8g.drawBox (0, 0, u8g.getWidth(), u8g.getHeight());
 		u8g.setColorIndex(1);
-	   } while( u8g.nextPage() );
-
-#ifdef LCD_SCREEN_ROT_90
-	u8g.setRot90();	// Rotate screen by 90°
-#endif
+	} while(u8g.nextPage());
 
-#ifdef LCD_SCREEN_ROT_180
-	u8g.setRot180();	// Rotate screen by 180°
-#endif
-
-#ifdef LCD_SCREEN_ROT_270
-	u8g.setRot270();	// Rotate screen by 270°
-#endif
-
-   
+  // Show splashscreen
+  int off = (u8g.getWidth() - START_BMPWIDTH) / 2;
+  int txtX = (u8g.getWidth() - sizeof(STRING_SPLASH) - 1) / 2;
+  int txtY = u8g.getHeight() - 10;
 	u8g.firstPage();
 	do {
-			// RepRap init bmp
-			u8g.drawBitmapP(7,7,START_BMPBYTEWIDTH,START_BMPHEIGHT,start_bmp);
-			// Welcome message
-			
-			
-			
-			u8g.setFont(u8g_font_5x8);
-			u8g.drawStr(7,51,"V1.0.2 - marlin.reprap.org");
+    #ifdef START_BMPHIGH
+		  u8g.drawBitmapP(off, off, START_BMPBYTEWIDTH, START_BMPHEIGHT, start_bmp);
+    #else
+      u8g.setScale2x2();
+		  u8g.drawBitmapP(off, off, START_BMPBYTEWIDTH, START_BMPHEIGHT, start_bmp);
+      u8g.undoScale();
+    #endif
 			
-	   } while( u8g.nextPage() );
+    u8g.setFont(u8g_font_5x8);
+		u8g.drawStr(txtX, txtY, STRING_SPLASH);
+	} while(u8g.nextPage());
 }
 
-static void lcd_implementation_clear()
-{
-// NO NEED TO IMPLEMENT LIKE SO. Picture loop automatically clears the display.
-//
-// Check this article: http://arduino.cc/forum/index.php?topic=91395.25;wap2
-//
-//	u8g.firstPage();
-//	do {	
-//			u8g.setColorIndex(0);
-//			u8g.drawBox (0, 0, u8g.getWidth(), u8g.getHeight());
-//			u8g.setColorIndex(1);
-//		} while( u8g.nextPage() );
-}
+static void lcd_implementation_clear() { } // Automatically cleared by Picture Loop
 
 /* Arduino < 1.0.0 is missing a function to print PROGMEM strings, so we need to implement our own */
-static void lcd_printPGM(const char* str)
-{
-    char c;
-    while((c = pgm_read_byte(str++)) != '\0')
-    {
-			u8g.print(c);
-    }
+static void lcd_printPGM(const char* str) {
+  char c;
+  while ((c = pgm_read_byte(str++))) u8g.print(c);
 }
 
 static void _draw_heater_status(int x, int heater) {
@@ -176,49 +163,44 @@ static void _draw_heater_status(int x, int heater) {
   }
 }
 
-static void lcd_implementation_status_screen()
-{
+static void lcd_implementation_status_screen() {
 
- static unsigned char fan_rot = 0;
- 
- u8g.setColorIndex(1);	// black on white
+  static unsigned char fan_rot = 0;
  
- // Symbols menu graphics, animated fan
- u8g.drawBitmapP(9,1,STATUS_SCREENBYTEWIDTH,STATUS_SCREENHEIGHT, (blink % 2) && fanSpeed ? status_screen0_bmp : status_screen1_bmp);
- 
- #ifdef SDSUPPORT
- //SD Card Symbol
- u8g.drawBox(42,42,8,7);
- u8g.drawBox(50,44,2,5);
- u8g.drawFrame(42,49,10,4);
- u8g.drawPixel(50,43);
- // Progress bar
- u8g.drawFrame(54,49,73,4);
+  u8g.setColorIndex(1); // black on white
+
+  // Symbols menu graphics, animated fan
+  u8g.drawBitmapP(9,1,STATUS_SCREENBYTEWIDTH,STATUS_SCREENHEIGHT, (blink % 2) && fanSpeed ? status_screen0_bmp : status_screen1_bmp);
  
- // SD Card Progress bar and clock
- u8g.setFont(FONT_STATUSMENU);
+  #ifdef SDSUPPORT
+    // SD Card Symbol
+    u8g.drawBox(42,42,8,7);
+    u8g.drawBox(50,44,2,5);
+    u8g.drawFrame(42,49,10,4);
+    u8g.drawPixel(50,43);
+
+    // Progress bar frame
+    u8g.drawFrame(54,49,73,4);
+
+    // SD Card Progress bar and clock
+    u8g.setFont(FONT_STATUSMENU);
  
- if (IS_SD_PRINTING)
-   {
-	// Progress bar
-	u8g.drawBox(55,50, (unsigned int)( (71 * card.percentDone())/100) ,2);
-   }
+    if (IS_SD_PRINTING) {
+      // Progress bar solid part
+      u8g.drawBox(55, 50, (unsigned int)(71.f * card.percentDone() / 100.f), 2);
+    }
+
+    u8g.setPrintPos(80,47);
+    if (starttime != 0) {
+      uint16_t time = millis()/60000 - starttime/60000;
+      u8g.print(itostr2(time/60));
+      u8g.print(':');
+      u8g.print(itostr2(time%60));
+    }
     else {
-			// do nothing
-		 }
- 
- u8g.setPrintPos(80,47);
- if(starttime != 0)
-    {
-        uint16_t time = millis()/60000 - starttime/60000;
-
-		u8g.print(itostr2(time/60));
-		u8g.print(':');
-		u8g.print(itostr2(time%60));
-    }else{
-			lcd_printPGM(PSTR("--:--"));
-		 }
- #endif
+      lcd_printPGM(PSTR("--:--"));
+    }
+  #endif
  
   // Extruders
   _draw_heater_status(6, 0);
@@ -232,107 +214,101 @@ static void lcd_implementation_status_screen()
   // Heatbed
   _draw_heater_status(81, -1);
  
- // Fan
- u8g.setFont(FONT_STATUSMENU);
- u8g.setPrintPos(104,27);
- #if defined(FAN_PIN) && FAN_PIN > -1
- u8g.print(itostr3(int((fanSpeed*100)/256 + 1)));
- u8g.print("%");
- #else
- u8g.print("---");
- #endif
- 
- 
- // X, Y, Z-Coordinates
- u8g.setFont(FONT_STATUSMENU);
- u8g.drawBox(0,29,128,10);
- u8g.setColorIndex(0);	// white on black
- u8g.setPrintPos(2,37);
- u8g.print("X");
- u8g.drawPixel(8,33);
- u8g.drawPixel(8,35);
- u8g.setPrintPos(10,37);
- u8g.print(ftostr31ns(current_position[X_AXIS]));
- u8g.setPrintPos(43,37);
- lcd_printPGM(PSTR("Y"));
- u8g.drawPixel(49,33);
- u8g.drawPixel(49,35);
- u8g.setPrintPos(51,37);
- u8g.print(ftostr31ns(current_position[Y_AXIS]));
- u8g.setPrintPos(83,37);
- u8g.print("Z");
- u8g.drawPixel(89,33);
- u8g.drawPixel(89,35);
- u8g.setPrintPos(91,37);
- u8g.print(ftostr31(current_position[Z_AXIS]));
- u8g.setColorIndex(1);	// black on white
+  // Fan
+  u8g.setFont(FONT_STATUSMENU);
+  u8g.setPrintPos(104,27);
+  #if defined(FAN_PIN) && FAN_PIN > -1
+    u8g.print(itostr3(int((fanSpeed*100)/256 + 1)));
+    u8g.print("%");
+  #else
+    u8g.print("---");
+  #endif
+
+  // X, Y, Z-Coordinates
+  u8g.setFont(FONT_STATUSMENU);
+  u8g.drawBox(0,29,128,10);
+  u8g.setColorIndex(0); // white on black
+  u8g.setPrintPos(2,37);
+  u8g.print("X");
+  u8g.drawPixel(8,33);
+  u8g.drawPixel(8,35);
+  u8g.setPrintPos(10,37);
+  u8g.print(ftostr31ns(current_position[X_AXIS]));
+  u8g.setPrintPos(43,37);
+  lcd_printPGM(PSTR("Y"));
+  u8g.drawPixel(49,33);
+  u8g.drawPixel(49,35);
+  u8g.setPrintPos(51,37);
+  u8g.print(ftostr31ns(current_position[Y_AXIS]));
+  u8g.setPrintPos(83,37);
+  u8g.print("Z");
+  u8g.drawPixel(89,33);
+  u8g.drawPixel(89,35);
+  u8g.setPrintPos(91,37);
+  u8g.print(ftostr31(current_position[Z_AXIS]));
+  u8g.setColorIndex(1); // black on white
  
- // Feedrate
- u8g.setFont(u8g_font_6x10_marlin);
- u8g.setPrintPos(3,49);
- u8g.print(LCD_STR_FEEDRATE[0]);
- u8g.setFont(FONT_STATUSMENU);
- u8g.setPrintPos(12,48);
- u8g.print(itostr3(feedmultiply));
- u8g.print('%');
-
- // Status line
- u8g.setFont(FONT_STATUSMENU);
- u8g.setPrintPos(0,61);
- #ifndef FILAMENT_LCD_DISPLAY
- 	u8g.print(lcd_status_message);
- #else
-	if(message_millis+5000>millis()){  //Display both Status message line and Filament display on the last line
-	 u8g.print(lcd_status_message);
- 	}
- 	else
-	{
-	 lcd_printPGM(PSTR("dia:"));
-	 u8g.print(ftostr12ns(filament_width_meas));
-	 lcd_printPGM(PSTR(" factor:"));
-	 u8g.print(itostr3(extrudemultiply));
-	 u8g.print('%');
-	}
- #endif 	
+  // Feedrate
+  u8g.setFont(u8g_font_6x10_marlin);
+  u8g.setPrintPos(3,49);
+  u8g.print(LCD_STR_FEEDRATE[0]);
+  u8g.setFont(FONT_STATUSMENU);
+  u8g.setPrintPos(12,48);
+  u8g.print(itostr3(feedmultiply));
+  u8g.print('%');
 
+  // Status line
+  u8g.setFont(FONT_STATUSMENU);
+  u8g.setPrintPos(0,61);
+  #ifndef FILAMENT_LCD_DISPLAY
+    u8g.print(lcd_status_message);
+  #else
+    if (millis() < message_millis + 5000) {  //Display both Status message line and Filament display on the last line
+      u8g.print(lcd_status_message);
+    }
+    else {
+      lcd_printPGM(PSTR("dia:"));
+      u8g.print(ftostr12ns(filament_width_meas));
+      lcd_printPGM(PSTR(" factor:"));
+      u8g.print(itostr3(extrudemultiply));
+      u8g.print('%');
+    }
+  #endif
 }
 
-static void lcd_implementation_drawmenu_generic(uint8_t row, const char* pstr, char pre_char, char post_char)
-{
-    char c;
-    
-    uint8_t n = LCD_WIDTH - 1 - 2;
-		
-		if ((pre_char == '>') || (pre_char == LCD_STR_UPLEVEL[0] ))
-		   {
-			u8g.setColorIndex(1);		// black on white
-			u8g.drawBox (0, row*DOG_CHAR_HEIGHT + 3, 128, DOG_CHAR_HEIGHT);
-			u8g.setColorIndex(0);		// following text must be white on black
-		   } else u8g.setColorIndex(1); // unmarked text is black on white
-		
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-		u8g.print(pre_char == '>' ? ' ' : pre_char);	// Row selector is obsolete
-
-
-    while( (c = pgm_read_byte(pstr)) != '\0' )
-    {
-		u8g.print(c);
-        pstr++;
-        n--;
-    }
-    while(n--){
-					u8g.print(' ');
-		}
-	   
-		u8g.print(post_char);
-		u8g.print(' ');
-		u8g.setColorIndex(1);		// restore settings to black on white
+static void lcd_implementation_drawmenu_generic(uint8_t row, const char* pstr, char pre_char, char post_char) {
+  char c;
+  
+  uint8_t n = LCD_WIDTH - 1 - 2;
+  
+  if ((pre_char == '>') || (pre_char == LCD_STR_UPLEVEL[0] )) {
+    u8g.setColorIndex(1);  // black on white
+    u8g.drawBox (0, row*DOG_CHAR_HEIGHT + 3, 128, DOG_CHAR_HEIGHT);
+    u8g.setColorIndex(0);  // following text must be white on black
+  }
+  else {
+    u8g.setColorIndex(1); // unmarked text is black on white
+  }
+  
+  u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
+  u8g.print(pre_char == '>' ? ' ' : pre_char);  // Row selector is obsolete
+
+  while((c = pgm_read_byte(pstr))) {
+    u8g.print(c);
+    pstr++;
+    n--;
+  }
+  while(n--) u8g.print(' ');
+  
+  u8g.print(post_char);
+  u8g.print(' ');
+  u8g.setColorIndex(1);  // restore settings to black on white
 }
 
 static void _drawmenu_setting_edit_generic(uint8_t row, const char* pstr, char pre_char, const char* data, bool pgm) {
   char c;
   uint8_t n = LCD_WIDTH - 1 - 2 - (pgm ? strlen_P(data) : strlen(data));
-		
+
   u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
   u8g.print(pre_char);
 
@@ -391,14 +367,13 @@ static void _drawmenu_setting_edit_generic(uint8_t row, const char* pstr, char p
 #define lcd_implementation_drawmenu_setting_edit_callback_bool_selected(row, pstr, pstr2, data, callback) lcd_implementation_drawmenu_setting_edit_generic_P(row, pstr, '>', (*(data))?PSTR(MSG_ON):PSTR(MSG_OFF))
 #define lcd_implementation_drawmenu_setting_edit_callback_bool(row, pstr, pstr2, data, callback) lcd_implementation_drawmenu_setting_edit_generic_P(row, pstr, ' ', (*(data))?PSTR(MSG_ON):PSTR(MSG_OFF))
 
-void lcd_implementation_drawedit(const char* pstr, char* value)
-{
-		u8g.setPrintPos(0 * DOG_CHAR_WIDTH_LARGE, (u8g.getHeight() - 1 - DOG_CHAR_HEIGHT_LARGE) - (1 * DOG_CHAR_HEIGHT_LARGE) - START_ROW );
-		u8g.setFont(u8g_font_9x18);
-		lcd_printPGM(pstr);
-		u8g.print(':');
-		u8g.setPrintPos((14 - strlen(value)) * DOG_CHAR_WIDTH_LARGE, (u8g.getHeight() - 1 - DOG_CHAR_HEIGHT_LARGE) - (1 * DOG_CHAR_HEIGHT_LARGE) - START_ROW );
-		u8g.print(value);
+void lcd_implementation_drawedit(const char* pstr, char* value) {
+  u8g.setPrintPos(0 * DOG_CHAR_WIDTH_LARGE, (u8g.getHeight() - 1 - DOG_CHAR_HEIGHT_LARGE) - (1 * DOG_CHAR_HEIGHT_LARGE) - START_ROW );
+  u8g.setFont(u8g_font_9x18);
+  lcd_printPGM(pstr);
+  u8g.print(':');
+  u8g.setPrintPos((14 - strlen(value)) * DOG_CHAR_WIDTH_LARGE, (u8g.getHeight() - 1 - DOG_CHAR_HEIGHT_LARGE) - (1 * DOG_CHAR_HEIGHT_LARGE) - START_ROW );
+  u8g.print(value);
 }
 
 static void _drawmenu_sd(uint8_t row, const char* pstr, const char* filename, char * const longFilename, bool isDir, bool isSelected) {
@@ -417,7 +392,7 @@ static void _drawmenu_sd(uint8_t row, const char* pstr, const char* filename, ch
   }
 
   u8g.setPrintPos(0 * DOG_CHAR_WIDTH, (row + 1) * DOG_CHAR_HEIGHT);
-  u8g.print(' ');	// Indent by 1 char
+  u8g.print(' '); // Indent by 1 char
 
   if (isDir) u8g.print(LCD_STR_FOLDER[0]);
 
@@ -445,20 +420,16 @@ static void _drawmenu_sd(uint8_t row, const char* pstr, const char* filename, ch
 #define lcd_implementation_drawmenu_function_selected(row, pstr, data) lcd_implementation_drawmenu_generic(row, pstr, '>', ' ')
 #define lcd_implementation_drawmenu_function(row, pstr, data) lcd_implementation_drawmenu_generic(row, pstr, ' ', ' ')
 
-static void lcd_implementation_quick_feedback()
-{
-
-#if BEEPER > -1
+static void lcd_implementation_quick_feedback() {
+  #if BEEPER > -1
     SET_OUTPUT(BEEPER);
-    for(int8_t i=0;i<10;i++)
-    {
-		WRITE(BEEPER,HIGH);
-		delay(3);
-		WRITE(BEEPER,LOW);
-		delay(3);
+    for(int8_t i=0; i<10; i++) {
+      WRITE(BEEPER,HIGH);
+      delay(3);
+      WRITE(BEEPER,LOW);
+      delay(3);
     }
-#endif
+  #endif
 }
-#endif//ULTRA_LCD_IMPLEMENTATION_DOGM_H
-
 
+#endif //__DOGM_LCD_IMPLEMENTATION_H
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index f380d45..db9073e 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -196,7 +196,7 @@ static void lcd_goto_menu(menuFunc_t menu, const uint32_t encoder=0, const bool
     if (feedback) lcd_quick_feedback();
 
     // For LCD_PROGRESS_BAR re-initialize the custom characters
-    #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT)
+    #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT) && !defined(DOGLCD)
       lcd_set_custom_characters(menu == lcd_status_screen);
     #endif
   }
@@ -205,7 +205,7 @@ static void lcd_goto_menu(menuFunc_t menu, const uint32_t encoder=0, const bool
 /* Main status screen. It's up to the implementation specific part to show what is needed. As this is very display dependent */
 static void lcd_status_screen()
 {
-  #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT)
+  #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT) && !defined(DOGLCD)
     uint16_t mil = millis();
     #ifndef PROGRESS_MSG_ONCE
       if (mil > progressBarTick + PROGRESS_BAR_MSG_TIME + PROGRESS_BAR_BAR_TIME) {
@@ -237,11 +237,12 @@ static void lcd_status_screen()
         lcd_status_update_delay--;
     else
         lcdDrawUpdate = 1;
-    if (lcdDrawUpdate)
-    {
+
+    if (lcdDrawUpdate) {
         lcd_implementation_status_screen();
         lcd_status_update_delay = 10;   /* redraw the main screen every second. This is easier then trying keep track of all things that change on the screen */
     }
+
 #ifdef ULTIPANEL
 
     bool current_click = LCD_CLICKED;
@@ -266,7 +267,7 @@ static void lcd_status_screen()
     {
         lcd_goto_menu(lcd_main_menu);
         lcd_implementation_init( // to maybe revive the LCD if static electricity killed it.
-          #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT)
+          #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT) && !defined(DOGLCD)
             currentMenu == lcd_status_screen
           #endif
         );
@@ -1216,7 +1217,7 @@ void lcd_update()
         lcdDrawUpdate = 2;
         lcd_oldcardstatus = IS_SD_INSERTED;
         lcd_implementation_init( // to maybe revive the LCD if static electricity killed it.
-          #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT)
+          #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT) && !defined(DOGLCD)
             currentMenu == lcd_status_screen
           #endif
         );
@@ -1319,7 +1320,7 @@ void lcd_finishstatus() {
     }
   }
   lcd_status_message[LCD_WIDTH] = '\0';
-  #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT)
+  #if defined(LCD_PROGRESS_BAR) && defined(SDSUPPORT) && !defined(DOGLCD)
     #if PROGRESS_MSG_EXPIRE > 0
       messageTick =
     #endif
diff --git a/Marlin/ultralcd.h b/Marlin/ultralcd.h
index a175f4a..30175be 100644
--- a/Marlin/ultralcd.h
+++ b/Marlin/ultralcd.h
@@ -49,7 +49,7 @@
   #ifdef FILAMENT_LCD_DISPLAY
         extern unsigned long message_millis;
   #endif
-    
+
   void lcd_buzz(long duration,uint16_t freq);
   bool lcd_clicked();
 

commit 0877aa0fe05e390df3694e0f8530f3ad166e7bd7 (from 1d4af4649636c462ddca5979409f686d380da3c3)
Merge: 7d32c7f 1d4af46
Author: grob6000 <grobinson6000@gmail.com>
Date:   Sun Jan 11 11:32:58 2015 +1100

    Merge remote-tracking branch 'upstream/Development' into independent_pid

diff --git a/Marlin/ConfigurationStore.cpp b/Marlin/ConfigurationStore.cpp
index 8e4a328..d0fdde7 100644
--- a/Marlin/ConfigurationStore.cpp
+++ b/Marlin/ConfigurationStore.cpp
@@ -38,7 +38,7 @@ void _EEPROM_readData(int &pos, uint8_t* value, uint8_t size)
 // wrong data being written to the variables.
 // ALSO:  always make sure the variables in the Store and retrieve sections are in the same order.
 
-#define EEPROM_VERSION "V13"
+#define EEPROM_VERSION "V14"
 
 #ifdef EEPROM_SETTINGS
 void Config_StoreSettings() 
@@ -63,11 +63,11 @@ void Config_StoreSettings()
   EEPROM_WRITE_VAR(i,delta_radius);
   EEPROM_WRITE_VAR(i,delta_diagonal_rod);
   EEPROM_WRITE_VAR(i,delta_segments_per_second);
-  #endif
+  #endif//DELTA
   #ifndef ULTIPANEL
   int plaPreheatHotendTemp = PLA_PREHEAT_HOTEND_TEMP, plaPreheatHPBTemp = PLA_PREHEAT_HPB_TEMP, plaPreheatFanSpeed = PLA_PREHEAT_FAN_SPEED;
   int absPreheatHotendTemp = ABS_PREHEAT_HOTEND_TEMP, absPreheatHPBTemp = ABS_PREHEAT_HPB_TEMP, absPreheatFanSpeed = ABS_PREHEAT_FAN_SPEED;
-  #endif
+  #endif//ULTIPANEL
   EEPROM_WRITE_VAR(i,plaPreheatHotendTemp);
   EEPROM_WRITE_VAR(i,plaPreheatHPBTemp);
   EEPROM_WRITE_VAR(i,plaPreheatFanSpeed);
@@ -76,37 +76,58 @@ void Config_StoreSettings()
   EEPROM_WRITE_VAR(i,absPreheatFanSpeed);
   EEPROM_WRITE_VAR(i,zprobe_zoffset);
   #ifdef PIDTEMP
-    EEPROM_WRITE_VAR(i,Kp);
-    EEPROM_WRITE_VAR(i,Ki);
-    EEPROM_WRITE_VAR(i,Kd);
-  #else
+    float dummy = 0.0f;
+    for (int e = 0; e < 3; e++)
+	{
+	  if (e < EXTRUDERS)
+	  {
+        EEPROM_WRITE_VAR(i,Kp[e]);
+        EEPROM_WRITE_VAR(i,Ki[e]);
+        EEPROM_WRITE_VAR(i,Kd[e]);
+        #ifdef PID_ADD_EXTRUSION_RATE
+        EEPROM_WRITE_VAR(i,Kc[e]);
+        #else//PID_ADD_EXTRUSION_RATE
+		dummy = 1.0f; // 1.0 = default kc
+	    EEPROM_WRITE_VAR(dummmy);
+        #endif//PID_ADD_EXTRUSION_RATE
+	  }
+	  else
+	  {
+		dummy = 3000.0f;
+	    EEPROM_WRITE_VAR(i, dummy);
+		dummy = 0.0f;
+        EEPROM_WRITE_VAR(i,dummy);
+        EEPROM_WRITE_VAR(i,dummy);
+	  }
+	}
+  #else//PIDTEMP
 		float dummy = 3000.0f;
     EEPROM_WRITE_VAR(i,dummy);
 		dummy = 0.0f;
     EEPROM_WRITE_VAR(i,dummy);
     EEPROM_WRITE_VAR(i,dummy);
-  #endif
+  #endif//PIDTEMP
   #ifndef DOGLCD
     int lcd_contrast = 32;
-  #endif
+  #endif//DOGLCD
   EEPROM_WRITE_VAR(i,lcd_contrast);
   #ifdef SCARA
   EEPROM_WRITE_VAR(i,axis_scaling);        // Add scaling for SCARA
-  #endif
+  #endif//SCARA
   #ifdef FWRETRACT
   EEPROM_WRITE_VAR(i,autoretract_enabled);
   EEPROM_WRITE_VAR(i,retract_length);
   #if EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_length_swap);
-  #endif
+  #endif//EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_feedrate);
   EEPROM_WRITE_VAR(i,retract_zlift);
   EEPROM_WRITE_VAR(i,retract_recover_length);
   #if EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_recover_length_swap);
-  #endif
+  #endif//EXTRUDERS > 1
   EEPROM_WRITE_VAR(i,retract_recover_feedrate);
-  #endif
+  #endif//FWRETRACT
 
   // Save filament sizes
   EEPROM_WRITE_VAR(i, volumetric_enabled);
@@ -115,8 +136,8 @@ void Config_StoreSettings()
   EEPROM_WRITE_VAR(i, filament_size[1]);
   #if EXTRUDERS > 2
   EEPROM_WRITE_VAR(i, filament_size[2]);
-  #endif
-  #endif
+  #endif//EXTRUDERS > 2
+  #endif//EXTRUDERS > 1
   
   char ver2[4]=EEPROM_VERSION;
   i=EEPROM_OFFSET;
@@ -149,7 +170,7 @@ SERIAL_ECHOLNPGM("Scaling factors:");
     SERIAL_ECHOLN("");
       
     SERIAL_ECHO_START;
-#endif
+#endif//SCARA
     SERIAL_ECHOLNPGM("Maximum feedrates (mm/s):");
     SERIAL_ECHO_START;
     SERIAL_ECHOPAIR("  M203 X", max_feedrate[X_AXIS]);
@@ -206,16 +227,16 @@ SERIAL_ECHOLNPGM("Scaling factors:");
 	SERIAL_ECHOPAIR(" R" ,delta_radius );
 	SERIAL_ECHOPAIR(" S" ,delta_segments_per_second );
 	SERIAL_ECHOLN("");
-#endif
+#endif//DELTA
 #ifdef PIDTEMP
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("PID settings:");
-    SERIAL_ECHO_START;
-    SERIAL_ECHOPAIR("   M301 P",Kp); 
-    SERIAL_ECHOPAIR(" I" ,unscalePID_i(Ki)); 
-    SERIAL_ECHOPAIR(" D" ,unscalePID_d(Kd));
+	SERIAL_ECHO_START;
+    SERIAL_ECHOPAIR("   M301 P", Kp[0]); // for compatibility with hosts, only echos values for E0
+    SERIAL_ECHOPAIR(" I" ,unscalePID_i(Ki[0])); 
+    SERIAL_ECHOPAIR(" D" ,unscalePID_d(Kd[0]));  
     SERIAL_ECHOLN(""); 
-#endif
+#endif//PIDTEMP
 #ifdef FWRETRACT
     SERIAL_ECHO_START;
     SERIAL_ECHOLNPGM("Retract: S=Length (mm) F:Speed (mm/m) Z: ZLift (mm)");
@@ -244,7 +265,7 @@ SERIAL_ECHOLNPGM("Scaling factors:");
     SERIAL_ECHO_START;
     SERIAL_ECHOPAIR("   Swap rec. addl. length (mm): ", retract_recover_length_swap);
     SERIAL_ECHOLN("");
-#endif
+#endif//EXTRUDERS > 1
     SERIAL_ECHO_START;
     if (volumetric_enabled) {
         SERIAL_ECHOLNPGM("Filament settings:");
@@ -259,14 +280,14 @@ SERIAL_ECHOLNPGM("Scaling factors:");
 		SERIAL_ECHO_START;
         SERIAL_ECHOPAIR("   M200 T2 D", filament_size[2]);
 		SERIAL_ECHOLN("");
-#endif
-#endif
+#endif//EXTRUDERS > 2
+#endif//EXTRUDERS > 1
     } else {
         SERIAL_ECHOLNPGM("Filament settings: Disabled");
     }
-#endif
+#endif//FWRETRACT
 }
-#endif
+#endif//DISABLE_M503
 
 
 #ifdef EEPROM_SETTINGS
@@ -301,11 +322,11 @@ void Config_RetrieveSettings()
 		EEPROM_READ_VAR(i,delta_radius);
 		EEPROM_READ_VAR(i,delta_diagonal_rod);
 		EEPROM_READ_VAR(i,delta_segments_per_second);
-        #endif
+        #endif//DELTA
         #ifndef ULTIPANEL
         int plaPreheatHotendTemp, plaPreheatHPBTemp, plaPreheatFanSpeed;
         int absPreheatHotendTemp, absPreheatHPBTemp, absPreheatFanSpeed;
-        #endif
+        #endif//ULTIPANEL
         EEPROM_READ_VAR(i,plaPreheatHotendTemp);
         EEPROM_READ_VAR(i,plaPreheatHPBTemp);
         EEPROM_READ_VAR(i,plaPreheatFanSpeed);
@@ -313,35 +334,68 @@ void Config_RetrieveSettings()
         EEPROM_READ_VAR(i,absPreheatHPBTemp);
         EEPROM_READ_VAR(i,absPreheatFanSpeed);
         EEPROM_READ_VAR(i,zprobe_zoffset);
-        #ifndef PIDTEMP
-        float Kp,Ki,Kd;
-        #endif
-        // do not need to scale PID values as the values in EEPROM are already scaled		
-        EEPROM_READ_VAR(i,Kp);
-        EEPROM_READ_VAR(i,Ki);
-        EEPROM_READ_VAR(i,Kd);
+        #ifdef PIDTEMP
+		float dummy = 0.0f;
+		for (int e = 0; e < 3; e++) // 3 = max extruders supported by marlin
+		{
+		  if (e < EXTRUDERS)
+		  {
+		    // do not need to scale PID values as the values in EEPROM are already scaled			  
+            EEPROM_READ_VAR(i,Kp[e]);
+            EEPROM_READ_VAR(i,Ki[e]);
+		    EEPROM_READ_VAR(i,Kd[e]);
+#ifdef PID_ADD_EXTRUSION_RATE
+            EEPROM_READ_VAR(i,Kc[e]);
+#else//PID_ADD_EXTRUSION_RATE
+	        EEPROM_READ_VAR(i,dummy);
+#endif//PID_ADD_EXTRUSION_RATE
+		  }
+		  else
+		  {
+			EEPROM_READ_VAR(i,dummy);
+			EEPROM_READ_VAR(i,dummy);
+			EEPROM_READ_VAR(i,dummy);
+			EEPROM_READ_VAR(i,dummy);
+		  }
+		}
+		#else//PIDTEMP
+		// 4 x 3 = 12 slots for PID parameters
+		float dummy = 0.0f;
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);
+		EEPROM_READ_VAR(i,dummy);			
+		#endif//PIDTEMP
         #ifndef DOGLCD
         int lcd_contrast;
-        #endif
+        #endif//DOGLCD
         EEPROM_READ_VAR(i,lcd_contrast);
 		#ifdef SCARA
 		EEPROM_READ_VAR(i,axis_scaling);
-		#endif
+		#endif//SCARA
 
 		#ifdef FWRETRACT
 		EEPROM_READ_VAR(i,autoretract_enabled);
 		EEPROM_READ_VAR(i,retract_length);
 		#if EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_length_swap);
-		#endif
+		#endif//EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_feedrate);
 		EEPROM_READ_VAR(i,retract_zlift);
 		EEPROM_READ_VAR(i,retract_recover_length);
 		#if EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_recover_length_swap);
-		#endif
+		#endif//EXTRUDERS > 1
 		EEPROM_READ_VAR(i,retract_recover_feedrate);
-		#endif
+		#endif//FWRETRACT
 
 		EEPROM_READ_VAR(i, volumetric_enabled);
 		EEPROM_READ_VAR(i, filament_size[0]);
@@ -349,8 +403,8 @@ void Config_RetrieveSettings()
 		EEPROM_READ_VAR(i, filament_size[1]);
 #if EXTRUDERS > 2
 		EEPROM_READ_VAR(i, filament_size[2]);
-#endif
-#endif
+#endif//EXTRUDERS > 2
+#endif//EXTRUDERS > 1
 		calculate_volumetric_multipliers();
 		// Call updatePID (similar to when we have processed M301)
 		updatePID();
@@ -363,9 +417,9 @@ void Config_RetrieveSettings()
     }
     #ifdef EEPROM_CHITCHAT
       Config_PrintSettings();
-    #endif
+    #endif//EEPROM_CHITCHAT
 }
-#endif
+#endif//EEPROM_SETTINGS
 
 void Config_ResetDefault()
 {
@@ -379,7 +433,7 @@ void Config_ResetDefault()
         max_acceleration_units_per_sq_second[i]=tmp3[i];
 		#ifdef SCARA
 		axis_scaling[i]=1;
-		#endif
+		#endif//SCARA
     }
     
     // steps per sq second need to be updated to agree with the units per sq second
@@ -400,7 +454,7 @@ void Config_ResetDefault()
 	delta_diagonal_rod= DELTA_DIAGONAL_ROD;
 	delta_segments_per_second= DELTA_SEGMENTS_PER_SECOND;
 	recalc_delta_settings(delta_radius, delta_diagonal_rod);
-#endif
+#endif//DELTA
 #ifdef ULTIPANEL
     plaPreheatHotendTemp = PLA_PREHEAT_HOTEND_TEMP;
     plaPreheatHPBTemp = PLA_PREHEAT_HPB_TEMP;
@@ -408,24 +462,25 @@ void Config_ResetDefault()
     absPreheatHotendTemp = ABS_PREHEAT_HOTEND_TEMP;
     absPreheatHPBTemp = ABS_PREHEAT_HPB_TEMP;
     absPreheatFanSpeed = ABS_PREHEAT_FAN_SPEED;
-#endif
+#endif//ULTIPANEL
 #ifdef ENABLE_AUTO_BED_LEVELING
     zprobe_zoffset = -Z_PROBE_OFFSET_FROM_EXTRUDER;
-#endif
+#endif//ENABLE_AUTO_BED_LEVELING
 #ifdef DOGLCD
     lcd_contrast = DEFAULT_LCD_CONTRAST;
-#endif
+#endif//DOGLCD
 #ifdef PIDTEMP
-    Kp = DEFAULT_Kp;
-    Ki = scalePID_i(DEFAULT_Ki);
-    Kd = scalePID_d(DEFAULT_Kd);
-    
-    // call updatePID (similar to when we have processed M301)
-    updatePID();
-    
+	for (int e = 0; e < EXTRUDERS; e++)
+	{
+      Kp[e] = DEFAULT_Kp;
+      Ki[e] = scalePID_i(DEFAULT_Ki);
+      Kd[e] = scalePID_d(DEFAULT_Kd);
 #ifdef PID_ADD_EXTRUSION_RATE
-    Kc = DEFAULT_Kc;
+      Kc[e] = DEFAULT_Kc;
 #endif//PID_ADD_EXTRUSION_RATE
+    }
+    // call updatePID (similar to when we have processed M301)
+    updatePID();
 #endif//PIDTEMP
 
 #ifdef FWRETRACT
@@ -433,15 +488,15 @@ void Config_ResetDefault()
 	retract_length = RETRACT_LENGTH;
 #if EXTRUDERS > 1
 	retract_length_swap = RETRACT_LENGTH_SWAP;
-#endif
+#endif//EXTRUDERS > 1
 	retract_feedrate = RETRACT_FEEDRATE;
 	retract_zlift = RETRACT_ZLIFT;
 	retract_recover_length = RETRACT_RECOVER_LENGTH;
 #if EXTRUDERS > 1
 	retract_recover_length_swap = RETRACT_RECOVER_LENGTH_SWAP;
-#endif
+#endif//EXTRUDERS > 1
 	retract_recover_feedrate = RETRACT_RECOVER_FEEDRATE;
-#endif
+#endif//FWRETRACT
 
 	volumetric_enabled = false;
 	filament_size[0] = DEFAULT_NOMINAL_FILAMENT_DIA;
@@ -449,11 +504,11 @@ void Config_ResetDefault()
 	filament_size[1] = DEFAULT_NOMINAL_FILAMENT_DIA;
 #if EXTRUDERS > 2
 	filament_size[2] = DEFAULT_NOMINAL_FILAMENT_DIA;
-#endif
-#endif
+#endif//EXTRUDERS > 2
+#endif//EXTRUDERS > 1
 	calculate_volumetric_multipliers();
 
 SERIAL_ECHO_START;
 SERIAL_ECHOLNPGM("Hardcoded Default Settings Loaded");
 
-}
+}
\ No newline at end of file
diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 0862e1f..203f52c 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -3196,30 +3196,50 @@ Sigma_Exit:
     #endif // M300
 
     #ifdef PIDTEMP
-    case 301: // M301
-      {
-        if(code_seen('P')) Kp = code_value();
-        if(code_seen('I')) Ki = scalePID_i(code_value());
-        if(code_seen('D')) Kd = scalePID_d(code_value());
+	case 301: // M301
+	{
 
-        #ifdef PID_ADD_EXTRUSION_RATE
-        if(code_seen('C')) Kc = code_value();
-        #endif
+		// multi-extruder PID patch: M301 updates or prints a single extruder's PID values
+		// default behaviour (omitting E parameter) is to update for extruder 0 only
+		int e = 0; // extruder being updated
+		if (code_seen('E'))
+		{
+			e = (int)code_value();
+		}
+		if (e < EXTRUDERS) // catch bad input value
+		{
+
+			if (code_seen('P')) Kp[e] = code_value();
+			if (code_seen('I')) Ki[e] = scalePID_i(code_value());
+			if (code_seen('D')) Kd[e] = scalePID_d(code_value());
+			#ifdef PID_ADD_EXTRUSION_RATE
+			if (code_seen('C')) Kc[e] = code_value();
+			#endif			
+
+			updatePID();
+			SERIAL_PROTOCOL(MSG_OK);
+			SERIAL_PROTOCOL(" e:"); // specify extruder in serial output
+			SERIAL_PROTOCOL(e);
+			SERIAL_PROTOCOL(" p:");
+			SERIAL_PROTOCOL(Kp[e]);
+			SERIAL_PROTOCOL(" i:");
+			SERIAL_PROTOCOL(unscalePID_i(Ki[e]));
+			SERIAL_PROTOCOL(" d:");
+			SERIAL_PROTOCOL(unscalePID_d(Kd[e]));
+			#ifdef PID_ADD_EXTRUSION_RATE
+			SERIAL_PROTOCOL(" c:");
+			//Kc does not have scaling applied above, or in resetting defaults
+			SERIAL_PROTOCOL(Kc[e]);
+			#endif
+			SERIAL_PROTOCOLLN("");
+		
+		}
+		else
+		{
+			SERIAL_ECHO_START;
+			SERIAL_ECHOLN(MSG_INVALID_EXTRUDER);
+		}
 
-        updatePID();
-        SERIAL_PROTOCOL(MSG_OK);
-        SERIAL_PROTOCOL(" p:");
-        SERIAL_PROTOCOL(Kp);
-        SERIAL_PROTOCOL(" i:");
-        SERIAL_PROTOCOL(unscalePID_i(Ki));
-        SERIAL_PROTOCOL(" d:");
-        SERIAL_PROTOCOL(unscalePID_d(Kd));
-        #ifdef PID_ADD_EXTRUSION_RATE
-        SERIAL_PROTOCOL(" c:");
-        //Kc does not have scaling applied above, or in resetting defaults
-        SERIAL_PROTOCOL(Kc);
-        #endif
-        SERIAL_PROTOCOLLN("");
       }
       break;
     #endif //PIDTEMP
diff --git a/Marlin/language_ca.h b/Marlin/language_ca.h
index ba5d371..db0e802 100644
--- a/Marlin/language_ca.h
+++ b/Marlin/language_ca.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_de.h b/Marlin/language_de.h
index e442448..a019290 100644
--- a/Marlin/language_de.h
+++ b/Marlin/language_de.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Acc"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_en.h b/Marlin/language_en.h
index 014b42e..ecf87fc 100644
--- a/Marlin/language_en.h
+++ b/Marlin/language_en.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_es.h b/Marlin/language_es.h
index 064c770..8f5fb73 100644
--- a/Marlin/language_es.h
+++ b/Marlin/language_es.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Acel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_eu.h b/Marlin/language_eu.h
index 7e65ca5..6696254 100644
--- a/Marlin/language_eu.h
+++ b/Marlin/language_eu.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Azelerazioa"
 #define MSG_VXY_JERK                        "Vxy-astindua"
 #define MSG_VZ_JERK                         "Vz-astindua"
diff --git a/Marlin/language_fi.h b/Marlin/language_fi.h
index 0b1ac9c..c04637d 100644
--- a/Marlin/language_fi.h
+++ b/Marlin/language_fi.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Kiihtyv"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_fr.h b/Marlin/language_fr.h
index 59066b1..29922c3 100644
--- a/Marlin/language_fr.h
+++ b/Marlin/language_fr.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_it.h b/Marlin/language_it.h
index cb7dc46..d7abee4 100644
--- a/Marlin/language_it.h
+++ b/Marlin/language_it.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Accel."
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_nl.h b/Marlin/language_nl.h
index e9dc380..77e256e 100644
--- a/Marlin/language_nl.h
+++ b/Marlin/language_nl.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Versn"
 #define MSG_VXY_JERK                        "Vxy-jerk"
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_pl.h b/Marlin/language_pl.h
index 55ec20e..8992097 100644
--- a/Marlin/language_pl.h
+++ b/Marlin/language_pl.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_PID_P1                          "PID-P E2"
+#define MSG_PID_I1                          "PID-I E2"
+#define MSG_PID_D1                          "PID-D E2"
+#define MSG_PID_C1                          "PID-C E2"
+#define MSG_PID_P2                          "PID-P E3"
+#define MSG_PID_I2                          "PID-I E3"
+#define MSG_PID_D2                          "PID-D E3"
+#define MSG_PID_C2                          "PID-C E3"
 #define MSG_ACC                             "Przyspieszenie"
 #define MSG_VXY_JERK                        "Zryw Vxy"
 #define MSG_VZ_JERK                         "Zryw Vz"
diff --git a/Marlin/language_pt.h b/Marlin/language_pt.h
index 09e3467..473bed3 100644
--- a/Marlin/language_pt.h
+++ b/Marlin/language_pt.h
@@ -67,6 +67,14 @@
 #define MSG_PID_I                           "PID-I: "
 #define MSG_PID_D                           "PID-D: "
 #define MSG_PID_C                           "PID-C: "
+#define MSG_PID_P1                          "PID-P E2: "
+#define MSG_PID_I1                          "PID-I E2: "
+#define MSG_PID_D1                          "PID-D E2: "
+#define MSG_PID_C1                          "PID-C E2: "
+#define MSG_PID_P2                          "PID-P E3: "
+#define MSG_PID_I2                          "PID-I E3: "
+#define MSG_PID_D2                          "PID-D E3: "
+#define MSG_PID_C2                          "PID-C E3: "
 #define MSG_ACC                             "Acc:"
 #define MSG_VXY_JERK                        "Vxy-jerk: "
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/language_ru.h b/Marlin/language_ru.h
index ec666f1..87c5b1d 100644
--- a/Marlin/language_ru.h
+++ b/Marlin/language_ru.h
@@ -69,6 +69,14 @@
 #define MSG_PID_I                           "PID-I: "
 #define MSG_PID_D                           "PID-D: "
 #define MSG_PID_C                           "PID-C: "
+#define MSG_PID_P1                          "PID-P E2: "
+#define MSG_PID_I1                          "PID-I E2: "
+#define MSG_PID_D1                          "PID-D E2: "
+#define MSG_PID_C1                          "PID-C E2: "
+#define MSG_PID_P2                          "PID-P E3: "
+#define MSG_PID_I2                          "PID-I E3: "
+#define MSG_PID_D2                          "PID-D E3: "
+#define MSG_PID_C2                          "PID-C E3: "
 #define MSG_ACC                             "Acc:"
 #define MSG_VXY_JERK                        "Vxy-jerk: "
 #define MSG_VZ_JERK                         "Vz-jerk"
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index 8bdb764..6d6107a 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -50,14 +50,6 @@ float current_temperature_bed = 0.0;
   int redundant_temperature_raw = 0;
   float redundant_temperature = 0.0;
 #endif
-#ifdef PIDTEMP
-  float Kp=DEFAULT_Kp;
-  float Ki=(DEFAULT_Ki*PID_dT);
-  float Kd=(DEFAULT_Kd/PID_dT);
-  #ifdef PID_ADD_EXTRUSION_RATE
-    float Kc=DEFAULT_Kc;
-  #endif
-#endif //PIDTEMP
 
 #ifdef PIDTEMPBED
   float bedKp=DEFAULT_bedKp;
@@ -133,6 +125,15 @@ static volatile bool temp_meas_ready = false;
   # define ARRAY_BY_EXTRUDERS(v1, v2, v3) { v1 }
 #endif
 
+#ifdef PIDTEMP
+  float Kp[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Kp, DEFAULT_Kp, DEFAULT_Kp);
+  float Ki[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Ki*PID_dT, DEFAULT_Ki*PID_dT, DEFAULT_Ki*PID_dT);
+  float Kd[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Kd / PID_dT, DEFAULT_Kd / PID_dT, DEFAULT_Kd / PID_dT);
+#ifdef PID_ADD_EXTRUSION_RATE
+  float Kc[EXTRUDERS] = ARRAY_BY_EXTRUDERS(DEFAULT_Kc, DEFAULT_Kc, DEFAULT_Kc);
+#endif
+#endif //PIDTEMP
+
 // Init min and max temp with extreme values to prevent false errors during startup
 static int minttemp_raw[EXTRUDERS] = ARRAY_BY_EXTRUDERS( HEATER_0_RAW_LO_TEMP , HEATER_1_RAW_LO_TEMP , HEATER_2_RAW_LO_TEMP );
 static int maxttemp_raw[EXTRUDERS] = ARRAY_BY_EXTRUDERS( HEATER_0_RAW_HI_TEMP , HEATER_1_RAW_HI_TEMP , HEATER_2_RAW_HI_TEMP );
@@ -342,7 +343,7 @@ void updatePID()
 {
 #ifdef PIDTEMP
   for(int e = 0; e < EXTRUDERS; e++) { 
-     temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / Ki;  
+     temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / Ki[e];  
   }
 #endif
 #ifdef PIDTEMPBED
@@ -463,14 +464,14 @@ void manage_heater()
             temp_iState[e] = 0.0;
             pid_reset[e] = false;
           }
-          pTerm[e] = Kp * pid_error[e];
+          pTerm[e] = Kp[e] * pid_error[e];
           temp_iState[e] += pid_error[e];
           temp_iState[e] = constrain(temp_iState[e], temp_iState_min[e], temp_iState_max[e]);
-          iTerm[e] = Ki * temp_iState[e];
+          iTerm[e] = Ki[e] * temp_iState[e];
 
           //K1 defined in Configuration.h in the PID settings
           #define K2 (1.0-K1)
-          dTerm[e] = (Kd * (pid_input - temp_dState[e]))*K2 + (K1 * dTerm[e]);
+          dTerm[e] = (Kd[e] * (pid_input - temp_dState[e]))*K2 + (K1 * dTerm[e]);
           pid_output = pTerm[e] + iTerm[e] - dTerm[e];
           if (pid_output > PID_MAX) {
             if (pid_error[e] > 0 )  temp_iState[e] -= pid_error[e]; // conditional un-integration
@@ -810,7 +811,7 @@ void tp_init()
     maxttemp[e] = maxttemp[0];
 #ifdef PIDTEMP
     temp_iState_min[e] = 0.0;
-    temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / Ki;
+    temp_iState_max[e] = PID_INTEGRAL_DRIVE_MAX / Ki[e];
 #endif //PIDTEMP
 #ifdef PIDTEMPBED
     temp_iState_min_bed = 0.0;
diff --git a/Marlin/temperature.h b/Marlin/temperature.h
index 95c3514..1c76019 100644
--- a/Marlin/temperature.h
+++ b/Marlin/temperature.h
@@ -58,7 +58,7 @@ extern float current_temperature_bed;
 #endif
 
 #ifdef PIDTEMP
-  extern float Kp,Ki,Kd,Kc;
+  extern float Kp[EXTRUDERS], Ki[EXTRUDERS], Kd[EXTRUDERS], Kc[EXTRUDERS];
   float scalePID_i(float i);
   float scalePID_d(float d);
   float unscalePID_i(float i);
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 13d4f3f..db9073e 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -185,8 +185,9 @@ void* editValue;
 int32_t minEditValue, maxEditValue;
 menuFunc_t callbackFunc;
 
-// place-holders for Ki and Kd edits
+// place-holders for Ki and Kd edits, and the extruder # being edited
 float raw_Ki, raw_Kd;
+int pid_current_extruder;
 
 static void lcd_goto_menu(menuFunc_t menu, const uint32_t encoder=0, const bool feedback=true) {
   if (currentMenu != menu) {
@@ -765,12 +766,6 @@ static void lcd_control_menu()
 
 static void lcd_control_temperature_menu()
 {
-#ifdef PIDTEMP
-    // set up temp variables - undo the default scaling
-    raw_Ki = unscalePID_i(Ki);
-    raw_Kd = unscalePID_d(Kd);
-#endif
-
     START_MENU();
     MENU_ITEM(back, MSG_CONTROL, lcd_control_menu);
 #if TEMP_SENSOR_0 != 0
@@ -793,13 +788,43 @@ static void lcd_control_temperature_menu()
     MENU_ITEM_EDIT(float32, MSG_FACTOR, &autotemp_factor, 0.0, 1.0);
 #endif
 #ifdef PIDTEMP
-    MENU_ITEM_EDIT(float52, MSG_PID_P, &Kp, 1, 9990);
-    // i is typically a small value so allows values below 1
-    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
-    MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+	// set up temp variables - undo the default scaling
+	pid_current_extruder = 0;
+	raw_Ki = unscalePID_i(Ki[0]);
+	raw_Kd = unscalePID_d(Kd[0]);
+	MENU_ITEM_EDIT(float52, MSG_PID_P, &Kp[0], 1, 9990);
+	// i is typically a small value so allows values below 1
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D, &raw_Kd, 1, 9990, copy_and_scalePID_d);
 # ifdef PID_ADD_EXTRUSION_RATE
-    MENU_ITEM_EDIT(float3, MSG_PID_C, &Kc, 1, 9990);
+	MENU_ITEM_EDIT(float3, MSG_PID_C, &Kc[0], 1, 9990);
 # endif//PID_ADD_EXTRUSION_RATE
+#if EXTRUDERS > 1
+	// set up temp variables - undo the default scaling
+	pid_current_extruder = 1;
+	raw_Ki = unscalePID_i(Ki[1]);
+	raw_Kd = unscalePID_d(Kd[1]);
+	MENU_ITEM_EDIT(float52, MSG_PID_P1, &Kp[1], 1, 9990);
+	// i is typically a small value so allows values below 1
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I1, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D1, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+# ifdef PID_ADD_EXTRUSION_RATE
+	MENU_ITEM_EDIT(float3, MSG_PID_C1, &Kc[1], 1, 9990);
+# endif//PID_ADD_EXTRUSION_RATE	
+#endif//EXTRUDERS > 1
+#if EXTRUDERS > 2
+	// set up temp variables - undo the default scaling
+	pid_current_extruder = 2;
+	raw_Ki = unscalePID_i(Ki[2]);
+	raw_Kd = unscalePID_d(Kd[2]);
+	MENU_ITEM_EDIT(float52, MSG_PID_P2, &Kp[2], 1, 9990);
+	// i is typically a small value so allows values below 1
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_I2, &raw_Ki, 0.01, 9990, copy_and_scalePID_i);
+	MENU_ITEM_EDIT_CALLBACK(float52, MSG_PID_D2, &raw_Kd, 1, 9990, copy_and_scalePID_d);
+# ifdef PID_ADD_EXTRUSION_RATE
+	MENU_ITEM_EDIT(float3, MSG_PID_C2, &Kc[2], 1, 9990);
+# endif//PID_ADD_EXTRUSION_RATE	
+#endif//EXTRUDERS > 2
 #endif//PIDTEMP
     MENU_ITEM(submenu, MSG_PREHEAT_PLA_SETTINGS, lcd_control_temperature_preheat_pla_settings_menu);
     MENU_ITEM(submenu, MSG_PREHEAT_ABS_SETTINGS, lcd_control_temperature_preheat_abs_settings_menu);
@@ -1706,7 +1731,7 @@ char *ftostr52(const float &x)
 void copy_and_scalePID_i()
 {
 #ifdef PIDTEMP
-  Ki = scalePID_i(raw_Ki);
+  Ki[pid_current_extruder] = scalePID_i(raw_Ki);
   updatePID();
 #endif
 }
@@ -1716,7 +1741,7 @@ void copy_and_scalePID_i()
 void copy_and_scalePID_d()
 {
 #ifdef PIDTEMP
-  Kd = scalePID_d(raw_Kd);
+  Kd[pid_current_extruder] = scalePID_d(raw_Kd);
   updatePID();
 #endif
 }

