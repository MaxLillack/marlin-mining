commit 824c6859e2504722b61849c00b4ef3f4c7b7a713 (from 2c239b1bd3a7424edbbcfb96724c055bb701db0f)
Merge: 2c239b1 976c312
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 21 14:46:09 2016 -0700

    Merge pull request #4369 from thinkyhead/rc_no_static_moves
    
    inline to fix warnings, smaller build size (sometimes)

diff --git a/Marlin/Marlin.h b/Marlin/Marlin.h
index 3ad5512..4a07513 100644
--- a/Marlin/Marlin.h
+++ b/Marlin/Marlin.h
@@ -407,11 +407,11 @@ void calculate_volumetric_multipliers();
 /**
  * Blocking movement and shorthand functions
  */
-static void do_blocking_move_to(float x, float y, float z, float fr_mm_m=0.0);
-static void do_blocking_move_to_axis_pos(AxisEnum axis, float where, float fr_mm_m=0.0);
-static void do_blocking_move_to_x(float x, float fr_mm_m=0.0);
-static void do_blocking_move_to_y(float y);
-static void do_blocking_move_to_z(float z, float fr_mm_m=0.0);
-static void do_blocking_move_to_xy(float x, float y, float fr_mm_m=0.0);
+inline void do_blocking_move_to(float x, float y, float z, float fr_mm_m=0.0);
+inline void do_blocking_move_to_axis_pos(AxisEnum axis, float where, float fr_mm_m=0.0);
+inline void do_blocking_move_to_x(float x, float fr_mm_m=0.0);
+inline void do_blocking_move_to_y(float y);
+inline void do_blocking_move_to_z(float z, float fr_mm_m=0.0);
+inline void do_blocking_move_to_xy(float x, float y, float fr_mm_m=0.0);
 
 #endif //MARLIN_H

commit 824c6859e2504722b61849c00b4ef3f4c7b7a713 (from 976c31235d242c76b757d6cb959993480ddebf9f)
Merge: 2c239b1 976c312
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Thu Jul 21 14:46:09 2016 -0700

    Merge pull request #4369 from thinkyhead/rc_no_static_moves
    
    inline to fix warnings, smaller build size (sometimes)

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index ac7c6fc..35c31c2 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -2064,6 +2064,12 @@ static void clean_up_after_endstop_or_probe_move() {
     return false;
   }
 
+  #if ENABLED(DELTA)
+    #define SET_CURRENT_FROM_STEPPERS() current_position[Z_AXIS] = z_before - stepper.get_axis_position_mm(Z_AXIS) + z_mm
+  #else
+    #define SET_CURRENT_FROM_STEPPERS() current_position[Z_AXIS] = stepper.get_axis_position_mm(Z_AXIS)
+  #endif
+
   // Do a single Z probe and return with current_position[Z_AXIS]
   // at the height where the probe triggered.
   static float run_z_probe() {
@@ -2075,23 +2081,31 @@ static void clean_up_after_endstop_or_probe_move() {
       planner.bed_level_matrix.set_to_identity();
     #endif
 
+    #if ENABLED(DELTA)
+      float z_before = current_position[Z_AXIS];
+      float z_mm = stepper.get_axis_position_mm(Z_AXIS);
+    #endif
     current_position[Z_AXIS] = -(Z_MAX_LENGTH + 10);
     do_blocking_move_to_z(current_position[Z_AXIS], Z_PROBE_SPEED_FAST);
     endstops.hit_on_purpose(); // clear endstop hit flags
     // Get the current stepper position after bumping an endstop
-    current_position[Z_AXIS] = stepper.get_axis_position_mm(Z_AXIS);
-    SYNC_PLAN_POSITION_KINEMATIC(); // tell the planner where we are      feedrate_mm_m = homing_feedrate_mm_m[Z_AXIS];
+    SET_CURRENT_FROM_STEPPERS();
+    SYNC_PLAN_POSITION_KINEMATIC(); // tell the planner where we are
 
     // move up the retract distance
     current_position[Z_AXIS] += home_bump_mm(Z_AXIS);
     do_blocking_move_to_z(current_position[Z_AXIS], Z_PROBE_SPEED_FAST);
 
+    #if ENABLED(DELTA)
+      z_before = current_position[Z_AXIS];
+      z_mm = stepper.get_axis_position_mm(Z_AXIS);
+    #endif
     // move back down slowly to find bed
     current_position[Z_AXIS] -= home_bump_mm(Z_AXIS) * 2;
     do_blocking_move_to_z(current_position[Z_AXIS], Z_PROBE_SPEED_SLOW);
     endstops.hit_on_purpose(); // clear endstop hit flags
     // Get the current stepper position after bumping an endstop
-    current_position[Z_AXIS] = stepper.get_axis_position_mm(Z_AXIS);
+    SET_CURRENT_FROM_STEPPERS();
     SYNC_PLAN_POSITION_KINEMATIC(); // tell the planner where we are
 
     #if ENABLED(DEBUG_LEVELING_FEATURE)

