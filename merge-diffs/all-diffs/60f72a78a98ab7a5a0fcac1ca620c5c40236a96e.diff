commit 60f72a78a98ab7a5a0fcac1ca620c5c40236a96e (from b868d668faf59efb14a318ed19acc48f709a818d)
Merge: b868d66 abba7a0
Author: Cylindric <mark@hanfordonline.co.uk>
Date:   Tue Feb 18 17:31:58 2014 +0000

    Merge branch 'Marlin_v1' of https://github.com/ErikZalm/Marlin into typofixes_upstream

diff --git a/Marlin/language.h b/Marlin/language.h
index 2126f7f..9ed9095 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -17,6 +17,7 @@
 // 8  Portuguese
 // 9  Finnish
 // 10 Aragonese
+// 11 Dutch
 
 #ifndef LANGUAGE_CHOICE
 	#define LANGUAGE_CHOICE 1  // Pick your language from the list above
@@ -1918,4 +1919,185 @@
 
 #endif
 
+#if LANGUAGE_CHOICE == 11 //Dutch
+
+// LCD Menu Messages
+// Please note these are limited to 17 characters!
+
+	#define WELCOME_MSG MACHINE_NAME " gereed."
+	#define MSG_SD_INSERTED "Kaart ingestoken"
+	#define MSG_SD_REMOVED "Kaart verwijderd"
+	#define MSG_MAIN "Main"
+	#define MSG_AUTOSTART "Autostart"
+	#define MSG_DISABLE_STEPPERS "Motoren uit"
+	#define MSG_AUTO_HOME "Auto home"
+	#define MSG_SET_ORIGIN "Nulpunt instellen"
+	#define MSG_PREHEAT_PLA "PLA voorverwarmen"
+	#define MSG_PREHEAT_PLA_SETTINGS "PLA verw. conf"
+	#define MSG_PREHEAT_ABS "ABS voorverwarmen"
+	#define MSG_PREHEAT_ABS_SETTINGS "ABS verw. conf"
+	#define MSG_COOLDOWN "Afkoelen"
+	#define MSG_SWITCH_PS_ON "Stroom aan"
+	#define MSG_SWITCH_PS_OFF "Stroom uit"
+	#define MSG_EXTRUDE "Extrude"
+	#define MSG_RETRACT "Retract"
+	#define MSG_MOVE_AXIS "As verplaatsen"
+	#define MSG_MOVE_X "Verplaats X"
+	#define MSG_MOVE_Y "Verplaats Y"
+	#define MSG_MOVE_Z "Verplaats Z"
+	#define MSG_MOVE_E "Extruder"
+	#define MSG_MOVE_01MM "Verplaats 0.1mm"
+	#define MSG_MOVE_1MM "Verplaats 1mm"
+	#define MSG_MOVE_10MM "Verplaats 10mm"
+	#define MSG_SPEED "Snelheid"
+	#define MSG_NOZZLE "Nozzle"
+	#define MSG_NOZZLE1 "Nozzle2"
+	#define MSG_NOZZLE2 "Nozzle3"
+	#define MSG_BED "Bed"
+	#define MSG_FAN_SPEED "Fan snelheid"
+	#define MSG_FLOW "Flow"
+	#define MSG_CONTROL "Control"
+	#define MSG_MIN " \002 Min"
+	#define MSG_MAX " \002 Max"
+	#define MSG_FACTOR " \002 Fact"
+	#define MSG_AUTOTEMP "Autotemp"
+	#define MSG_ON "Aan "
+	#define MSG_OFF "Uit"
+	#define MSG_PID_P "PID-P"
+	#define MSG_PID_I "PID-I"
+	#define MSG_PID_D "PID-D"
+	#define MSG_PID_C "PID-C"
+	#define MSG_ACC  "Versn"
+	#define MSG_VXY_JERK "Vxy-jerk"
+	#define MSG_VZ_JERK "Vz-jerk"
+	#define MSG_VE_JERK "Ve-jerk"
+	#define MSG_VMAX "Vmax "
+	#define MSG_X "x"
+	#define MSG_Y "y"
+	#define MSG_Z "z"
+	#define MSG_E "e"
+	#define MSG_VMIN "Vmin"
+	#define MSG_VTRAV_MIN "VTrav min"
+	#define MSG_AMAX "Amax "
+	#define MSG_A_RETRACT "A-retract"
+	#define MSG_XSTEPS "Xsteps/mm"
+	#define MSG_YSTEPS "Ysteps/mm"
+	#define MSG_ZSTEPS "Zsteps/mm"
+	#define MSG_ESTEPS "Esteps/mm"
+	#define MSG_RECTRACT "Terugtrekken"
+	#define MSG_TEMPERATURE "Temperatuur"
+	#define MSG_MOTION "Beweging"
+	#define MSG_CONTRAST "LCD contrast"
+	#define MSG_STORE_EPROM "Geheugen opslaan"
+	#define MSG_LOAD_EPROM "Geheugen laden"
+	#define MSG_RESTORE_FAILSAFE "Noodstop reset"
+	#define MSG_REFRESH "Ververs"
+	#define MSG_WATCH "Info scherm"
+	#define MSG_PREPARE "Voorbereiden"
+	#define MSG_TUNE "Afstellen"
+	#define MSG_PAUSE_PRINT "Print pauzeren"
+	#define MSG_RESUME_PRINT "Print hervatten"
+	#define MSG_STOP_PRINT "Print stoppen"
+	#define MSG_CARD_MENU "Print van SD"
+	#define MSG_NO_CARD "Geen SD kaart"
+	#define MSG_DWELL "Slapen..."
+	#define MSG_USERWAIT "Wachten..."
+	#define MSG_RESUMING "Print hervatten"
+	#define MSG_NO_MOVE "Geen beweging."
+	#define MSG_KILLED "AFGEBROKEN. "
+	#define MSG_STOPPED "GESTOPT. "
+	#define MSG_CONTROL_RETRACT  "Retract mm"
+	#define MSG_CONTROL_RETRACTF "Retract  F"
+	#define MSG_CONTROL_RETRACT_ZLIFT "Hop mm"
+	#define MSG_CONTROL_RETRACT_RECOVER "UnRet +mm"
+	#define MSG_CONTROL_RETRACT_RECOVERF "UnRet  F"
+	#define MSG_AUTORETRACT "AutoRetr."
+	#define MSG_FILAMENTCHANGE "Verv. Filament"
+	#define MSG_INIT_SDCARD "Init. SD kaart"	
+	#define MSG_CNG_SDCARD "Verv. SD card"
+    #define MSG_ZPROBE_OUT "Z probe uit. bed"
+    #define MSG_POSITION_UNKNOWN "Home X/Y voor Z"
+    #define MSG_ZPROBE_ZOFFSET "Z Offset"
+	#define MSG_BABYSTEP_X "Babystap X"
+	#define MSG_BABYSTEP_Y "Babystap Y"
+	#define MSG_BABYSTEP_Z "Babystap Z"
+	#define MSG_ENDSTOP_ABORT "Endstop afbr."
+
+// Serial Console Messages
+
+	#define MSG_Enqueing "enqueing \""
+	#define MSG_POWERUP "Opstarten"
+	#define MSG_EXTERNAL_RESET " Externe Reset"
+	#define MSG_BROWNOUT_RESET " Lage voedingsspanning Reset"
+	#define MSG_WATCHDOG_RESET " Watchdog Reset"
+	#define MSG_SOFTWARE_RESET " Software Reset"
+	#define MSG_AUTHOR " | Auteur: "
+	#define MSG_CONFIGURATION_VER " Laatst bijgewerkt: "
+	#define MSG_FREE_MEMORY " Vrij Geheugen: "
+	#define MSG_PLANNER_BUFFER_BYTES "  PlannerBufferBytes: "
+	#define MSG_OK "ok"
+	#define MSG_FILE_SAVED "Bestand opslaan voltooid."
+	#define MSG_ERR_LINE_NO "Regelnummer is niet het laatste regelnummer+1, Laatste regel: "
+	#define MSG_ERR_CHECKSUM_MISMATCH "Checksum fout, Laatste regel: "
+	#define MSG_ERR_NO_CHECKSUM "Regel zonder checksum, Laatste regel: "
+	#define MSG_ERR_NO_LINENUMBER_WITH_CHECKSUM "Geen regelnummer met checksum, Laatste regel: "
+	#define MSG_FILE_PRINTED "Bestand afdrukken klaar"
+	#define MSG_BEGIN_FILE_LIST "Begin bestandslijst"
+	#define MSG_END_FILE_LIST "Einde bestandslijst"
+	#define MSG_M104_INVALID_EXTRUDER "M104 Ongeldige extruder "
+	#define MSG_M105_INVALID_EXTRUDER "M105 Ongeldige extruder "
+	#define MSG_M200_INVALID_EXTRUDER "M200 Ongeldige extruder "
+	#define MSG_M218_INVALID_EXTRUDER "M218 Ongeldige extruder "
+	#define MSG_ERR_NO_THERMISTORS "Geen thermistors - geen temperatuur"
+	#define MSG_M109_INVALID_EXTRUDER "M109 Ongeldige extruder "
+	#define MSG_HEATING "Opwarmen..."
+	#define MSG_HEATING_COMPLETE "Opwarmen klaar."
+	#define MSG_BED_HEATING "Bed opwarmen."
+	#define MSG_BED_DONE "Bed klaar."
+	#define MSG_M115_REPORT "FIRMWARE_NAME:Marlin V1; Sprinter/grbl mashup voor gen6 FIRMWARE_URL:" FIRMWARE_URL " PROTOCOL_VERSION:" PROTOCOL_VERSION " MACHINE_TYPE:" MACHINE_NAME " EXTRUDER_COUNT:" STRINGIFY(EXTRUDERS) " UUID:" MACHINE_UUID "\n"
+	#define MSG_COUNT_X " Aantal X: "
+	#define MSG_ERR_KILLED "Printer stopgezet. kill() aangeroepen!"
+	#define MSG_ERR_STOPPED "Printer gestopt vanwege fouten. Los de fout op en gebruik M999 om opnieuw te starten. (Temperatuur is gereset, stel deze opnieuw in na herstart)"
+	#define MSG_RESEND "Opnieuw sturen: "
+	#define MSG_UNKNOWN_COMMAND "Onbekend commando: \""
+	#define MSG_ACTIVE_EXTRUDER "Actieve Extruder: "
+	#define MSG_INVALID_EXTRUDER "Ongeldige extruder"
+	#define MSG_X_MIN "x_min: "
+	#define MSG_X_MAX "x_max: "
+	#define MSG_Y_MIN "y_min: "
+	#define MSG_Y_MAX "y_max: "
+	#define MSG_Z_MIN "z_min: "
+	#define MSG_Z_MAX "z_max: "
+	#define MSG_M119_REPORT "Eindstop statusrapportage:"
+	#define MSG_ENDSTOP_HIT "GERAAKT"
+	#define MSG_ENDSTOP_OPEN "open"
+	#define MSG_HOTEND_OFFSET "Hotend afwijking:"
+
+	#define MSG_SD_CANT_OPEN_SUBDIR "Kan subdirectory niet openen"
+	#define MSG_SD_INIT_FAIL "SD initialiseren mislukt"
+	#define MSG_SD_VOL_INIT_FAIL "volume.init mislukt"
+	#define MSG_SD_OPENROOT_FAIL "openRoot mislukt"
+	#define MSG_SD_CARD_OK "SD kaart ok"
+	#define MSG_SD_WORKDIR_FAIL "workDir openen mislukt"
+	#define MSG_SD_OPEN_FILE_FAIL "Openen mislukt, bestand: "
+	#define MSG_SD_FILE_OPENED "Bestand geopend: "
+	#define MSG_SD_SIZE " Grootte: "
+	#define MSG_SD_FILE_SELECTED "Bestanden geselecteerd:"
+	#define MSG_SD_WRITE_TO_FILE "Schrijven naar bestand: "
+	#define MSG_SD_PRINTING_BYTE "SD printen byte: "
+	#define MSG_SD_NOT_PRINTING "Niet SD printen"
+	#define MSG_SD_ERR_WRITE_TO_FILE "Fout tijdens het schrijven naar bestand:"
+	#define MSG_SD_CANT_ENTER_SUBDIR "Kan subdirectory niet in: "
+
+	#define MSG_STEPPER_TOO_HIGH "stapsnelheid te hoog:"
+	#define MSG_ENDSTOPS_HIT "endstops geraakt: "
+	#define MSG_ERR_COLD_EXTRUDE_STOP " Koude extrusie voorkomen"
+	#define MSG_ERR_LONG_EXTRUDE_STOP " te lange extrusie voorkomen"
+	#define MSG_BABYSTEPPING_X "Babystepping X"
+	#define MSG_BABYSTEPPING_Y "Babystepping Y"
+	#define MSG_BABYSTEPPING_Z "Babystepping Z"
+	#define MSG_SERIAL_ERROR_MENU_STRUCTURE "Fout in menustructuur"
+
+#endif
+
 #endif // ifndef LANGUAGE_H

commit 60f72a78a98ab7a5a0fcac1ca620c5c40236a96e (from abba7a0003e8fcfea814d378885a0d2998c22d45)
Merge: b868d66 abba7a0
Author: Cylindric <mark@hanfordonline.co.uk>
Date:   Tue Feb 18 17:31:58 2014 +0000

    Merge branch 'Marlin_v1' of https://github.com/ErikZalm/Marlin into typofixes_upstream

diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 8961b67..3262f2d 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -38,7 +38,7 @@ char lcd_status_message[LCD_WIDTH+1] = WELCOME_MSG;
 #include "ultralcd_implementation_hitachi_HD44780.h"
 #endif
 
-/** forward declerations **/
+/** forward declarations **/
 
 void copy_and_scalePID_i();
 void copy_and_scalePID_d();
@@ -62,9 +62,9 @@ static void lcd_set_contrast();
 static void lcd_control_retract_menu();
 static void lcd_sdcard_menu();
 
-static void lcd_quick_feedback();//Cause an LCD refresh, and give the user visual or audiable feedback that something has happend
+static void lcd_quick_feedback();//Cause an LCD refresh, and give the user visual or audible feedback that something has happened
 
-/* Different types of actions that can be used in menuitems. */
+/* Different types of actions that can be used in menu items. */
 static void menu_action_back(menuFunc_t data);
 static void menu_action_submenu(menuFunc_t data);
 static void menu_action_gcode(const char* pgcode);
@@ -145,7 +145,7 @@ static void menu_action_setting_edit_callback_long5(const char* pstr, unsigned l
 #ifndef REPRAPWORLD_KEYPAD
 volatile uint8_t buttons;//Contains the bits of the currently pressed buttons.
 #else
-volatile uint8_t buttons_reprapworld_keypad; // to store the reprapworld_keypad shiftregister values
+volatile uint8_t buttons_reprapworld_keypad; // to store the reprapworld_keypad shift register values
 #endif
 #ifdef LCD_HAS_SLOW_BUTTONS
 volatile uint8_t slow_buttons;//Contains the bits of the currently pressed buttons.
@@ -162,7 +162,7 @@ bool lcd_oldcardstatus;
 menuFunc_t currentMenu = lcd_status_screen; /* function pointer to the currently active menu */
 uint32_t lcd_next_update_millis;
 uint8_t lcd_status_update_delay;
-uint8_t lcdDrawUpdate = 2;                  /* Set to none-zero when the LCD needs to draw, decreased after every draw. Set to 2 in LCD routines so the LCD gets atleast 1 full redraw (first redraw is partial) */
+uint8_t lcdDrawUpdate = 2;                  /* Set to none-zero when the LCD needs to draw, decreased after every draw. Set to 2 in LCD routines so the LCD gets at least 1 full redraw (first redraw is partial) */
 
 //prevMenu and prevEncoderPosition are used to store the previous menu location when editing settings.
 menuFunc_t prevMenu = NULL;
@@ -173,10 +173,10 @@ void* editValue;
 int32_t minEditValue, maxEditValue;
 menuFunc_t callbackFunc;
 
-// placeholders for Ki and Kd edits
+// place-holders for Ki and Kd edits
 float raw_Ki, raw_Kd;
 
-/* Main status screen. It's up to the implementation specific part to show what is needed. As this is very display dependend */
+/* Main status screen. It's up to the implementation specific part to show what is needed. As this is very display dependent */
 static void lcd_status_screen()
 {
     if (lcd_status_update_delay)
@@ -708,9 +708,9 @@ static void lcd_control_temperature_preheat_abs_settings_menu()
 static void lcd_control_motion_menu()
 {
     START_MENU();
-    MENU_ITEM(back, MSG_CONTROL, lcd_control_menu);
+    MENU_ITEM(back, MSG_CONTROL, lcd_control_menu);
 #ifdef ENABLE_AUTO_BED_LEVELING
-    MENU_ITEM_EDIT(float32, MSG_ZPROBE_ZOFFSET, &zprobe_zoffset, 0.5, 50);
+    MENU_ITEM_EDIT(float32, MSG_ZPROBE_ZOFFSET, &zprobe_zoffset, 0.5, 50);
 #endif
     MENU_ITEM_EDIT(float5, MSG_ACC, &acceleration, 500, 99000);
     MENU_ITEM_EDIT(float3, MSG_VXY_JERK, &max_xy_jerk, 1, 990);
@@ -1008,7 +1008,7 @@ void lcd_init()
     WRITE(SHIFT_LD,HIGH);
   #endif
 #else  // Not NEWPANEL
-  #ifdef SR_LCD_2W_NL // Non latching 2 wire shiftregister
+  #ifdef SR_LCD_2W_NL // Non latching 2 wire shift register
      pinMode (SR_DATA_PIN, OUTPUT);
      pinMode (SR_CLK_PIN, OUTPUT);
   #elif defined(SHIFT_CLK) 
@@ -1055,7 +1055,7 @@ void lcd_update()
     {
         lcdDrawUpdate = 2;
         lcd_oldcardstatus = IS_SD_INSERTED;
-        lcd_implementation_init(); // to maybe revive the lcd if static electricty killed it.
+        lcd_implementation_init(); // to maybe revive the LCD if static electricity killed it.
 
         if(lcd_oldcardstatus)
         {
@@ -1470,7 +1470,7 @@ char *ftostr52(const float &x)
 }
 
 // Callback for after editing PID i value
-// grab the pid i value out of the temp variable; scale it; then update the PID driver
+// grab the PID i value out of the temp variable; scale it; then update the PID driver
 void copy_and_scalePID_i()
 {
 #ifdef PIDTEMP
@@ -1480,7 +1480,7 @@ void copy_and_scalePID_i()
 }
 
 // Callback for after editing PID d value
-// grab the pid d value out of the temp variable; scale it; then update the PID driver
+// grab the PID d value out of the temp variable; scale it; then update the PID driver
 void copy_and_scalePID_d()
 {
 #ifdef PIDTEMP
diff --git a/Marlin/ultralcd.h b/Marlin/ultralcd.h
index d6fa0fd..f4570f6 100644
--- a/Marlin/ultralcd.h
+++ b/Marlin/ultralcd.h
@@ -17,7 +17,7 @@
   void lcd_setcontrast(uint8_t value);
 #endif
 
-  static unsigned char blink = 0;	// Variable for visualisation of fan rotation in GLCD
+  static unsigned char blink = 0;	// Variable for visualization of fan rotation in GLCD
 
   #define LCD_MESSAGEPGM(x) lcd_setstatuspgm(PSTR(x))
   #define LCD_ALERTMESSAGEPGM(x) lcd_setalertstatuspgm(PSTR(x))
@@ -29,7 +29,7 @@
   void lcd_buttons_update();
   extern volatile uint8_t buttons;  //the last checked buttons in a bit array.
   #ifdef REPRAPWORLD_KEYPAD
-    extern volatile uint8_t buttons_reprapworld_keypad; // to store the keypad shiftregister values
+    extern volatile uint8_t buttons_reprapworld_keypad; // to store the keypad shift register values
   #endif
   #else
   FORCE_INLINE void lcd_buttons_update() {}
@@ -72,7 +72,7 @@
   	  #define REPRAPWORLD_KEYPAD_MOVE_HOME (buttons_reprapworld_keypad&EN_REPRAPWORLD_KEYPAD_MIDDLE)
     #endif //REPRAPWORLD_KEYPAD
   #else
-    //atomatic, do not change
+    //atomic, do not change
     #define B_LE (1<<BL_LE)
     #define B_UP (1<<BL_UP)
     #define B_MI (1<<BL_MI)
@@ -85,7 +85,7 @@
     #define LCD_CLICKED ((buttons&B_MI)||(buttons&B_ST))
   #endif//NEWPANEL
 
-#else //no lcd
+#else //no LCD
   FORCE_INLINE void lcd_update() {}
   FORCE_INLINE void lcd_init() {}
   FORCE_INLINE void lcd_setstatus(const char* message) {}
diff --git a/Marlin/ultralcd_implementation_hitachi_HD44780.h b/Marlin/ultralcd_implementation_hitachi_HD44780.h
index ccb820b..932895b 100644
--- a/Marlin/ultralcd_implementation_hitachi_HD44780.h
+++ b/Marlin/ultralcd_implementation_hitachi_HD44780.h
@@ -2,8 +2,8 @@
 #define ULTRA_LCD_IMPLEMENTATION_HITACHI_HD44780_H
 
 /**
-* Implementation of the LCD display routines for a hitachi HD44780 display. These are common LCD character displays.
-* When selecting the rusian language, a slightly different LCD implementation is used to handle UTF8 characters.
+* Implementation of the LCD display routines for a Hitachi HD44780 display. These are common LCD character displays.
+* When selecting the Russian language, a slightly different LCD implementation is used to handle UTF8 characters.
 **/
 
 #ifndef REPRAPWORLD_KEYPAD
@@ -20,7 +20,7 @@ extern volatile uint16_t buttons;  //an extended version of the last checked but
 // via a shift/i2c register.
 
 #ifdef ULTIPANEL
-// All Ultipanels might have an encoder - so this is always be mapped onto first two bits
+// All UltiPanels might have an encoder - so this is always be mapped onto first two bits
 #define BLEN_B 1
 #define BLEN_A 0
 
@@ -725,15 +725,15 @@ static void lcd_implementation_quick_feedback()
       delayMicroseconds(100);
       WRITE(BEEPER,LOW);
       delayMicroseconds(100);
-    }
-    #else
+    }
+    #else
     for(int8_t i=0;i<(LCD_FEEDBACK_FREQUENCY_DURATION_MS / (1000 / LCD_FEEDBACK_FREQUENCY_HZ));i++)
     {
       WRITE(BEEPER,HIGH);
       delayMicroseconds(1000000 / LCD_FEEDBACK_FREQUENCY_HZ / 2);
       WRITE(BEEPER,LOW);
       delayMicroseconds(1000000 / LCD_FEEDBACK_FREQUENCY_HZ / 2);
-    }
+    }
     #endif
 #endif
 }

