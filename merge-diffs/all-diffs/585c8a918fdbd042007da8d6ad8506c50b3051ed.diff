commit 585c8a918fdbd042007da8d6ad8506c50b3051ed (from c63f95f2fe23ada87f68e699af24a41c301b7164)
Merge: c63f95f ddf3e1e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 14 15:27:11 2016 -0700

    Merge pull request #3758 from thinkyhead/rc_verbiage
    
    Tweaks to some verbiage

diff --git a/Marlin/SanityCheck.h b/Marlin/SanityCheck.h
index 623c5a2..914b0ff 100644
--- a/Marlin/SanityCheck.h
+++ b/Marlin/SanityCheck.h
@@ -121,7 +121,7 @@
  * Individual axis homing is useless for DELTAS
  */
 #if ENABLED(INDIVIDUAL_AXIS_HOMING_MENU) && ENABLED(DELTA)
-  #error Individual axis homing will not work with a DELTA kinematics.
+  #error INDIVIDUAL_AXIS_HOMING_MENU is incompatible with DELTA kinematics.
 #endif
 
 /**
diff --git a/Marlin/utf_mapper.h b/Marlin/utf_mapper.h
index bb53fad..ae599af 100644
--- a/Marlin/utf_mapper.h
+++ b/Marlin/utf_mapper.h
@@ -74,7 +74,7 @@
   //          ヰ    ヱ    ヲ    ン    フ    ?    ?   ?    ?    ?    ヲ    ・    ー    ヽ    ヽ   ?
            };
     #elif ENABLED(MAPPER_D0D1)
-      #error "Cyrillic on a japanese dsplay makes no sense. There are no matching symbols."
+      #error "Cyrillic on a JAPANESE display makes no sense. There are no matching symbols."
     #endif
 
   #elif DISPLAY_CHARSET_HD44780 == WESTERN
@@ -108,7 +108,7 @@
   //          p    c    T    y    Ф    x    Ч    ч    Ш    Щ    Ъ    Ы    b    Э    Ю    Я
             };
     #elif ENABLED(MAPPER_E382E383)
-      #error "Katakana on a western display makes no sense. There are no matching symbols."
+      #error "Katakana on a WESTERN display makes no sense. There are no matching symbols."
     #endif
 
   #elif DISPLAY_CHARSET_HD44780 == CYRILLIC
@@ -135,9 +135,9 @@
              // ш    щ    ъ    ы    ь    э    ю    я      // 7  Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ
              };                                           //    ѻ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ
     #elif ENABLED(MAPPER_C2C3)
-      #error "Western languages on a cyrillic display makes no sense. There are no matching symbols."
+      #error "Western languages on a CYRILLIC display makes no sense. There are no matching symbols."
     #elif ENABLED(MAPPER_E382E383)
-      #error "Katakana on a cyrillic display makes no sense. There are no matching symbols."
+      #error "Katakana on a CYRILLIC display makes no sense. There are no matching symbols."
     #endif
   #else
     #error "Something went wrong in the setting of DISPLAY_CHARSET_HD44780"

commit 585c8a918fdbd042007da8d6ad8506c50b3051ed (from ddf3e1e22dc3cbb2377808909112f9a1e69639ae)
Merge: c63f95f ddf3e1e
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Sat May 14 15:27:11 2016 -0700

    Merge pull request #3758 from thinkyhead/rc_verbiage
    
    Tweaks to some verbiage

diff --git a/Marlin/language_cz.h b/Marlin/language_cz.h
index 0dc7f41..da277a2 100644
--- a/Marlin/language_cz.h
+++ b/Marlin/language_cz.h
@@ -42,12 +42,17 @@
 #define WELCOME_MSG                         MACHINE_NAME " pripraven."
 #define MSG_SD_INSERTED                     "Karta vlozena"
 #define MSG_SD_REMOVED                      "Karta vyjmuta"
+#define MSG_LCD_ENDSTOPS                    "Endstopy" // maximalne 8 znaku
 #define MSG_MAIN                            "Hlavni nabidka"
 #define MSG_AUTOSTART                       "Autostart"
 #define MSG_DISABLE_STEPPERS                "Uvolnit motory"
 #define MSG_AUTO_HOME                       "Domovska pozice"
+#define MSG_AUTO_HOME_X                     "Domu osa X"
+#define MSG_AUTO_HOME_Y                     "Domu osa Y"
+#define MSG_AUTO_HOME_Z                     "Domu osa Z"
 #define MSG_LEVEL_BED_HOMING                "Mereni podlozky"
 #define MSG_LEVEL_BED_WAITING               "Kliknutim spustte"
+#define MSG_LEVEL_BED_NEXT_POINT            "Dalsi bod"
 #define MSG_LEVEL_BED_DONE                  "Mereni hotovo!"
 #define MSG_LEVEL_BED_CANCEL                "Storno"
 #define MSG_SET_HOME_OFFSETS                "Nastavit ofsety"
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index 19e66c6..76bab52 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -332,7 +332,7 @@ int Temperature::getHeaterPower(int heater) {
 #if HAS_AUTO_FAN
 
   void Temperature::checkExtruderAutoFans() {
-    const uint8_t fanPin[] = { EXTRUDER_0_AUTO_FAN_PIN, EXTRUDER_1_AUTO_FAN_PIN, EXTRUDER_2_AUTO_FAN_PIN, EXTRUDER_3_AUTO_FAN_PIN };
+    const int8_t fanPin[] = { EXTRUDER_0_AUTO_FAN_PIN, EXTRUDER_1_AUTO_FAN_PIN, EXTRUDER_2_AUTO_FAN_PIN, EXTRUDER_3_AUTO_FAN_PIN };
     const int fanBit[] = { 0,
       EXTRUDER_1_AUTO_FAN_PIN == EXTRUDER_0_AUTO_FAN_PIN ? 0 : 1,
       EXTRUDER_2_AUTO_FAN_PIN == EXTRUDER_0_AUTO_FAN_PIN ? 0 :
@@ -347,10 +347,13 @@ int Temperature::getHeaterPower(int heater) {
         SBI(fanState, fanBit[f]);
     }
     for (int f = 0; f <= 3; f++) {
-      unsigned char newFanSpeed = TEST(fanState, f) ? EXTRUDER_AUTO_FAN_SPEED : 0;
-      // this idiom allows both digital and PWM fan outputs (see M42 handling).
-      digitalWrite(fanPin[f], newFanSpeed);
-      analogWrite(fanPin[f], newFanSpeed);
+      int8_t pin = fanPin[f];
+      if (pin >= 0) {
+        unsigned char newFanSpeed = TEST(fanState, f) ? EXTRUDER_AUTO_FAN_SPEED : 0;
+        // this idiom allows both digital and PWM fan outputs (see M42 handling).
+        digitalWrite(pin, newFanSpeed);
+        analogWrite(pin, newFanSpeed);
+      }
     }
   }
 

