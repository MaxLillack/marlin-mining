commit 82a187acaeb3c7dfe5c4e0a9516f20fa04c8cb61 (from c9c6e084cecc3bcd40cf92e0629d4af7ab9479af)
Merge: c9c6e08 e7fc353
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Dec 5 07:31:28 2016 -0600

    Merge pull request #5359 from AnHardt/update-de
    
    Add missing translations to lang-de

diff --git a/Marlin/language_de.h b/Marlin/language_de.h
index 493fab3..551374b 100644
--- a/Marlin/language_de.h
+++ b/Marlin/language_de.h
@@ -146,6 +146,8 @@
 #define MSG_INIT_SDCARD                     "SD-Karte erkennen"  // Manually initialize the SD-card via user interface
 #define MSG_CNG_SDCARD                      "SD-Karte getauscht" // SD-card changed by user. For machines with no autocarddetect. Both send "M21"
 #define MSG_ZPROBE_OUT                      "Sensor ausserhalb"
+#define MSG_BLTOUCH_SELFTEST                "BLTouch Test"
+#define MSG_BLTOUCH_RESET                   "BLTouch Reset"
 #define MSG_HOME                            "Vorher"  // Used as MSG_HOME " " MSG_X MSG_Y MSG_Z " " MSG_FIRST
 #define MSG_FIRST                           "homen"
 #define MSG_ZPROBE_ZOFFSET                  "Z Versatz"
@@ -204,6 +206,10 @@
 #define MSG_INFO_MAX_TEMP                   "Max Temp"
 #define MSG_INFO_PSU                        "Stromversorgung"
 
+#define MSG_DRIVE_STRENGTH                  "Motorströme"
+#define MSG_DAC_PERCENT                     "Treiber %"
+#define MSG_DAC_EEPROM_WRITE                "Werte speichern"
+
 #define MSG_FILAMENT_CHANGE_HEADER          "ÄNDERE FILAMENT"
 #define MSG_FILAMENT_CHANGE_OPTION_HEADER   "ÄNDERE OPTIONEN:"
 #define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  "Extrude mehr"

commit 82a187acaeb3c7dfe5c4e0a9516f20fa04c8cb61 (from e7fc353f084433658e75f1a45dc1c6898fcb68ae)
Merge: c9c6e08 e7fc353
Author: Scott Lahteine <thinkyhead@users.noreply.github.com>
Date:   Mon Dec 5 07:31:28 2016 -0600

    Merge pull request #5359 from AnHardt/update-de
    
    Add missing translations to lang-de

diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 174d038..c02c02c 100755
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -2224,11 +2224,15 @@ static void clean_up_after_endstop_or_probe_move() {
   void set_bed_leveling_enabled(bool enable=true) {
     #if ENABLED(MESH_BED_LEVELING)
 
-      if (!enable && mbl.active())
-        current_position[Z_AXIS] +=
-          mbl.get_z(RAW_CURRENT_POSITION(X_AXIS), RAW_CURRENT_POSITION(Y_AXIS)) - (MESH_HOME_SEARCH_Z);
+      if (enable != mbl.active()) {
 
-      mbl.set_active(enable && mbl.has_mesh()); // was set_has_mesh(). Is this not correct?
+        if (!enable)
+          planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], current_position[Z_AXIS]);
+
+        mbl.set_active(enable && mbl.has_mesh());
+
+        if (enable) planner.unapply_leveling(current_position);
+      }
 
     #elif HAS_ABL
 
@@ -3162,8 +3166,10 @@ inline void gcode_G4() {
     #elif ENABLED(MESH_BED_LEVELING)
       SERIAL_ECHOPGM("Mesh Bed Leveling");
       if (mbl.active()) {
+        float lz = current_position[Z_AXIS];
+        planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], lz);
         SERIAL_ECHOLNPGM(" (enabled)");
-        SERIAL_ECHOPAIR("MBL Adjustment Z", mbl.get_z(RAW_CURRENT_POSITION(X_AXIS), RAW_CURRENT_POSITION(Y_AXIS)));
+        SERIAL_ECHOPAIR("MBL Adjustment Z", lz);
       }
       SERIAL_EOL;
     #endif
@@ -3321,13 +3327,15 @@ inline void gcode_G28() {
       #if ENABLED(DEBUG_LEVELING_FEATURE)
         if (DEBUGGING(LEVELING)) SERIAL_ECHOLNPGM("MBL was active");
       #endif
-      // Save known Z position if already homed
+      // Use known Z position if already homed
       if (axis_homed[X_AXIS] && axis_homed[Y_AXIS] && axis_homed[Z_AXIS]) {
+        set_bed_leveling_enabled(false);
         pre_home_z = current_position[Z_AXIS];
-        pre_home_z += mbl.get_z(RAW_CURRENT_POSITION(X_AXIS), RAW_CURRENT_POSITION(Y_AXIS));
       }
-      mbl.set_active(false);
-      current_position[Z_AXIS] = pre_home_z;
+      else {
+        mbl.set_active(false);
+        current_position[Z_AXIS] = pre_home_z;
+      }
       #if ENABLED(DEBUG_LEVELING_FEATURE)
         if (DEBUGGING(LEVELING)) DEBUG_POS("Set Z to pre_home_z", current_position);
       #endif
@@ -3551,6 +3559,9 @@ inline void gcode_G28() {
     stepper.synchronize();
   }
 
+  // Save 130 bytes with non-duplication of PSTR
+  void say_not_entered() { SERIAL_PROTOCOLLNPGM(" not entered."); }
+
   /**
    * G29: Mesh-based Z probe, probes a grid and produces a
    *      mesh to compensate for variable bed height
@@ -3663,7 +3674,7 @@ inline void gcode_G28() {
           }
         }
         else {
-          SERIAL_CHAR('X'); SERIAL_PROTOCOLLNPGM(" not entered.");
+          SERIAL_CHAR('X'); say_not_entered();
           return;
         }
 
@@ -3675,7 +3686,7 @@ inline void gcode_G28() {
           }
         }
         else {
-          SERIAL_CHAR('Y'); SERIAL_PROTOCOLLNPGM(" not entered.");
+          SERIAL_CHAR('Y'); say_not_entered();
           return;
         }
 
@@ -3683,7 +3694,7 @@ inline void gcode_G28() {
           mbl.z_values[py][px] = code_value_axis_units(Z_AXIS);
         }
         else {
-          SERIAL_CHAR('Z'); SERIAL_PROTOCOLLNPGM(" not entered.");
+          SERIAL_CHAR('Z'); say_not_entered();
           return;
         }
         break;
@@ -3693,15 +3704,15 @@ inline void gcode_G28() {
           mbl.z_offset = code_value_axis_units(Z_AXIS);
         }
         else {
-          SERIAL_CHAR('Z'); SERIAL_PROTOCOLLNPGM(" not entered.");
+          SERIAL_CHAR('Z'); say_not_entered();
           return;
         }
         break;
 
       case MeshReset:
         if (mbl.active()) {
-          current_position[Z_AXIS] +=
-            mbl.get_z(RAW_CURRENT_POSITION(X_AXIS), RAW_CURRENT_POSITION(Y_AXIS)) - MESH_HOME_SEARCH_Z;
+          current_position[Z_AXIS] -= MESH_HOME_SEARCH_Z;
+          planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], current_position[Z_AXIS]);
           mbl.reset();
           SYNC_PLAN_POSITION_KINEMATIC();
         }
@@ -5822,63 +5833,55 @@ inline void gcode_M115() {
   #if ENABLED(EXTENDED_CAPABILITIES_REPORT)
 
     // EEPROM (M500, M501)
-    SERIAL_PROTOCOLPGM("Cap:");
     #if ENABLED(EEPROM_SETTINGS)
-      SERIAL_PROTOCOLLNPGM("EEPROM:1");
+      SERIAL_PROTOCOLLNPGM("Cap:EEPROM:1");
     #else
-      SERIAL_PROTOCOLLNPGM("EEPROM:0");
+      SERIAL_PROTOCOLLNPGM("Cap:EEPROM:0");
     #endif
 
     // AUTOREPORT_TEMP (M155)
-    SERIAL_PROTOCOLPGM("Cap:");
     #if ENABLED(AUTO_REPORT_TEMPERATURES)
-      SERIAL_PROTOCOLLNPGM("AUTOREPORT_TEMP:1");
+      SERIAL_PROTOCOLLNPGM("Cap:AUTOREPORT_TEMP:1");
     #else
-      SERIAL_PROTOCOLLNPGM("AUTOREPORT_TEMP:0");
+      SERIAL_PROTOCOLLNPGM("Cap:AUTOREPORT_TEMP:0");
     #endif
 
     // PROGRESS (M530 S L, M531 <file>, M532 X L)
-    SERIAL_PROTOCOLPGM("Cap:");
-    SERIAL_PROTOCOLLNPGM("PROGRESS:0");
+    SERIAL_PROTOCOLLNPGM("Cap:PROGRESS:0");
 
     // AUTOLEVEL (G29)
-    SERIAL_PROTOCOLPGM("Cap:");
     #if HAS_ABL
-      SERIAL_PROTOCOLLNPGM("AUTOLEVEL:1");
+      SERIAL_PROTOCOLLNPGM("Cap:AUTOLEVEL:1");
     #else
-      SERIAL_PROTOCOLLNPGM("AUTOLEVEL:0");
+      SERIAL_PROTOCOLLNPGM("Cap:AUTOLEVEL:0");
     #endif
 
     // Z_PROBE (G30)
-    SERIAL_PROTOCOLPGM("Cap:");
     #if HAS_BED_PROBE
-      SERIAL_PROTOCOLLNPGM("Z_PROBE:1");
+      SERIAL_PROTOCOLLNPGM("Cap:Z_PROBE:1");
     #else
-      SERIAL_PROTOCOLLNPGM("Z_PROBE:0");
+      SERIAL_PROTOCOLLNPGM("Cap:Z_PROBE:0");
     #endif
 
     // SOFTWARE_POWER (G30)
-    SERIAL_PROTOCOLPGM("Cap:");
     #if HAS_POWER_SWITCH
-      SERIAL_PROTOCOLLNPGM("SOFTWARE_POWER:1");
+      SERIAL_PROTOCOLLNPGM("Cap:SOFTWARE_POWER:1");
     #else
-      SERIAL_PROTOCOLLNPGM("SOFTWARE_POWER:0");
+      SERIAL_PROTOCOLLNPGM("Cap:SOFTWARE_POWER:0");
     #endif
 
     // TOGGLE_LIGHTS (M355)
-    SERIAL_PROTOCOLPGM("Cap:");
     #if HAS_CASE_LIGHT
-      SERIAL_PROTOCOLLNPGM("TOGGLE_LIGHTS:1");
+      SERIAL_PROTOCOLLNPGM("Cap:TOGGLE_LIGHTS:1");
     #else
-      SERIAL_PROTOCOLLNPGM("TOGGLE_LIGHTS:0");
+      SERIAL_PROTOCOLLNPGM("Cap:TOGGLE_LIGHTS:0");
     #endif
 
     // EMERGENCY_PARSER (M108, M112, M410)
-    SERIAL_PROTOCOLPGM("Cap:");
     #if ENABLED(EMERGENCY_PARSER)
-      SERIAL_PROTOCOLLNPGM("EMERGENCY_PARSER:1");
+      SERIAL_PROTOCOLLNPGM("Cap:EMERGENCY_PARSER:1");
     #else
-      SERIAL_PROTOCOLLNPGM("EMERGENCY_PARSER:0");
+      SERIAL_PROTOCOLLNPGM("Cap:EMERGENCY_PARSER:0");
     #endif
 
   #endif // EXTENDED_CAPABILITIES_REPORT
@@ -7645,9 +7648,12 @@ void tool_change(const uint8_t tmp_extruder, const float fr_mm_s/*=0.0*/, bool n
                 #if ENABLED(DEBUG_LEVELING_FEATURE)
                   if (DEBUGGING(LEVELING)) SERIAL_ECHOPAIR("Z before MBL: ", current_position[Z_AXIS]);
                 #endif
-                float xpos = RAW_CURRENT_POSITION(X_AXIS),
-                      ypos = RAW_CURRENT_POSITION(Y_AXIS);
-                current_position[Z_AXIS] += mbl.get_z(xpos + xydiff[X_AXIS], ypos + xydiff[Y_AXIS]) - mbl.get_z(xpos, ypos);
+                float x2 = current_position[X_AXIS] + xydiff[X_AXIS],
+                      y2 = current_position[Y_AXIS] + xydiff[Y_AXIS],
+                      z1 = current_position[Z_AXIS], z2 = z1;
+                planner.apply_leveling(current_position[X_AXIS], current_position[Y_AXIS], z1);
+                planner.apply_leveling(x2, y2, z2);
+                current_position[Z_AXIS] += z2 - z1;
                 #if ENABLED(DEBUG_LEVELING_FEATURE)
                   if (DEBUGGING(LEVELING))
                     SERIAL_ECHOLNPAIR(" after: ", current_position[Z_AXIS]);
diff --git a/Marlin/configuration_store.cpp b/Marlin/configuration_store.cpp
index d6bc2be..f1f898c 100644
--- a/Marlin/configuration_store.cpp
+++ b/Marlin/configuration_store.cpp
@@ -786,10 +786,10 @@ void Config_ResetDefault() {
       }
       for (uint8_t e = 1; e < HOTENDS; e++) {
         SERIAL_ECHOPAIR("  M218 T", (int)e);
-        SERIAL_ECHOPAIR(" X", hotend_offset[X_AXIS]);
-        SERIAL_ECHOPAIR(" Y", hotend_offset[Y_AXIS]);
+        SERIAL_ECHOPAIR(" X", hotend_offset[X_AXIS][e]);
+        SERIAL_ECHOPAIR(" Y", hotend_offset[Y_AXIS][e]);
         #if ENABLED(DUAL_X_CARRIAGE) || ENABLED(SWITCHING_EXTRUDER)
-          SERIAL_ECHOPAIR(" Z", hotend_offset[Z_AXIS]);
+          SERIAL_ECHOPAIR(" Z", hotend_offset[Z_AXIS][e]);
         #endif
         SERIAL_EOL;
       }
diff --git a/Marlin/duration_t.h b/Marlin/duration_t.h
index 926fc13..1123b4b 100644
--- a/Marlin/duration_t.h
+++ b/Marlin/duration_t.h
@@ -145,15 +145,22 @@ struct duration_t {
    *  99:59
    *  11d 12:33
    */
-  void toDigital(char *buffer, bool with_days=false) const {
+  uint8_t toDigital(char *buffer, bool with_days=false) const {
     uint16_t h = uint16_t(this->hour()),
              m = uint16_t(this->minute() % 60UL);
-    if (with_days)
-      sprintf_P(buffer, PSTR("%ud %02u:%02u"), this->day(), h, m);
-    else if (h < 100)
+    if (with_days) {
+      uint16_t d = this->day();
+      sprintf_P(buffer, PSTR("%ud %02u:%02u"), d, h, m);
+      return d >= 10 ? 8 : 7;
+    }
+    else if (h < 100) {
       sprintf_P(buffer, PSTR("%02u:%02u"), h % 24, m);
-    else
+      return 5;
+    }
+    else {
       sprintf_P(buffer, PSTR("%u:%02u"), h, m);
+      return 6;
+    }
   }
 };
 
diff --git a/Marlin/language_bg.h b/Marlin/language_bg.h
index 094aed0..520b935 100644
--- a/Marlin/language_bg.h
+++ b/Marlin/language_bg.h
@@ -36,12 +36,17 @@
 #define WELCOME_MSG                         MACHINE_NAME " Готов."
 #define MSG_SD_INSERTED                     "Картата е поставена"
 #define MSG_SD_REMOVED                      "Картата е извадена"
+#define MSG_LCD_ENDSTOPS                    "Endstops" // Max length 8 characters
 #define MSG_MAIN                            "Меню"
 #define MSG_AUTOSTART                       "Автостарт"
 #define MSG_DISABLE_STEPPERS                "Изкл. двигатели"
 #define MSG_AUTO_HOME                       "Паркиране"
+#define MSG_AUTO_HOME_X                     "Home X"
+#define MSG_AUTO_HOME_Y                     "Home Y"
+#define MSG_AUTO_HOME_Z                     "Home Z"
 #define MSG_LEVEL_BED_HOMING                "Homing XYZ"
 #define MSG_LEVEL_BED_WAITING               "Click to Begin"
+#define MSG_LEVEL_BED_NEXT_POINT            "Next Point"
 #define MSG_LEVEL_BED_DONE                  "Leveling Done!"
 #define MSG_LEVEL_BED_CANCEL                "Cancel"
 #define MSG_SET_HOME_OFFSETS                "Задай Начало"
@@ -72,6 +77,7 @@
 #define MSG_MOVE_1MM                        "Премести с 1mm"
 #define MSG_MOVE_10MM                       "Премести с 10mm"
 #define MSG_SPEED                           "Скорост"
+#define MSG_BED_Z                           "Bed Z"
 #define MSG_NOZZLE                          LCD_STR_THERMOMETER " Дюза"
 #define MSG_BED                             LCD_STR_THERMOMETER " Легло"
 #define MSG_FAN_SPEED                       "Вентилатор"
@@ -87,6 +93,7 @@
 #define MSG_PID_I                           "PID-I"
 #define MSG_PID_D                           "PID-D"
 #define MSG_PID_C                           "PID-C"
+#define MSG_SELECT                          "Select"
 #define MSG_ACC                             "Acc"
 #define MSG_VX_JERK                         "Vx-jerk"
 #define MSG_VY_JERK                         "Vy-jerk"
@@ -97,6 +104,7 @@
 #define MSG_VTRAV_MIN                       "VTrav min"
 #define MSG_AMAX                            "Amax "
 #define MSG_A_RETRACT                       "A-откат"
+#define MSG_A_TRAVEL                        "A-travel"
 #define MSG_XSTEPS                          "X стъпки/mm"
 #define MSG_YSTEPS                          "Y стъпки/mm"
 #define MSG_ZSTEPS                          "Z стъпки/mm"
@@ -138,6 +146,8 @@
 #define MSG_INIT_SDCARD                     "Иниц. SD-Карта"
 #define MSG_CNG_SDCARD                      "Смяна SD-Карта"
 #define MSG_ZPROBE_OUT                      "Z-сондата е извадена"
+#define MSG_BLTOUCH_SELFTEST                "BLTouch Self-Test"
+#define MSG_BLTOUCH_RESET                   "Reset BLTouch"
 #define MSG_HOME                            "Home"  // Used as MSG_HOME " " MSG_X MSG_Y MSG_Z " " MSG_FIRST
 #define MSG_FIRST                           "first"
 #define MSG_ZPROBE_ZOFFSET                  "Z Отстояние"
@@ -145,10 +155,91 @@
 #define MSG_BABYSTEP_Y                      "Министъпка Y"
 #define MSG_BABYSTEP_Z                      "Министъпка Z"
 #define MSG_ENDSTOP_ABORT                   "Стоп Кр.Изключватели"
+#define MSG_HEATING_FAILED_LCD              "Heating failed"
+#define MSG_ERR_REDUNDANT_TEMP              "Err: REDUNDANT TEMP"
+#define MSG_THERMAL_RUNAWAY                 "THERMAL RUNAWAY"
+#define MSG_ERR_MAXTEMP                     "Err: MAXTEMP"
+#define MSG_ERR_MINTEMP                     "Err: MINTEMP"
+#define MSG_ERR_MAXTEMP_BED                 "Err: MAXTEMP BED"
+#define MSG_ERR_MINTEMP_BED                 "Err: MINTEMP BED"
+#define MSG_ERR_Z_HOMING                    "G28 Z Forbidden"
+#define MSG_HALTED                          "PRINTER HALTED"
+#define MSG_PLEASE_RESET                    "Please reset"
+#define MSG_SHORT_DAY                       "d" // One character only
+#define MSG_SHORT_HOUR                      "h" // One character only
+#define MSG_SHORT_MINUTE                    "m" // One character only
+#define MSG_HEATING                         "Heating..."
+#define MSG_HEATING_COMPLETE                "Heating done."
+#define MSG_BED_HEATING                     "Bed Heating."
+#define MSG_BED_DONE                        "Bed done."
 #define MSG_DELTA_CALIBRATE                 "Делта Калибровка"
 #define MSG_DELTA_CALIBRATE_X               "Калибровка X"
 #define MSG_DELTA_CALIBRATE_Y               "Калибровка Y"
 #define MSG_DELTA_CALIBRATE_Z               "Калибровка Z"
 #define MSG_DELTA_CALIBRATE_CENTER          "Калибровка Център"
 
+#define MSG_INFO_MENU                       "About Printer"
+#define MSG_INFO_PRINTER_MENU               "Printer Info"
+#define MSG_INFO_STATS_MENU                 "Printer Stats"
+#define MSG_INFO_BOARD_MENU                 "Board Info"
+#define MSG_INFO_THERMISTOR_MENU            "Thermistors"
+#define MSG_INFO_EXTRUDERS                  "Extruders"
+#define MSG_INFO_BAUDRATE                   "Baud"
+#define MSG_INFO_PROTOCOL                   "Protocol"
+#define MSG_LIGHTS_ON                       "Case light on"
+#define MSG_LIGHTS_OFF                      "Case light off"
+
+#if LCD_WIDTH >= 20
+  #define MSG_INFO_PRINT_COUNT              "Print Count"
+  #define MSG_INFO_COMPLETED_PRINTS         "Completed"
+  #define MSG_INFO_PRINT_TIME               "Total print time"
+  #define MSG_INFO_PRINT_LONGEST            "Longest job time"
+  #define MSG_INFO_PRINT_FILAMENT           "Extruded total"
+#else
+  #define MSG_INFO_PRINT_COUNT              "Prints"
+  #define MSG_INFO_COMPLETED_PRINTS         "Completed"
+  #define MSG_INFO_PRINT_TIME               "Total"
+  #define MSG_INFO_PRINT_LONGEST            "Longest"
+  #define MSG_INFO_PRINT_FILAMENT           "Extruded"
+#endif
+
+#define MSG_INFO_MIN_TEMP                   "Min Temp"
+#define MSG_INFO_MAX_TEMP                   "Max Temp"
+#define MSG_INFO_PSU                        "Power Supply"
+
+#define MSG_DRIVE_STRENGTH                  "Drive Strength"
+#define MSG_DAC_PERCENT                     "Driver %"
+#define MSG_DAC_EEPROM_WRITE                "DAC EEPROM Write"
+#define MSG_FILAMENT_CHANGE_HEADER          "CHANGE FILAMENT"
+#define MSG_FILAMENT_CHANGE_OPTION_HEADER   "CHANGE OPTIONS:"
+#define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  "Extrude more"
+#define MSG_FILAMENT_CHANGE_OPTION_RESUME   "Resume print"
+#if LCD_HEIGHT >= 4
+  #define MSG_FILAMENT_CHANGE_INIT_1          "Wait for start"
+  #define MSG_FILAMENT_CHANGE_INIT_2          "of the filament"
+  #define MSG_FILAMENT_CHANGE_INIT_3          "change"
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Wait for"
+  #define MSG_FILAMENT_CHANGE_UNLOAD_2        "filament unload"
+  #define MSG_FILAMENT_CHANGE_UNLOAD_3        ""
+  #define MSG_FILAMENT_CHANGE_INSERT_1        "Insert filament"
+  #define MSG_FILAMENT_CHANGE_INSERT_2        "and press button"
+  #define MSG_FILAMENT_CHANGE_INSERT_3        "to continue..."
+  #define MSG_FILAMENT_CHANGE_LOAD_1          "Wait for"
+  #define MSG_FILAMENT_CHANGE_LOAD_2          "filament load"
+  #define MSG_FILAMENT_CHANGE_LOAD_3          ""
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Wait for"
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_2       "filament extrude"
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_3       ""
+  #define MSG_FILAMENT_CHANGE_RESUME_1        "Wait for print"
+  #define MSG_FILAMENT_CHANGE_RESUME_2        "to resume"
+  #define MSG_FILAMENT_CHANGE_RESUME_3        ""
+#else // LCD_HEIGHT < 4
+  #define MSG_FILAMENT_CHANGE_INIT_1          "Please wait..."
+  #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Ejecting..."
+  #define MSG_FILAMENT_CHANGE_INSERT_1        "Insert and Click"
+  #define MSG_FILAMENT_CHANGE_LOAD_1          "Loading..."
+  #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Extruding..."
+  #define MSG_FILAMENT_CHANGE_RESUME_1        "Resuming..."
+#endif // LCD_HEIGHT < 4
+
 #endif // LANGUAGE_BG_H
diff --git a/Marlin/language_hr.h b/Marlin/language_hr.h
index d23e18e..3bf88de 100644
--- a/Marlin/language_hr.h
+++ b/Marlin/language_hr.h
@@ -44,7 +44,7 @@
 #define MSG_AUTO_HOME_Y                     "Home-aj Y"
 #define MSG_AUTO_HOME_Z                     "Home-aj Z"
 #define MSG_LEVEL_BED_HOMING                "Home-aj XYZ"
-#define MSG_LEVEL_BED_WAITING               "Click to Begin"
+#define MSG_LEVEL_BED_WAITING               "Klikni za početak"
 #define MSG_LEVEL_BED_NEXT_POINT            "Sljedeća točka"
 #define MSG_LEVEL_BED_DONE                  "Niveliranje gotovo!"
 #define MSG_LEVEL_BED_CANCEL                "Otkaži"
@@ -77,7 +77,7 @@
 #define MSG_MOVE_10MM                       "Miči 10mm"
 #define MSG_SPEED                           "Brzina"
 #define MSG_BED_Z                           "Bed Z"
-#define MSG_NOZZLE                          "Nozzle"
+#define MSG_NOZZLE                          "Dizna"
 #define MSG_BED                             "Bed"
 #define MSG_FAN_SPEED                       "Brzina ventilatora"
 #define MSG_FLOW                            "Flow"
@@ -108,7 +108,7 @@
 #define MSG_ZSTEPS                          "Zsteps/mm"
 #define MSG_ESTEPS                          "Esteps/mm"
 #define MSG_TEMPERATURE                     "Temperature"
-#define MSG_MOTION                          "Motion"
+#define MSG_MOTION                          "Gibanje"
 #define MSG_VOLUMETRIC                      "Filament"
 #define MSG_VOLUMETRIC_ENABLED              "E in mm3"
 #define MSG_FILAMENT_DIAM                   "Fil. Dia."
@@ -144,6 +144,8 @@
 #define MSG_INIT_SDCARD                     "Init. SD karticu"
 #define MSG_CNG_SDCARD                      "Promijeni SD karticu"
 #define MSG_ZPROBE_OUT                      "Z probe out. bed"
+#define MSG_BLTOUCH_SELFTEST                "BLTouch Self-Test"
+#define MSG_BLTOUCH_RESET                   "Reset BLTouch"
 #define MSG_HOME                            "Home"  // Used as MSG_HOME " " MSG_X MSG_Y MSG_Z " " MSG_FIRST
 #define MSG_FIRST                           "first"
 #define MSG_ZPROBE_ZOFFSET                  "Z Offset"
@@ -151,13 +153,19 @@
 #define MSG_BABYSTEP_Y                      "Babystep Y"
 #define MSG_BABYSTEP_Z                      "Babystep Z"
 #define MSG_ENDSTOP_ABORT                   "Endstop abort"
-#define MSG_HEATING_FAILED_LCD              "Heating failed"
+#define MSG_HEATING_FAILED_LCD              "Grijanje neuspješno"
 #define MSG_ERR_REDUNDANT_TEMP              "Err: REDUNDANT TEMP"
 #define MSG_THERMAL_RUNAWAY                 "THERMAL RUNAWAY"
 #define MSG_ERR_MAXTEMP                     "Err: MAXTEMP"
 #define MSG_ERR_MINTEMP                     "Err: MINTEMP"
 #define MSG_ERR_MAXTEMP_BED                 "Err: MAXTEMP BED"
 #define MSG_ERR_MINTEMP_BED                 "Err: MINTEMP BED"
+#define MSG_ERR_Z_HOMING                    "G28 Z Forbidden"
+#define MSG_HALTED                          "PRINTER HALTED"
+#define MSG_PLEASE_RESET                    "Please reset"
+#define MSG_SHORT_DAY                       "d" // One character only
+#define MSG_SHORT_HOUR                      "h" // One character only
+#define MSG_SHORT_MINUTE                    "m" // One character only
 #define MSG_HEATING                         "Grijanje..."
 #define MSG_HEATING_COMPLETE                "Grijanje gotovo."
 #define MSG_BED_HEATING                     "Grijanje Bed-a."
@@ -167,5 +175,61 @@
 #define MSG_DELTA_CALIBRATE_Y               "Kalibriraj Y"
 #define MSG_DELTA_CALIBRATE_Z               "Kalibriraj Z"
 #define MSG_DELTA_CALIBRATE_CENTER          "Kalibriraj Središte"
-
+#define MSG_INFO_MENU                       "O printeru"
+#define MSG_INFO_PRINTER_MENU               "Podaci o printeru"
+#define MSG_INFO_STATS_MENU                 "Statistika printera"
+#define MSG_INFO_BOARD_MENU                 "Podaci o elektronici"
+#define MSG_INFO_THERMISTOR_MENU            "Termistori"
+#define MSG_INFO_EXTRUDERS                  "Extruderi"
+#define MSG_INFO_BAUDRATE                   "Baud"
+#define MSG_INFO_PROTOCOL                   "Protokol"
+#define MSG_LIGHTS_ON                       "Upali osvjetljenje"
+#define MSG_LIGHTS_OFF                      "Ugasi osvjetljenje"
+#if LCD_WIDTH >= 20
+    #define MSG_INFO_PRINT_COUNT              "Broj printova"
+    #define MSG_INFO_COMPLETED_PRINTS         "Završeni"
+    #define MSG_INFO_PRINT_TIME               "Ukupno vrijeme printanja"
+    #define MSG_INFO_PRINT_LONGEST            "Trajanje najdužeg printa"
+    #define MSG_INFO_PRINT_FILAMENT           "Extrudirano ukupno"
+#else
+    #define MSG_INFO_PRINT_COUNT              "Printovi"
+    #define MSG_INFO_COMPLETED_PRINTS         "Završeni"
+    #define MSG_INFO_PRINT_TIME               "Ukupno"
+    #define MSG_INFO_PRINT_LONGEST            "Najduži"
+    #define MSG_INFO_PRINT_FILAMENT           "Extrudirano"
+#endif
+  #define MSG_INFO_MIN_TEMP                   "Min Temp"
+  #define MSG_INFO_MAX_TEMP                   "Max Temp"
+  #define MSG_INFO_PSU                        "Napajanje"
+  #define MSG_DRIVE_STRENGTH                  "Drive Strength"
+  #define MSG_DAC_PERCENT                     "Driver %"
+  #define MSG_DAC_EEPROM_WRITE                "DAC EEPROM Write"
+  #define MSG_FILAMENT_CHANGE_HEADER          "CHANGE FILAMENT"
+  #define MSG_FILAMENT_CHANGE_OPTION_HEADER   "CHANGE OPTIONS:"
+  #define MSG_FILAMENT_CHANGE_OPTION_EXTRUDE  "Extrudiraj više"
+  #define MSG_FILAMENT_CHANGE_OPTION_RESUME   "Nastavi print"
+#if LCD_HEIGHT >= 4
+    #define MSG_FILAMENT_CHANGE_INIT_1          "Čekaj početak"
+    #define MSG_FILAMENT_CHANGE_INIT_2          "filamenta"
+    #define MSG_FILAMENT_CHANGE_INIT_3          "promijeni"
+    #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Čekaj"
+    #define MSG_FILAMENT_CHANGE_UNLOAD_2        "filament unload"
+    #define MSG_FILAMENT_CHANGE_INSERT_1        "Umetni filament"
+    #define MSG_FILAMENT_CHANGE_INSERT_2        "i pritisni tipku"
+    #define MSG_FILAMENT_CHANGE_INSERT_3        "za nastavak..."
+    #define MSG_FILAMENT_CHANGE_LOAD_1          "Pričekaj"
+    #define MSG_FILAMENT_CHANGE_LOAD_2          "filament load"
+    #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Pričekaj"
+    #define MSG_FILAMENT_CHANGE_EXTRUDE_2       "filament extrude"
+    #define MSG_FILAMENT_CHANGE_RESUME_1        "Wait for print"
+    #define MSG_FILAMENT_CHANGE_RESUME_2        "to resume"
+#else // LCD_HEIGHT < 4
+    #define MSG_FILAMENT_CHANGE_INIT_1          "Pričekaj..."
+    #define MSG_FILAMENT_CHANGE_UNLOAD_1        "Ejecting..."
+    #define MSG_FILAMENT_CHANGE_INSERT_1        "Insert and Click"
+    #define MSG_FILAMENT_CHANGE_LOAD_1          "Loading..."
+    #define MSG_FILAMENT_CHANGE_EXTRUDE_1       "Extrudiranje..."
+    #define MSG_FILAMENT_CHANGE_RESUME_1        "Nastavljam..."
+  #endif
+#endif // LCD_HEIGHT < 4
 #endif // LANGUAGE_HR_H
diff --git a/Marlin/mesh_bed_leveling.h b/Marlin/mesh_bed_leveling.h
index 0e66bb8..217cd60 100644
--- a/Marlin/mesh_bed_leveling.h
+++ b/Marlin/mesh_bed_leveling.h
@@ -36,54 +36,58 @@
 
     void reset();
 
-    static FORCE_INLINE float get_probe_x(int8_t i) { return MESH_MIN_X + (MESH_X_DIST) * i; }
-    static FORCE_INLINE float get_probe_y(int8_t i) { return MESH_MIN_Y + (MESH_Y_DIST) * i; }
-    void set_z(const int8_t px, const int8_t py, const float z) { z_values[py][px] = z; }
+    static FORCE_INLINE float get_probe_x(const int8_t i) { return MESH_MIN_X + (MESH_X_DIST) * i; }
+    static FORCE_INLINE float get_probe_y(const int8_t i) { return MESH_MIN_Y + (MESH_Y_DIST) * i; }
+    void set_z(const int8_t px, const int8_t py, const float &z) { z_values[py][px] = z; }
 
-    bool active()                 { return TEST(status, MBL_STATUS_ACTIVE_BIT); }
-    void set_active(bool onOff)   { if (onOff) SBI(status, MBL_STATUS_ACTIVE_BIT); else CBI(status, MBL_STATUS_ACTIVE_BIT); }
-    bool has_mesh()               { return TEST(status, MBL_STATUS_HAS_MESH_BIT); }
-    void set_has_mesh(bool onOff) { if (onOff) SBI(status, MBL_STATUS_HAS_MESH_BIT); else CBI(status, MBL_STATUS_HAS_MESH_BIT); }
+    bool active() const                 { return TEST(status, MBL_STATUS_ACTIVE_BIT); }
+    void set_active(const bool onOff)   { onOff ? SBI(status, MBL_STATUS_ACTIVE_BIT) : CBI(status, MBL_STATUS_ACTIVE_BIT); }
+    bool has_mesh() const               { return TEST(status, MBL_STATUS_HAS_MESH_BIT); }
+    void set_has_mesh(const bool onOff) { onOff ? SBI(status, MBL_STATUS_HAS_MESH_BIT) : CBI(status, MBL_STATUS_HAS_MESH_BIT); }
 
-    inline void zigzag(int8_t index, int8_t &px, int8_t &py) {
+    inline void zigzag(const int8_t index, int8_t &px, int8_t &py) const {
       px = index % (MESH_NUM_X_POINTS);
       py = index / (MESH_NUM_X_POINTS);
       if (py & 1) px = (MESH_NUM_X_POINTS - 1) - px; // Zig zag
     }
 
-    void set_zigzag_z(int8_t index, float z) {
+    void set_zigzag_z(const int8_t index, const float &z) {
       int8_t px, py;
       zigzag(index, px, py);
       set_z(px, py, z);
     }
 
-    int8_t cell_index_x(float x) {
+    int8_t cell_index_x(const float &x) const {
       int8_t cx = (x - (MESH_MIN_X)) * (1.0 / (MESH_X_DIST));
       return constrain(cx, 0, (MESH_NUM_X_POINTS) - 2);
     }
 
-    int8_t cell_index_y(float y) {
+    int8_t cell_index_y(const float &y) const {
       int8_t cy = (y - (MESH_MIN_Y)) * (1.0 / (MESH_Y_DIST));
       return constrain(cy, 0, (MESH_NUM_Y_POINTS) - 2);
     }
 
-    int8_t probe_index_x(float x) {
+    int8_t probe_index_x(const float &x) const {
       int8_t px = (x - (MESH_MIN_X) + (MESH_X_DIST) * 0.5) * (1.0 / (MESH_X_DIST));
       return (px >= 0 && px < (MESH_NUM_X_POINTS)) ? px : -1;
     }
 
-    int8_t probe_index_y(float y) {
+    int8_t probe_index_y(const float &y) const {
       int8_t py = (y - (MESH_MIN_Y) + (MESH_Y_DIST) * 0.5) * (1.0 / (MESH_Y_DIST));
       return (py >= 0 && py < (MESH_NUM_Y_POINTS)) ? py : -1;
     }
 
-    float calc_z0(float a0, float a1, float z1, float a2, float z2) {
-      float delta_z = (z2 - z1) / (a2 - a1);
-      float delta_a = a0 - a1;
+    float calc_z0(const float &a0, const float &a1, const float &z1, const float &a2, const float &z2) const {
+      const float delta_z = (z2 - z1) / (a2 - a1);
+      const float delta_a = a0 - a1;
       return z1 + delta_a * delta_z;
     }
 
-    float get_z(float x0, float y0) {
+    float get_z(const float &x0, const float &y0
+      #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
+        , const float &factor
+      #endif
+    ) const {
       int8_t cx = cell_index_x(x0),
              cy = cell_index_y(y0);
       if (cx < 0 || cy < 0) return z_offset;
@@ -96,7 +100,12 @@
       float z0 = calc_z0(y0,
                          get_probe_y(cy), z1,
                          get_probe_y(cy + 1), z2);
-      return z0 + z_offset;
+
+      #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
+        return z0 * factor + z_offset;
+      #else
+        return z0 + z_offset;
+      #endif
     }
   };
 
diff --git a/Marlin/pinsDebug.h b/Marlin/pinsDebug.h
index 9fb885f..eb5584d 100644
--- a/Marlin/pinsDebug.h
+++ b/Marlin/pinsDebug.h
@@ -730,21 +730,13 @@ static bool pwm_status(uint8_t pin) {
 #define WGM_TEST2 (WGM == 0 || WGM == 4 || WGM == 12 || WGM == 13)
 
 static void err_is_counter() {
-  SERIAL_PROTOCOLPGM("   Can't ");
-  SERIAL_PROTOCOLPGM("be used as a PWM because ");
-  SERIAL_PROTOCOLPGM("of counter mode");
+  SERIAL_PROTOCOLPGM("   Can't be used as a PWM because of counter mode");
 }
 static void err_is_interrupt() {
-  SERIAL_PROTOCOLPGM("   Can't ");
-  SERIAL_PROTOCOLPGM("be used as a PWM because ");
-  SERIAL_PROTOCOLPGM("it's ");
-  SERIAL_PROTOCOLPGM("being used as an interrupt");
+  SERIAL_PROTOCOLPGM("   Can't be used as a PWM because it's being used as an interrupt");
 }
 static void err_prob_interrupt() {
-  SERIAL_PROTOCOLPGM("   Probably can't ");
-  SERIAL_PROTOCOLPGM("be used as a PWM because ");
-  SERIAL_PROTOCOLPGM("counter/timer is ");
-  SERIAL_PROTOCOLPGM("being used as an interrupt");
+  SERIAL_PROTOCOLPGM("   Probably can't be used as a PWM because counter/timer is being used as an interrupt");
 }
 static void can_be_used() { SERIAL_PROTOCOLPGM("   can be used as PWM   "); }
 
diff --git a/Marlin/planner.cpp b/Marlin/planner.cpp
index ea9dcf2..80cfb55 100644
--- a/Marlin/planner.cpp
+++ b/Marlin/planner.cpp
@@ -559,7 +559,7 @@ void Planner::check_axes_activity() {
     #if ENABLED(MESH_BED_LEVELING)
 
       if (mbl.active())
-        lz += mbl.get_z(RAW_X_POSITION(lx), RAW_Y_POSITION(ly)) * z_fade_factor;
+        lz += mbl.get_z(RAW_X_POSITION(lx), RAW_Y_POSITION(ly), z_fade_factor);
 
     #elif ABL_PLANAR
 
@@ -595,7 +595,7 @@ void Planner::check_axes_activity() {
 
       if (mbl.active()) {
         #if ENABLED(ENABLE_LEVELING_FADE_HEIGHT)
-          const float c = mbl.get_z(RAW_X_POSITION(logical[X_AXIS]), RAW_Y_POSITION(logical[Y_AXIS]));
+          const float c = mbl.get_z(RAW_X_POSITION(logical[X_AXIS]), RAW_Y_POSITION(logical[Y_AXIS]), 1.0);
           logical[Z_AXIS] = (z_fade_height * (RAW_Z_POSITION(logical[Z_AXIS]) - c)) / (z_fade_height - c);
         #else
           logical[Z_AXIS] -= mbl.get_z(RAW_X_POSITION(logical[X_AXIS]), RAW_Y_POSITION(logical[Y_AXIS]));
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index a7104d4..73f7832 100755
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -2328,9 +2328,9 @@ void kill_screen(const char* lcd_msg) {
    *   bool _menu_edit_int3();
    *   void menu_edit_int3(); // edit int (interactively)
    *   void menu_edit_callback_int3(); // edit int (interactively) with callback on completion
-   *   void _menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
-   *   void menu_action_setting_edit_int3(const char* pstr, int* ptr, int minValue, int maxValue);
-   *   void menu_action_setting_edit_callback_int3(const char* pstr, int* ptr, int minValue, int maxValue, screenFunc_t callback); // edit int with callback
+   *   void _menu_action_setting_edit_int3(const char * const pstr, int * const ptr, const int minValue, const int maxValue);
+   *   void menu_action_setting_edit_int3(const char * const pstr, int * const ptr, const int minValue, const int maxValue);
+   *   void menu_action_setting_edit_callback_int3(const char * const pstr, int * const ptr, const int minValue, const int maxValue, const screenFunc_t callback); // edit int with callback
    *
    * You can then use one of the menu macros to present the edit interface:
    *   MENU_ITEM_EDIT(int3, MSG_SPEED, &feedrate_percentage, 10, 999)
@@ -2343,51 +2343,52 @@ void kill_screen(const char* lcd_msg) {
    *
    *       menu_action_setting_edit_int3(PSTR(MSG_SPEED), &feedrate_percentage, 10, 999)
    */
-  #define menu_edit_type(_type, _name, _strFunc, scale) \
+  #define menu_edit_type(_type, _name, _strFunc, _scale) \
     bool _menu_edit_ ## _name () { \
       ENCODER_DIRECTION_NORMAL(); \
       if ((int32_t)encoderPosition < 0) encoderPosition = 0; \
       if ((int32_t)encoderPosition > maxEditValue) encoderPosition = maxEditValue; \
       if (lcdDrawUpdate) \
-        lcd_implementation_drawedit(editLabel, _strFunc(((_type)((int32_t)encoderPosition + minEditValue)) / scale)); \
+        lcd_implementation_drawedit(editLabel, _strFunc(((_type)((int32_t)encoderPosition + minEditValue)) * (1.0 / _scale))); \
       if (lcd_clicked) { \
-        *((_type*)editValue) = ((_type)((int32_t)encoderPosition + minEditValue)) / scale; \
+        *((_type*)editValue) = ((_type)((int32_t)encoderPosition + minEditValue)) * (1.0 / _scale); \
         lcd_goto_previous_menu(); \
       } \
       return lcd_clicked; \
     } \
     void menu_edit_ ## _name () { _menu_edit_ ## _name(); } \
     void menu_edit_callback_ ## _name () { if (_menu_edit_ ## _name ()) (*callbackFunc)(); } \
-    void _menu_action_setting_edit_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue) { \
+    void _menu_action_setting_edit_ ## _name (const char * const pstr, _type* const ptr, const _type minValue, const _type maxValue) { \
       lcd_save_previous_screen(); \
       \
       lcdDrawUpdate = LCDVIEW_CLEAR_CALL_REDRAW; \
       \
       editLabel = pstr; \
       editValue = ptr; \
-      minEditValue = minValue * scale; \
-      maxEditValue = maxValue * scale - minEditValue; \
-      encoderPosition = (*ptr) * scale - minEditValue; \
+      minEditValue = minValue * _scale; \
+      maxEditValue = maxValue * _scale - minEditValue; \
+      encoderPosition = (*ptr) * _scale - minEditValue; \
     } \
-    void menu_action_setting_edit_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue) { \
+    void menu_action_setting_edit_ ## _name (const char * const pstr, _type * const ptr, const _type minValue, const _type maxValue) { \
       _menu_action_setting_edit_ ## _name(pstr, ptr, minValue, maxValue); \
       currentScreen = menu_edit_ ## _name; \
     }\
-    void menu_action_setting_edit_callback_ ## _name (const char* pstr, _type* ptr, _type minValue, _type maxValue, screenFunc_t callback) { \
+    void menu_action_setting_edit_callback_ ## _name (const char * const pstr, _type * const ptr, const _type minValue, const _type maxValue, const screenFunc_t callback) { \
       _menu_action_setting_edit_ ## _name(pstr, ptr, minValue, maxValue); \
       currentScreen = menu_edit_callback_ ## _name; \
       callbackFunc = callback; \
-    }
-
-  menu_edit_type(int, int3, itostr3, 1)
-  menu_edit_type(float, float3, ftostr3, 1)
-  menu_edit_type(float, float32, ftostr32, 100)
-  menu_edit_type(float, float43, ftostr43sign, 1000)
-  menu_edit_type(float, float5, ftostr5rj, 0.01)
-  menu_edit_type(float, float51, ftostr51sign, 10)
-  menu_edit_type(float, float52, ftostr52sign, 100)
-  menu_edit_type(float, float62, ftostr62sign, 100)
-  menu_edit_type(unsigned long, long5, ftostr5rj, 0.01)
+    } \
+    typedef void _name
+
+  menu_edit_type(int, int3, itostr3, 1);
+  menu_edit_type(float, float3, ftostr3, 1.0);
+  menu_edit_type(float, float32, ftostr32, 100.0);
+  menu_edit_type(float, float43, ftostr43sign, 1000.0);
+  menu_edit_type(float, float5, ftostr5rj, 0.01);
+  menu_edit_type(float, float51, ftostr51sign, 10.0);
+  menu_edit_type(float, float52, ftostr52sign, 100.0);
+  menu_edit_type(float, float62, ftostr62sign, 100.0);
+  menu_edit_type(unsigned long, long5, ftostr5rj, 0.01);
 
   /**
    *
diff --git a/Marlin/ultralcd_impl_DOGM.h b/Marlin/ultralcd_impl_DOGM.h
index 50956b6..46a5225 100644
--- a/Marlin/ultralcd_impl_DOGM.h
+++ b/Marlin/ultralcd_impl_DOGM.h
@@ -452,8 +452,14 @@ static void lcd_implementation_status_screen() {
     // Progress bar frame
     //
 
-    if (PAGE_CONTAINS(49, 52 - (TALL_FONT_CORRECTION)))
-      u8g.drawFrame(54, 49, 73, 4 - (TALL_FONT_CORRECTION));  // 49-52 (or 49-51)
+    #define PROGRESS_BAR_X 54
+    #define PROGRESS_BAR_WIDTH (LCD_PIXEL_WIDTH - PROGRESS_BAR_X)
+
+    if (PAGE_CONTAINS(49, 52 - (TALL_FONT_CORRECTION)))       // 49-52 (or 49-51)
+      u8g.drawFrame(
+        PROGRESS_BAR_X, 49,
+        PROGRESS_BAR_WIDTH, 4 - (TALL_FONT_CORRECTION)
+      );
 
     if (IS_SD_PRINTING) {
 
@@ -461,8 +467,11 @@ static void lcd_implementation_status_screen() {
       // Progress bar solid part
       //
 
-      if (PAGE_CONTAINS(50, 51 - (TALL_FONT_CORRECTION)))
-        u8g.drawBox(55, 50, (unsigned int)(71 * card.percentDone() * 0.01), 2 - (TALL_FONT_CORRECTION));
+      if (PAGE_CONTAINS(50, 51 - (TALL_FONT_CORRECTION)))     // 50-51 (or just 50)
+        u8g.drawBox(
+          PROGRESS_BAR_X + 1, 50,
+          (unsigned int)((PROGRESS_BAR_WIDTH - 2) * card.percentDone() * 0.01), 2 - (TALL_FONT_CORRECTION)
+        );
 
       //
       // SD Percent Complete
@@ -483,9 +492,9 @@ static void lcd_implementation_status_screen() {
     //
 
     #if DISABLED(DOGM_SD_PERCENT)
-      #define SD_DURATION_X 71
+      #define SD_DURATION_X (PROGRESS_BAR_X + (PROGRESS_BAR_WIDTH / 2) - len * (DOG_CHAR_WIDTH / 2))
     #else
-      #define SD_DURATION_X 89
+      #define SD_DURATION_X (LCD_PIXEL_WIDTH - len * DOG_CHAR_WIDTH)
     #endif
 
     if (PAGE_CONTAINS(41, 48)) {
@@ -493,9 +502,8 @@ static void lcd_implementation_status_screen() {
       char buffer[10];
       duration_t elapsed = print_job_timer.duration();
       bool has_days = (elapsed.value > 60*60*24L);
-      elapsed.toDigital(buffer, has_days);
-
-      u8g.setPrintPos(SD_DURATION_X + (has_days ? 0 : 9), 48);
+      uint8_t len = elapsed.toDigital(buffer, has_days);
+      u8g.setPrintPos(SD_DURATION_X, 48);
       lcd_print(buffer);
     }
 
@@ -749,11 +757,13 @@ static void lcd_implementation_status_screen() {
   #define lcd_implementation_drawmenu_setting_edit_callback_bool(sel, row, pstr, pstr2, data, callback) lcd_implementation_drawmenu_setting_edit_generic_P(sel, row, pstr, (*(data))?PSTR(MSG_ON):PSTR(MSG_OFF))
 
   void lcd_implementation_drawedit(const char* const pstr, const char* const value=NULL) {
-    const uint8_t labellen = lcd_strlen_P(pstr), vallen = lcd_strlen(value);
-    uint8_t lcd_width, char_width,
-            rows = (labellen > LCD_WIDTH - 2 - vallen) ? 2 : 1;
+    const uint8_t labellen = lcd_strlen_P(pstr),
+                  vallen = lcd_strlen(value);
+
+    uint8_t rows = (labellen > LCD_WIDTH - 2 - vallen) ? 2 : 1;
 
     #if ENABLED(USE_BIG_EDIT_FONT)
+      uint8_t lcd_width, char_width;
       if (labellen <= LCD_WIDTH_EDIT - 1) {
         if (labellen >= LCD_WIDTH_EDIT - vallen) rows = 2;
         lcd_width = LCD_WIDTH_EDIT + 1;
@@ -766,8 +776,8 @@ static void lcd_implementation_status_screen() {
         lcd_setFont(FONT_MENU);
       }
     #else
-      lcd_width = LCD_WIDTH - (START_COL);
-      char_width = DOG_CHAR_WIDTH;
+      constexpr uint8_t lcd_width = LCD_WIDTH - (START_COL),
+                        char_width = DOG_CHAR_WIDTH;
     #endif
 
     // Center either one or two rows
diff --git a/Marlin/ultralcd_impl_HD44780.h b/Marlin/ultralcd_impl_HD44780.h
index 8f97b28..a5efb0e 100644
--- a/Marlin/ultralcd_impl_HD44780.h
+++ b/Marlin/ultralcd_impl_HD44780.h
@@ -733,12 +733,12 @@ static void lcd_implementation_status_screen() {
 
     #endif // LCD_WIDTH >= 20 && SDSUPPORT
 
-    lcd.setCursor(LCD_WIDTH - 6, 2);
-    lcd.print(LCD_STR_CLOCK[0]);
-
     char buffer[10];
     duration_t elapsed = print_job_timer.duration();
-    elapsed.toDigital(buffer);
+    uint8_t len = elapsed.toDigital(buffer);
+
+    lcd.setCursor(LCD_WIDTH - len - 1, 2);
+    lcd.print(LCD_STR_CLOCK[0]);
     lcd_print(buffer);
 
   #endif // LCD_HEIGHT > 3
diff --git a/buildroot/share/scripts/findMissingTranslations.sh b/buildroot/share/scripts/findMissingTranslations.sh
index 0996efb..a8694d5 100755
--- a/buildroot/share/scripts/findMissingTranslations.sh
+++ b/buildroot/share/scripts/findMissingTranslations.sh
@@ -1,14 +1,42 @@
-#!/bin/bash
+#!/usr/bin/env bash
+#
+# findMissingTranslations.sh
+#
+# Locate all language strings needing an update based on English
+#
+# Usage: findMissingTranslations.sh [language codes]
+#
+# If no language codes are specified then all languages will be checked
+#
 IGNORE_DEFINES="LANGUAGE_EN_H MAPPER_NON SIMULATE_ROMFONT DISPLAY_CHARSET_ISO10646_1 MSG_X MSG_Y MSG_Z MSG_E MSG_H1 MSG_H2 MSG_H3 MSG_H4 MSG_MOVE_E1 MSG_MOVE_E2 MSG_MOVE_E3 MSG_MOVE_E4 MSG_N1 MSG_N2 MSG_N3 MSG_N4 MSG_DIAM_E1 MSG_DIAM_E2 MSG_DIAM_E3 MSG_DIAM_E4 MSG_E1 MSG_E2 MSG_E3 MSG_E4"
 
-for i in `awk '/#define/{print $2}' language_en.h`; do
-  for j in `ls language_*.h | grep -v language_en.h`; do
-    t=$(grep -c "${i}" ${j})
-    if [ "$t" -eq 0 ]; then
+[ -d "Marlin" ] && cd "Marlin"
+
+LANG="$@"
+FILES=$(ls language_*.h | grep -v language_en.h | sed -E 's/language_([^\.]+)\.h/\1/')
+declare -A STRING_MAP
+
+echo -n "Building list of missing strings..."
+
+for i in $(awk '/#define/{print $2}' language_en.h); do
+  LANG_LIST=""
+  for j in $FILES; do
+    [[ $j == "test" ]] && continue
+    [[ -n $LANG && ! "${j}" =~ $LANG ]] && continue
+    t=$(grep -c "define ${i} " language_${j}.h)
+    if [[ $t -eq 0 ]]; then
       for k in ${IGNORE_DEFINES}; do
-        [ "${k}" == "${i}" ] && continue 2;
+        [[ $k == $i ]] && continue 2
       done
-      echo "${j},${i}"
+      LANG_LIST="$LANG_LIST $j"
     fi
   done
+  [[ -z $LANG_LIST ]] && continue
+  STRING_MAP["$i"]="$LANG_LIST"
+done
+
+echo
+
+for K in $( printf "%s\n" "${!STRING_MAP[@]}" | sort ); do
+  printf "%-35s :%s\n" "$K" "${STRING_MAP[$K]}"
 done

