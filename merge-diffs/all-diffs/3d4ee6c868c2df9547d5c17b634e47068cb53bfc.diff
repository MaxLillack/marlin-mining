commit 3d4ee6c868c2df9547d5c17b634e47068cb53bfc
Merge: 986e723 0ebf896
Author: MagoKimbra <magokimbra@hotmail.com>
Date:   Sat Jan 24 13:41:15 2015 +0100

    Merge branch '4th-extruders' of https://github.com/MagoKimbra/Marlin into 4th-extruders
    
    Conflicts:
            Marlin/temperature.cpp

diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h
index f544cf6..4e07861 100644
--- a/Marlin/Configuration.h
+++ b/Marlin/Configuration.h
@@ -44,7 +44,7 @@
 // The following define selects which electronics board you have.
 // Please choose the name from boards.h that matches your setup
 #ifndef MOTHERBOARD
-  #define MOTHERBOARD BOARD_AZTEEG_X3_PRO
+  #define MOTHERBOARD BOARD_ULTIMAKER
 #endif
 
 // Define this to set a custom name for your generic Mendel,
@@ -104,10 +104,9 @@
 // 147 is Pt100 with 4k7 pullup
 // 110 is Pt100 with 1k pullup (non standard)
 
-#define TEMP_SENSOR_0 1
-#define TEMP_SENSOR_1 0
+#define TEMP_SENSOR_0 -1
+#define TEMP_SENSOR_1 -1
 #define TEMP_SENSOR_2 0
-#define TEMP_SENSOR_3 0
 #define TEMP_SENSOR_BED 0
 
 // This makes temp sensor 1 a redundant sensor for sensor 0. If the temperatures difference between these sensors is to high the print will be aborted.
@@ -122,22 +121,20 @@
 // The minimal temperature defines the temperature below which the heater will not be enabled It is used
 // to check that the wiring to the thermistor is not broken.
 // Otherwise this would lead to the heater being powered on all the time.
-#define HEATER_0_MINTEMP 5 // degC
-#define HEATER_1_MINTEMP 5 // degC
-#define HEATER_2_MINTEMP 5 // degC
-#define HEATER_3_MINTEMP 5 // degC
-#define BED_MINTEMP      5 // degC
+#define HEATER_0_MINTEMP 5
+#define HEATER_1_MINTEMP 5
+#define HEATER_2_MINTEMP 5
+#define BED_MINTEMP 5
 
 // When temperature exceeds max temp, your heater will be switched off.
 // This feature exists to protect your hotend from overheating accidentally, but *NOT* from thermistor short/failure!
 // You should use MINTEMP for thermistor short/failure protection.
-#define HEATER_0_MAXTEMP 275 // degC
-#define HEATER_1_MAXTEMP 275 // degC
-#define HEATER_2_MAXTEMP 275 // degC
-#define HEATER_3_MAXTEMP 275 // degC
-#define BED_MAXTEMP      150 // degC
+#define HEATER_0_MAXTEMP 275
+#define HEATER_1_MAXTEMP 275
+#define HEATER_2_MAXTEMP 275
+#define BED_MAXTEMP 150
 
-// If your bed has low resistance e.g. 0.6 ohm and throws the fuse you can duty cycle it to reduce the
+// If your bed has low resistance e.g. .6 ohm and throws the fuse you can duty cycle it to reduce the
 // average current. The value should be an integer and the heat bed will be turned on for 1 interval of
 // HEATER_BED_DUTY_CYCLE_DIVIDER intervals.
 //#define HEATER_BED_DUTY_CYCLE_DIVIDER 4
@@ -224,7 +221,7 @@
 //if PREVENT_DANGEROUS_EXTRUDE is on, you can still disable (uncomment) very long bits of extrusion separately.
 #define PREVENT_LENGTHY_EXTRUDE
 
-#define EXTRUDE_MINTEMP 170 // degC
+#define EXTRUDE_MINTEMP 170
 #define EXTRUDE_MAXLENGTH (X_MAX_LENGTH+Y_MAX_LENGTH) //prevent extrusion of very large distances.
 
 /*================== Thermal Runaway Protection ==============================
@@ -328,7 +325,6 @@ const bool Z_MAX_ENDSTOP_INVERTING = true; // set to true to invert the logic of
 #define INVERT_E0_DIR false   // for direct drive extruder v9 set to true, for geared extruder set to false
 #define INVERT_E1_DIR false    // for direct drive extruder v9 set to true, for geared extruder set to false
 #define INVERT_E2_DIR false   // for direct drive extruder v9 set to true, for geared extruder set to false
-#define INVERT_E3_DIR false   // for direct drive extruder v9 set to true, for geared extruder set to false
 
 // ENDSTOP SETTINGS:
 // Sets direction of endstops when homing; 1=MAX, -1=MIN
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index da5e876..86353f2 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -1764,6 +1764,7 @@ ISR(TIMER0_COMPB_vect)
         raw_temp_2_value += ADC;
       #endif
       temp_state = 8;
+<<<<<<< HEAD
       break;
     case 8: // Prepare TEMP_3
       #if defined(TEMP_3_PIN) && (TEMP_3_PIN > -1)
@@ -1784,6 +1785,28 @@ ISR(TIMER0_COMPB_vect)
       #endif
       temp_state = 10; //change so that Filament Width is also measured
       break;
+=======
+      break;
+    case 8: // Prepare TEMP_3
+      #if defined(TEMP_3_PIN) && (TEMP_3_PIN > -1)
+        #if TEMP_3_PIN > 7
+          ADCSRB = 1<<MUX5;
+        #else
+          ADCSRB = 0;
+        #endif
+        ADMUX = ((1 << REFS0) | (TEMP_3_PIN & 0x07));
+        ADCSRA |= 1<<ADSC; // Start conversion
+      #endif
+      lcd_buttons_update();
+      temp_state = 9;
+      break;
+    case 9: // Measure TEMP_3
+      #if defined(TEMP_3_PIN) && (TEMP_3_PIN > -1)
+        raw_temp_3_value += ADC;
+      #endif
+      temp_state = 10; //change so that Filament Width is also measured
+      break;
+>>>>>>> 0ebf896070e8364252df3b3f59111218f1918cc8
     case 10: //Prepare FILWIDTH 
      #if defined(FILWIDTH_PIN) && (FILWIDTH_PIN> -1) 
       #if FILWIDTH_PIN>7 
diff --git a/Marlin/ultralcd.h b/Marlin/ultralcd.h
index ae0e0bb..30175be 100644
--- a/Marlin/ultralcd.h
+++ b/Marlin/ultralcd.h
@@ -46,9 +46,9 @@
   
   extern bool cancel_heatup;
   
-#ifdef FILAMENT_LCD_DISPLAY
-  extern unsigned long message_millis;
-#endif
+  #ifdef FILAMENT_LCD_DISPLAY
+        extern unsigned long message_millis;
+  #endif
 
   void lcd_buzz(long duration,uint16_t freq);
   bool lcd_clicked();
